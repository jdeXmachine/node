[
    {
        "id": "c0c5ee6ca985e392",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "6fa705c10d44939f",
        "type": "mqtt in",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "topic": "device/B7E1C96A/realtime",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "e42cdc18ac58f86d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1090,
        "y": 60,
        "wires": [
            [
                "29ecf4909356b125"
            ]
        ]
    },
    {
        "id": "1eee19f9e6ae7dbb",
        "type": "mqtt out",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "topic": "Agilian/Main AC",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e42cdc18ac58f86d",
        "x": 1360,
        "y": 60,
        "wires": []
    },
    {
        "id": "29ecf4909356b125",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "MAPower",
        "func": "var newMsg = { payload: msg.payload.Datas[0][2] };\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 120,
        "wires": [
            [
                "f00d36fb033fa1ef",
                "dab3bb99f4626d55"
            ]
        ]
    },
    {
        "id": "3a917f17bca69d66",
        "type": "mqtt in",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "topic": "device/9BF72F39/realtime",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "e42cdc18ac58f86d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 2530,
        "y": 60,
        "wires": [
            [
                "604c2c559f909f40"
            ]
        ]
    },
    {
        "id": "604c2c559f909f40",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Extract DFRPower",
        "func": "var newMsg = { payload: msg.payload.Datas[0][2] };\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2550,
        "y": 120,
        "wires": [
            [
                "061151ba8712b8db",
                "8c12170d8eacf5eb"
            ]
        ]
    },
    {
        "id": "482de6b9481830e3",
        "type": "mqtt out",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "topic": "Agilian/Dust Free Room",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e42cdc18ac58f86d",
        "x": 2830,
        "y": 60,
        "wires": []
    },
    {
        "id": "dd5466abe719c7df",
        "type": "mqtt in",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "topic": "device/0651C8D4/realtime",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "e42cdc18ac58f86d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1090,
        "y": 520,
        "wires": [
            [
                "0f08f6dffbed8b10"
            ]
        ]
    },
    {
        "id": "0f08f6dffbed8b10",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "1stFlr Power",
        "func": "var newMsg = { payload: msg.payload.Datas[0][2] };\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 580,
        "wires": [
            [
                "6f70aeca2a789936",
                "e46b1bc14346887b"
            ]
        ]
    },
    {
        "id": "eeabd217f41562dd",
        "type": "mqtt out",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "topic": "Agilian/Other Local AC",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e42cdc18ac58f86d",
        "x": 1380,
        "y": 520,
        "wires": []
    },
    {
        "id": "d93334fc35be6ebc",
        "type": "ui_text",
        "z": "c0c5ee6ca985e392",
        "group": "80c39a7a7e650d5b",
        "order": 1,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Power",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1330,
        "y": 640,
        "wires": []
    },
    {
        "id": "ecb4dc129e777107",
        "type": "ui_text",
        "z": "c0c5ee6ca985e392",
        "group": "7954e854954f39fc",
        "order": 1,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Power",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#ffffff",
        "x": 2770,
        "y": 120,
        "wires": []
    },
    {
        "id": "d17940f408254a11",
        "type": "ui_text",
        "z": "c0c5ee6ca985e392",
        "group": "13944f72978d5540",
        "order": 1,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Power",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1330,
        "y": 160,
        "wires": []
    },
    {
        "id": "1ec9617411ab69b5",
        "type": "ui_text",
        "z": "c0c5ee6ca985e392",
        "group": "382598d1a0b04297",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Date/Time",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 750,
        "y": 60,
        "wires": []
    },
    {
        "id": "b1d5d8321942daef",
        "type": "openweathermap",
        "z": "c0c5ee6ca985e392",
        "name": "Dongguan",
        "wtype": "current",
        "lon": "",
        "lat": "",
        "city": "Dongguan",
        "country": "CN",
        "language": "en",
        "x": 310,
        "y": 120,
        "wires": [
            [
                "8c73c1d27b9073d1",
                "76062b24be6defbc",
                "930673f42bb2e5d0"
            ]
        ]
    },
    {
        "id": "18c4c80889362233",
        "type": "inject",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "405b94ef84977da099dee711d2195033",
        "payloadType": "msg",
        "x": 130,
        "y": 120,
        "wires": [
            [
                "b1d5d8321942daef"
            ]
        ]
    },
    {
        "id": "8c73c1d27b9073d1",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Temp",
        "func": "var newMsg = { payload: msg.payload.tempc};\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 120,
        "wires": [
            [
                "b61f8a0ca4fa0679"
            ]
        ],
        "info": "msg.payload.tempc"
    },
    {
        "id": "a582b00f6aa9945b",
        "type": "ui_text",
        "z": "c0c5ee6ca985e392",
        "group": "382598d1a0b04297",
        "order": 9,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Temperature",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 750,
        "y": 120,
        "wires": []
    },
    {
        "id": "76062b24be6defbc",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Location",
        "func": "var newMsg = { payload: msg.payload.location};\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 200,
        "wires": [
            [
                "ca928279e0521972",
                "89030be18600d86d"
            ]
        ],
        "info": "msg.payload.tempc"
    },
    {
        "id": "ca928279e0521972",
        "type": "ui_text",
        "z": "c0c5ee6ca985e392",
        "group": "382598d1a0b04297",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Location",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 700,
        "y": 200,
        "wires": []
    },
    {
        "id": "930673f42bb2e5d0",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Weather",
        "func": "var newMsg = { payload: msg.payload.weather};\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 280,
        "wires": [
            [
                "e7d4947c17697154",
                "8774d373f5f2e295"
            ]
        ],
        "info": "msg.payload.tempc"
    },
    {
        "id": "e7d4947c17697154",
        "type": "ui_text",
        "z": "c0c5ee6ca985e392",
        "group": "382598d1a0b04297",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Weather",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 700,
        "y": 300,
        "wires": []
    },
    {
        "id": "42a6ac130a284e95",
        "type": "inject",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 60,
        "wires": [
            [
                "3263c0182dace0c8"
            ]
        ]
    },
    {
        "id": "3263c0182dace0c8",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$now()",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 60,
        "wires": [
            [
                "6e2d1456f2c3e90a"
            ]
        ]
    },
    {
        "id": "54be671dd62829e7",
        "type": "mqtt in",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "topic": "device/486C3E95/realtime",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "e42cdc18ac58f86d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 930,
        "y": 1000,
        "wires": [
            [
                "4f3f504de363f7a9"
            ]
        ]
    },
    {
        "id": "4f3f504de363f7a9",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "CNC Rm Power",
        "func": "var newMsg = { payload: msg.payload.Datas[0][2] };\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 1060,
        "wires": [
            [
                "b9be2d49fa8a5e44",
                "2c4e1bb32d2a9b3a"
            ]
        ]
    },
    {
        "id": "bee49ba4cc4aa0e0",
        "type": "mqtt out",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "topic": "Agilian/CNC Room",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e42cdc18ac58f86d",
        "x": 1210,
        "y": 1000,
        "wires": []
    },
    {
        "id": "6b73bcfe9282bf3b",
        "type": "ui_text",
        "z": "c0c5ee6ca985e392",
        "group": "3c1b0362a1990a3d",
        "order": 1,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "CNC Room",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1190,
        "y": 1060,
        "wires": []
    },
    {
        "id": "b7dc46060612b11b",
        "type": "mqtt in",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "topic": "device/E7835489/realtime",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "e42cdc18ac58f86d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 970,
        "y": 1420,
        "wires": [
            [
                "9a25c71b1d624970"
            ]
        ]
    },
    {
        "id": "9a25c71b1d624970",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Extract IRPower",
        "func": "var newMsg = { payload: msg.payload.Datas[0][2] };\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 1500,
        "wires": [
            [
                "06a71348b4a2e824",
                "3384bd08b26a5214"
            ]
        ]
    },
    {
        "id": "f642f4ab1d3b76af",
        "type": "mqtt out",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "topic": "Agilian/Injection Room",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e42cdc18ac58f86d",
        "x": 1260,
        "y": 1420,
        "wires": []
    },
    {
        "id": "50a5cac9fa0c8340",
        "type": "ui_text",
        "z": "c0c5ee6ca985e392",
        "group": "3fe3c502aec2c01d",
        "order": 1,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Injection Room",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1240,
        "y": 1480,
        "wires": []
    },
    {
        "id": "b61f8a0ca4fa0679",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload & ' °C'",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 160,
        "wires": [
            [
                "a582b00f6aa9945b",
                "15402f77e6b56d3d"
            ]
        ]
    },
    {
        "id": "f00d36fb033fa1ef",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload & ' W'",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 180,
        "wires": [
            [
                "1eee19f9e6ae7dbb",
                "d17940f408254a11"
            ]
        ]
    },
    {
        "id": "061151ba8712b8db",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload & ' W'",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2540,
        "y": 180,
        "wires": [
            [
                "482de6b9481830e3",
                "ecb4dc129e777107"
            ]
        ]
    },
    {
        "id": "6f70aeca2a789936",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload & ' W'",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 640,
        "wires": [
            [
                "eeabd217f41562dd",
                "d93334fc35be6ebc"
            ]
        ]
    },
    {
        "id": "b9be2d49fa8a5e44",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload & ' W'",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 940,
        "y": 1120,
        "wires": [
            [
                "bee49ba4cc4aa0e0",
                "6b73bcfe9282bf3b"
            ]
        ]
    },
    {
        "id": "06a71348b4a2e824",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload & ' W'",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 980,
        "y": 1560,
        "wires": [
            [
                "f642f4ab1d3b76af",
                "50a5cac9fa0c8340"
            ]
        ]
    },
    {
        "id": "880add127838d428",
        "type": "ui_media",
        "z": "c0c5ee6ca985e392",
        "group": "382598d1a0b04297",
        "name": "",
        "width": 6,
        "height": 2,
        "order": 2,
        "category": "Logo",
        "file": "agilian-white.png",
        "layout": "adjust",
        "showcontrols": true,
        "loop": true,
        "onstart": false,
        "scope": "local",
        "tooltip": "",
        "x": 510,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "89030be18600d86d",
        "type": "mqtt out",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "topic": "Agilian/Location",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e42cdc18ac58f86d",
        "x": 720,
        "y": 240,
        "wires": []
    },
    {
        "id": "8774d373f5f2e295",
        "type": "mqtt out",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "topic": "Agilian/Weather",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e42cdc18ac58f86d",
        "x": 720,
        "y": 340,
        "wires": []
    },
    {
        "id": "15402f77e6b56d3d",
        "type": "mqtt out",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "topic": "Agilian/Temperature",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e42cdc18ac58f86d",
        "x": 760,
        "y": 160,
        "wires": []
    },
    {
        "id": "1bb7527d38684e8d",
        "type": "mqtt in",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "topic": "fs/lot/env_quality_v1/AgilianSensor/up",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "813d2b24e7b11477",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 2570,
        "y": 580,
        "wires": [
            [
                "03a65c01647930ac"
            ]
        ]
    },
    {
        "id": "03a65c01647930ac",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Humidity",
        "func": "var newMsg = { payload: msg.payload.humidity };\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2500,
        "y": 640,
        "wires": [
            [
                "e91031af194cba35",
                "e6137c9d5f2fe5a2"
            ]
        ]
    },
    {
        "id": "d0fa91e4f6d4744a",
        "type": "ui_text",
        "z": "c0c5ee6ca985e392",
        "group": "7954e854954f39fc",
        "order": 5,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Humidity",
        "format": "<font color= {{msg.color}} > {{msg.payload}} </font>",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2860,
        "y": 640,
        "wires": []
    },
    {
        "id": "b77a02f8fe886dd2",
        "type": "mqtt in",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "topic": "fs/lot/env_quality_v1/AgilianSensor/up",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "813d2b24e7b11477",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 2550,
        "y": 1340,
        "wires": [
            [
                "3f61dd8f297e15a6"
            ]
        ]
    },
    {
        "id": "3f61dd8f297e15a6",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "CO2",
        "func": "var newMsg = { payload: msg.payload.co2 };\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 1400,
        "wires": [
            [
                "ac062973b8342b88",
                "b56de79d9ca3bfb9"
            ]
        ]
    },
    {
        "id": "4c63016ada5e2106",
        "type": "ui_text",
        "z": "c0c5ee6ca985e392",
        "group": "7954e854954f39fc",
        "order": 13,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "CO2",
        "format": "<font color= {{msg.color}} > {{msg.payload}} </font>",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2850,
        "y": 1400,
        "wires": []
    },
    {
        "id": "517e2e19ac176190",
        "type": "mqtt in",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "topic": "fs/lot/env_quality_v1/AgilianSensor/up",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "813d2b24e7b11477",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 2550,
        "y": 1520,
        "wires": [
            [
                "58508ea1e26c4916"
            ]
        ]
    },
    {
        "id": "58508ea1e26c4916",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Human",
        "func": "var newMsg = { payload: msg.payload.human };\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2480,
        "y": 1580,
        "wires": [
            [
                "cdda33236e30f0b0",
                "8fe49cf8657525ee"
            ]
        ]
    },
    {
        "id": "cdda33236e30f0b0",
        "type": "ui_text",
        "z": "c0c5ee6ca985e392",
        "group": "7954e854954f39fc",
        "order": 15,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Human",
        "format": "<font color= {{msg.color}} > {{msg.payload}} </font>",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2660,
        "y": 1580,
        "wires": []
    },
    {
        "id": "3d655c0bc69464fa",
        "type": "mqtt in",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "topic": "fs/lot/env_quality_v1/AgilianSensor/up",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "813d2b24e7b11477",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 2570,
        "y": 820,
        "wires": [
            [
                "bce402093865e121"
            ]
        ]
    },
    {
        "id": "bce402093865e121",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "PM1.0",
        "func": "var newMsg = { payload: msg.payload[\"pm1.0\"] };\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2490,
        "y": 880,
        "wires": [
            [
                "61cf28273011d390",
                "b92241a6b558d653"
            ]
        ]
    },
    {
        "id": "3f4850763bb2bc4e",
        "type": "ui_text",
        "z": "c0c5ee6ca985e392",
        "group": "7954e854954f39fc",
        "order": 7,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "PM 1.0",
        "format": "<font color= {{msg.color}} > {{msg.payload}} </font>",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2860,
        "y": 880,
        "wires": []
    },
    {
        "id": "56f6696e8f48b1a2",
        "type": "mqtt in",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "topic": "fs/lot/env_quality_v1/AgilianSensor/up",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "813d2b24e7b11477",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 2570,
        "y": 360,
        "wires": [
            [
                "83954aa46465be17"
            ]
        ]
    },
    {
        "id": "83954aa46465be17",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Temperature",
        "func": "var newMsg = { payload: msg.payload.temperature };\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2510,
        "y": 420,
        "wires": [
            [
                "8349fb55ed7aaf21",
                "99bd345c864d2b2c"
            ]
        ]
    },
    {
        "id": "20110dbc730b3850",
        "type": "ui_text",
        "z": "c0c5ee6ca985e392",
        "group": "7954e854954f39fc",
        "order": 3,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Temperature",
        "format": "<font color= {{msg.color}} > {{msg.payload}} </font>",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2850,
        "y": 420,
        "wires": []
    },
    {
        "id": "21b062f4b28c6964",
        "type": "mqtt in",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "topic": "fs/lot/env_quality_v1/AgilianSensor/up",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "813d2b24e7b11477",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 2550,
        "y": 1000,
        "wires": [
            [
                "5a7acce0b19808d8"
            ]
        ]
    },
    {
        "id": "5a7acce0b19808d8",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "PM2.5",
        "func": "var newMsg = { payload: msg.payload.pm25 };\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 1060,
        "wires": [
            [
                "7fc02f8392144814",
                "bc5126189da3ad82"
            ]
        ]
    },
    {
        "id": "2272b19cf8aac053",
        "type": "ui_text",
        "z": "c0c5ee6ca985e392",
        "group": "7954e854954f39fc",
        "order": 9,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "PM 2.5",
        "format": "<font color= {{msg.color}} > {{msg.payload}} </font>",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2820,
        "y": 1060,
        "wires": []
    },
    {
        "id": "63b8a8a0bb3c92c1",
        "type": "mqtt in",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "topic": "fs/lot/env_quality_v1/AgilianSensor/up",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "813d2b24e7b11477",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 2550,
        "y": 1180,
        "wires": [
            [
                "9852752096870d6b"
            ]
        ]
    },
    {
        "id": "9852752096870d6b",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "PM10",
        "func": "var newMsg = { payload: msg.payload.pm10 };\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2490,
        "y": 1240,
        "wires": [
            [
                "ca664cce367723ce",
                "b22154a8a62df643"
            ]
        ]
    },
    {
        "id": "a580d0fe6bf24ba4",
        "type": "ui_text",
        "z": "c0c5ee6ca985e392",
        "group": "7954e854954f39fc",
        "order": 11,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "PM 10",
        "format": "<font color= {{msg.color}} > {{msg.payload}} </font>",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2830,
        "y": 1240,
        "wires": []
    },
    {
        "id": "7fc02f8392144814",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload & ' μg/m³'",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2640,
        "y": 1060,
        "wires": [
            [
                "2272b19cf8aac053"
            ]
        ]
    },
    {
        "id": "e5a1a0e1.72b148",
        "type": "ui_dropdown",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "label": "",
        "tooltip": "Choose which data you want to view: Past 1 Day, Week or Month",
        "place": "See Data",
        "group": "7954e854954f39fc",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Day",
                "value": "day",
                "type": "str"
            },
            {
                "label": "Week",
                "value": "week",
                "type": "str"
            },
            {
                "label": "Month",
                "value": "month",
                "type": "str"
            },
            {
                "label": "Hide",
                "value": "hide",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 3920,
        "y": 120,
        "wires": [
            [
                "399583256584740e"
            ]
        ]
    },
    {
        "id": "28cf83f5.defee4",
        "type": "ui_ui_control",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "events": "all",
        "x": 4500,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "b5e5829b.396ba8",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_DFR_Power_1_Week_Analysis\"],\"hide\":[\"Agilian_DFR_Power_1_Day_Analysis\",\"Agilian_DFR_Power_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 120,
        "wires": [
            [
                "28cf83f5.defee4"
            ]
        ]
    },
    {
        "id": "399583256584740e",
        "type": "switch",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "week",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "month",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "hide",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 4090,
        "y": 120,
        "wires": [
            [
                "f4aeb1c092ddcf7a"
            ],
            [
                "b5e5829b.396ba8"
            ],
            [
                "ed8abfee3dd2d202"
            ],
            [
                "1341d6ebe74d124a"
            ]
        ]
    },
    {
        "id": "ed8abfee3dd2d202",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_DFR_Power_1_Month_Analysis\"],\"hide\":[\"Agilian_DFR_Power_1_Week_Analysis\",\"Agilian_DFR_Power_1_Day_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 160,
        "wires": [
            [
                "28cf83f5.defee4"
            ]
        ]
    },
    {
        "id": "f4aeb1c092ddcf7a",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_DFR_Power_1_Day_Analysis\"],\"hide\":[\"Agilian_DFR_Power_1_Week_Analysis\",\"Agilian_DFR_Power_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 80,
        "wires": [
            [
                "28cf83f5.defee4"
            ]
        ]
    },
    {
        "id": "1341d6ebe74d124a",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"hide\":[\"Agilian_DFR_Power_1_Day_Analysis\",\"Agilian_DFR_Power_1_Week_Analysis\",\"Agilian_DFR_Power_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 200,
        "wires": [
            [
                "28cf83f5.defee4"
            ]
        ]
    },
    {
        "id": "8c12170d8eacf5eb",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "function 3",
        "func": "var d = new Date();\nvar t =  d.getTime();\nvar power = msg.payload;\n/*\nif (!context.get(\"headerAdded\")) {\n  // Check if a header row already exists in the file\n  // (modify this logic as needed based on your file structure and naming)\n  var headerExists = false; // Replace with a function to check header existence\n\n  if (!headerExists) {\n    var header = \"time,power\";\n    // Write the header row to the file\n    context.global.set(\"headerAdded\", true); // Mark header as added\n    node.send({ payload: header });\n  }\n}\n*/\n//payload={t, power}\nvar csvString = t + \",\" + power;\n//msg.payload=payload;\nmsg.payload = csvString;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2520,
        "y": 220,
        "wires": [
            [
                "22da0df69fae73c0"
            ]
        ]
    },
    {
        "id": "22da0df69fae73c0",
        "type": "file",
        "z": "c0c5ee6ca985e392",
        "name": "Store Power",
        "filename": "D:\\Agilian Copy JD\\Artronics\\MQTT\\DFRPower.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 2530,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "3e3ede7e1b24899e",
        "type": "file in",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "filename": "D:\\Agilian Copy JD\\Artronics\\MQTT\\DFRPower.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3210,
        "y": 120,
        "wires": [
            [
                "eb3c00b752c3d773"
            ]
        ]
    },
    {
        "id": "fff1da67856b80fb",
        "type": "inject",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3090,
        "y": 60,
        "wires": [
            [
                "3e3ede7e1b24899e"
            ]
        ]
    },
    {
        "id": "eb3c00b752c3d773",
        "type": "csv",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "sep": ",",
        "hdrin": false,
        "hdrout": "",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 3110,
        "y": 180,
        "wires": [
            [
                "08cdb5220d70fc3a",
                "5214589375b98296",
                "115340a204c964ea"
            ]
        ]
    },
    {
        "id": "08cdb5220d70fc3a",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Daily Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew; //Add 28800000 to convert to GMT+8 if have error\n\nif (timec > (t - 86400000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n\"series\": [\"Power\"],\n\"data\":data_out,\n\"labels\": [\"Power\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3530,
        "y": 100,
        "wires": [
            [
                "4baa96059ae94bec"
            ]
        ]
    },
    {
        "id": "dab3bb99f4626d55",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Store MAPower",
        "func": "var d = new Date();\nvar t =  d.getTime();\nvar power = msg.payload;\n/*\nif (!context.get(\"headerAdded\")) {\n  // Check if a header row already exists in the file\n  // (modify this logic as needed based on your file structure and naming)\n  var headerExists = false; // Replace with a function to check header existence\n\n  if (!headerExists) {\n    var header = \"time,power\";\n    // Write the header row to the file\n    context.global.set(\"headerAdded\", true); // Mark header as added\n    node.send({ payload: header });\n  }\n}\n*/\n//payload={t, power}\nvar csvString = t + \",\" + power;\n//msg.payload=payload;\nmsg.payload = csvString;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 220,
        "wires": [
            [
                "c3eb12f1567dd17f"
            ]
        ]
    },
    {
        "id": "c3eb12f1567dd17f",
        "type": "file",
        "z": "c0c5ee6ca985e392",
        "name": "Store MAPower",
        "filename": "D:\\Agilian Copy JD\\Artronics\\MQTT\\MAPower.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 1320,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "e46b1bc14346887b",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Store 1stFlrPower",
        "func": "var d = new Date();\nvar t =  d.getTime();\nvar power = msg.payload;\n/*\nif (!context.get(\"headerAdded\")) {\n  // Check if a header row already exists in the file\n  // (modify this logic as needed based on your file structure and naming)\n  var headerExists = false; // Replace with a function to check header existence\n\n  if (!headerExists) {\n    var header = \"time,power\";\n    // Write the header row to the file\n    context.global.set(\"headerAdded\", true); // Mark header as added\n    node.send({ payload: header });\n  }\n}\n*/\n//payload={t, power}\nvar csvString = t + \",\" + power;\n//msg.payload=payload;\nmsg.payload = csvString;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 680,
        "wires": [
            [
                "852ab09ca7ace95d"
            ]
        ]
    },
    {
        "id": "852ab09ca7ace95d",
        "type": "file",
        "z": "c0c5ee6ca985e392",
        "name": "Store 1stFlrPower",
        "filename": "D:\\Agilian Copy JD\\Artronics\\MQTT\\1stFlrPower.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 1110,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "2c4e1bb32d2a9b3a",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Store CNCRmPower",
        "func": "var d = new Date();\nvar t =  d.getTime();\nvar power = msg.payload;\n/*\nif (!context.get(\"headerAdded\")) {\n  // Check if a header row already exists in the file\n  // (modify this logic as needed based on your file structure and naming)\n  var headerExists = false; // Replace with a function to check header existence\n\n  if (!headerExists) {\n    var header = \"time,power\";\n    // Write the header row to the file\n    context.global.set(\"headerAdded\", true); // Mark header as added\n    node.send({ payload: header });\n  }\n}\n*/\n//payload={t, power}\nvar csvString = t + \",\" + power;\n//msg.payload=payload;\nmsg.payload = csvString;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 1160,
        "wires": [
            [
                "d0c29edb22e7d4d5"
            ]
        ]
    },
    {
        "id": "d0c29edb22e7d4d5",
        "type": "file",
        "z": "c0c5ee6ca985e392",
        "name": "Store CNCRm Power",
        "filename": "D:\\Agilian Copy JD\\Artronics\\MQTT\\CNCRmPower.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 960,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "a495d573a67f0e3c",
        "type": "file",
        "z": "c0c5ee6ca985e392",
        "name": "Store IRPower",
        "filename": "D:\\Agilian Copy JD\\Artronics\\MQTT\\IRPower.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 980,
        "y": 1640,
        "wires": [
            []
        ]
    },
    {
        "id": "3384bd08b26a5214",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Store CNCRmPower",
        "func": "var d = new Date();\nvar t =  d.getTime();\nvar power = msg.payload;\n/*\nif (!context.get(\"headerAdded\")) {\n  // Check if a header row already exists in the file\n  // (modify this logic as needed based on your file structure and naming)\n  var headerExists = false; // Replace with a function to check header existence\n\n  if (!headerExists) {\n    var header = \"time,power\";\n    // Write the header row to the file\n    context.global.set(\"headerAdded\", true); // Mark header as added\n    node.send({ payload: header });\n  }\n}\n*/\n//payload={t, power}\nvar csvString = t + \",\" + power;\n//msg.payload=payload;\nmsg.payload = csvString;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 1600,
        "wires": [
            [
                "a495d573a67f0e3c"
            ]
        ]
    },
    {
        "id": "815813fc4a43fc2a",
        "type": "file",
        "z": "c0c5ee6ca985e392",
        "name": "Store DFRPM2.5",
        "filename": "D:\\Agilian Copy JD\\Artronics\\MQTT\\DFRPM2.5.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 2730,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "bc5126189da3ad82",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Store DFRPM2.5",
        "func": "var d = new Date();\nvar t =  d.getTime();\nvar power = msg.payload;\n/*\nif (!context.get(\"headerAdded\")) {\n  // Check if a header row already exists in the file\n  // (modify this logic as needed based on your file structure and naming)\n  var headerExists = false; // Replace with a function to check header existence\n\n  if (!headerExists) {\n    var header = \"time,power\";\n    // Write the header row to the file\n    context.global.set(\"headerAdded\", true); // Mark header as added\n    node.send({ payload: header });\n  }\n}\n*/\n//payload={t, power}\nvar csvString = t + \",\" + power;\n//msg.payload=payload;\nmsg.payload = csvString;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2510,
        "y": 1100,
        "wires": [
            [
                "815813fc4a43fc2a"
            ]
        ]
    },
    {
        "id": "ca664cce367723ce",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload & ' μg/m³'",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2660,
        "y": 1240,
        "wires": [
            [
                "a580d0fe6bf24ba4"
            ]
        ]
    },
    {
        "id": "2b2eabbb69a3d8ad",
        "type": "file",
        "z": "c0c5ee6ca985e392",
        "name": "Store DFRPM10",
        "filename": "D:\\Agilian Copy JD\\Artronics\\MQTT\\DFRPM10.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 2740,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "b22154a8a62df643",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Store DFRPM10",
        "func": "var d = new Date();\nvar t =  d.getTime();\nvar power = msg.payload;\n/*\nif (!context.get(\"headerAdded\")) {\n  // Check if a header row already exists in the file\n  // (modify this logic as needed based on your file structure and naming)\n  var headerExists = false; // Replace with a function to check header existence\n\n  if (!headerExists) {\n    var header = \"time,power\";\n    // Write the header row to the file\n    context.global.set(\"headerAdded\", true); // Mark header as added\n    node.send({ payload: header });\n  }\n}\n*/\n//payload={t, power}\nvar csvString = t + \",\" + power;\n//msg.payload=payload;\nmsg.payload = csvString;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2520,
        "y": 1280,
        "wires": [
            [
                "2b2eabbb69a3d8ad"
            ]
        ]
    },
    {
        "id": "5e8a3b1ec2e2132d",
        "type": "file",
        "z": "c0c5ee6ca985e392",
        "name": "Store DFRPM1.0",
        "filename": "D:\\Agilian Copy JD\\Artronics\\MQTT\\DFRPM1.0.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 2750,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "61cf28273011d390",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Store DFRPM1.0",
        "func": "var d = new Date();\nvar t =  d.getTime();\nvar power = msg.payload;\n/*\nif (!context.get(\"headerAdded\")) {\n  // Check if a header row already exists in the file\n  // (modify this logic as needed based on your file structure and naming)\n  var headerExists = false; // Replace with a function to check header existence\n\n  if (!headerExists) {\n    var header = \"time,power\";\n    // Write the header row to the file\n    context.global.set(\"headerAdded\", true); // Mark header as added\n    node.send({ payload: header });\n  }\n}\n*/\n//payload={t, power}\nvar csvString = t + \",\" + power;\n//msg.payload=payload;\nmsg.payload = csvString;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2530,
        "y": 920,
        "wires": [
            [
                "5e8a3b1ec2e2132d"
            ]
        ]
    },
    {
        "id": "b92241a6b558d653",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload & ' μg/m³'",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2680,
        "y": 880,
        "wires": [
            [
                "3f4850763bb2bc4e"
            ]
        ]
    },
    {
        "id": "8349fb55ed7aaf21",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload & ' μg/m³'",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2680,
        "y": 420,
        "wires": [
            [
                "20110dbc730b3850"
            ]
        ]
    },
    {
        "id": "c81860ca54d7809e",
        "type": "file",
        "z": "c0c5ee6ca985e392",
        "name": "Store DFRTemp",
        "filename": "D:\\Agilian Copy JD\\Artronics\\MQTT\\DFRTemp.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 2740,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "99bd345c864d2b2c",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Store DFRTemp",
        "func": "var d = new Date();\nvar t =  d.getTime();\nvar power = msg.payload;\n/*\nif (!context.get(\"headerAdded\")) {\n  // Check if a header row already exists in the file\n  // (modify this logic as needed based on your file structure and naming)\n  var headerExists = false; // Replace with a function to check header existence\n\n  if (!headerExists) {\n    var header = \"time,power\";\n    // Write the header row to the file\n    context.global.set(\"headerAdded\", true); // Mark header as added\n    node.send({ payload: header });\n  }\n}\n*/\n//payload={t, power}\nvar csvString = t + \",\" + power;\n//msg.payload=payload;\nmsg.payload = csvString;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2520,
        "y": 460,
        "wires": [
            [
                "c81860ca54d7809e"
            ]
        ]
    },
    {
        "id": "e91031af194cba35",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload & ' μg/m³'",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2680,
        "y": 640,
        "wires": [
            [
                "d0fa91e4f6d4744a"
            ]
        ]
    },
    {
        "id": "ac062973b8342b88",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload & ' μg/m³'",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2660,
        "y": 1400,
        "wires": [
            [
                "4c63016ada5e2106"
            ]
        ]
    },
    {
        "id": "1267dd721f6ccb75",
        "type": "file",
        "z": "c0c5ee6ca985e392",
        "name": "Store DFRHumi",
        "filename": "D:\\Agilian Copy JD\\Artronics\\MQTT\\DFRHumi.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 2740,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "e6137c9d5f2fe5a2",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Store DFRHumi",
        "func": "var d = new Date();\nvar t =  d.getTime();\nvar power = msg.payload;\n/*\nif (!context.get(\"headerAdded\")) {\n  // Check if a header row already exists in the file\n  // (modify this logic as needed based on your file structure and naming)\n  var headerExists = false; // Replace with a function to check header existence\n\n  if (!headerExists) {\n    var header = \"time,power\";\n    // Write the header row to the file\n    context.global.set(\"headerAdded\", true); // Mark header as added\n    node.send({ payload: header });\n  }\n}\n*/\n//payload={t, power}\nvar csvString = t + \",\" + power;\n//msg.payload=payload;\nmsg.payload = csvString;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2520,
        "y": 680,
        "wires": [
            [
                "1267dd721f6ccb75"
            ]
        ]
    },
    {
        "id": "8888050ebd178f5d",
        "type": "file",
        "z": "c0c5ee6ca985e392",
        "name": "Store DFRCO2",
        "filename": "D:\\Agilian Copy JD\\Artronics\\MQTT\\DFRCO2.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 2720,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "b56de79d9ca3bfb9",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Store DFRCO2",
        "func": "var d = new Date();\nvar t =  d.getTime();\nvar power = msg.payload;\n/*\nif (!context.get(\"headerAdded\")) {\n  // Check if a header row already exists in the file\n  // (modify this logic as needed based on your file structure and naming)\n  var headerExists = false; // Replace with a function to check header existence\n\n  if (!headerExists) {\n    var header = \"time,power\";\n    // Write the header row to the file\n    context.global.set(\"headerAdded\", true); // Mark header as added\n    node.send({ payload: header });\n  }\n}\n*/\n//payload={t, power}\nvar csvString = t + \",\" + power;\n//msg.payload=payload;\nmsg.payload = csvString;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2500,
        "y": 1440,
        "wires": [
            [
                "8888050ebd178f5d"
            ]
        ]
    },
    {
        "id": "8fe49cf8657525ee",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Store DFRHuman",
        "func": "var d = new Date();\nvar t =  d.getTime();\nvar power = msg.payload;\n/*\nif (!context.get(\"headerAdded\")) {\n  // Check if a header row already exists in the file\n  // (modify this logic as needed based on your file structure and naming)\n  var headerExists = false; // Replace with a function to check header existence\n\n  if (!headerExists) {\n    var header = \"time,power\";\n    // Write the header row to the file\n    context.global.set(\"headerAdded\", true); // Mark header as added\n    node.send({ payload: header });\n  }\n}\n*/\n//payload={t, power}\nvar csvString = t + \",\" + power;\n//msg.payload=payload;\nmsg.payload = csvString;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2510,
        "y": 1620,
        "wires": [
            [
                "6f2f1708dfdc0e07"
            ]
        ]
    },
    {
        "id": "6f2f1708dfdc0e07",
        "type": "file",
        "z": "c0c5ee6ca985e392",
        "name": "Store DFRHuman",
        "filename": "D:\\Agilian Copy JD\\Artronics\\MQTT\\DFRHuman.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 2730,
        "y": 1620,
        "wires": [
            []
        ]
    },
    {
        "id": "5214589375b98296",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Weekly Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\n    var timec = timew; //Add 28800000 to convert to GMT+8 if have error\n\nif (timec > (t - 604800000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n\"series\": [\"Power\"],\n\"data\":data_out,\n\"labels\": [\"Power\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3540,
        "y": 140,
        "wires": [
            [
                "b638410c142880e6"
            ]
        ]
    },
    {
        "id": "115340a204c964ea",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Monthly Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\n    var timec = timew; //Add 28800000 to convert to GMT+8 if have error\n\nif (timec > (t - 2629743000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n\"series\": [\"Power\"],\n\"data\":data_out,\n\"labels\": [\"Power\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3540,
        "y": 180,
        "wires": [
            [
                "bbc7ef0118042f74"
            ]
        ]
    },
    {
        "id": "b638410c142880e6",
        "type": "ui_chart",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "group": "2ece0c9f3a7aa2b0",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3730,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "bbc7ef0118042f74",
        "type": "ui_chart",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "group": "d38e067ab6d9ba8b",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "4",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3730,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "4baa96059ae94bec",
        "type": "ui_chart",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "group": "a3b39a61336c03ac",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "3",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3730,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "f22d37d14857185a",
        "type": "file in",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "filename": "D:\\Agilian Copy JD\\Artronics\\MQTT\\MAPower.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1690,
        "y": 120,
        "wires": [
            [
                "c9fa4d77bb7ef49e"
            ]
        ]
    },
    {
        "id": "7966532e9cd3d39d",
        "type": "debug",
        "z": "c0c5ee6ca985e392",
        "name": "ReadPowerDFR",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1840,
        "y": 60,
        "wires": []
    },
    {
        "id": "80b51c05cd2fa704",
        "type": "inject",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1570,
        "y": 60,
        "wires": [
            [
                "f22d37d14857185a"
            ]
        ]
    },
    {
        "id": "c9fa4d77bb7ef49e",
        "type": "csv",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "sep": ",",
        "hdrin": false,
        "hdrout": "",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1590,
        "y": 180,
        "wires": [
            [
                "9ed0a1d8c8c33743",
                "7966532e9cd3d39d",
                "2ce45132e6f8af99",
                "192f28bcc7965077"
            ]
        ]
    },
    {
        "id": "9ed0a1d8c8c33743",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Daily Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew;\n\nif (timec > (t - 86400000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n\"series\": [\"Power\"],\n\"data\":data_out,\n\"labels\": [\"Power\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2010,
        "y": 100,
        "wires": [
            [
                "59c4cffd8b5169f9",
                "512e87872c18dfcc"
            ]
        ]
    },
    {
        "id": "59c4cffd8b5169f9",
        "type": "debug",
        "z": "c0c5ee6ca985e392",
        "name": "ReadGraphhDFR",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2250,
        "y": 60,
        "wires": []
    },
    {
        "id": "2ce45132e6f8af99",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Weekly Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew;\n\nif (timec > (t - 604800000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n\"series\": [\"Power\"],\n\"data\":data_out,\n\"labels\": [\"Power\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2020,
        "y": 140,
        "wires": [
            [
                "12846d50ff6dc4a0"
            ]
        ]
    },
    {
        "id": "192f28bcc7965077",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Monthly Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew; //Adjust time to GMT+8\n\nif (timec > (t - 2629743000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n\"series\": [\"Power\"],\n\"data\":data_out,\n\"labels\": [\"Power\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2020,
        "y": 180,
        "wires": [
            [
                "803bf6048d47d2cc"
            ]
        ]
    },
    {
        "id": "12846d50ff6dc4a0",
        "type": "ui_chart",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "group": "6c54205071e70adf",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2210,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "803bf6048d47d2cc",
        "type": "ui_chart",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "group": "82c7a0e629872576",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "4",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2210,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "512e87872c18dfcc",
        "type": "ui_chart",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "group": "ab647176e5dc8734",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "3",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2210,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "87c51051e34e5dd7",
        "type": "ui_dropdown",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "label": "",
        "tooltip": "Choose which data you want to view: Past 1 Day, Week or Month",
        "place": "See Data",
        "group": "13944f72978d5540",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Day",
                "value": "day",
                "type": "str"
            },
            {
                "label": "Week",
                "value": "week",
                "type": "str"
            },
            {
                "label": "Month",
                "value": "month",
                "type": "str"
            },
            {
                "label": "Hide",
                "value": "hide",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1060,
        "y": 360,
        "wires": [
            [
                "d0e6d64896a1c601"
            ]
        ]
    },
    {
        "id": "24ba51c3bef5ef6a",
        "type": "ui_ui_control",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "events": "all",
        "x": 1640,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "2fe0d1e2f2344c2c",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_Main_AC_Power_1_Week_Analysis\"],\"hide\":[\"Agilian_Main_AC_Power_1_Day_Analysis\",\"Agilian_Main_AC_Power_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1420,
        "y": 360,
        "wires": [
            [
                "24ba51c3bef5ef6a"
            ]
        ]
    },
    {
        "id": "d0e6d64896a1c601",
        "type": "switch",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "week",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "month",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "hide",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 1230,
        "y": 360,
        "wires": [
            [
                "3713f12575c6831e"
            ],
            [
                "2fe0d1e2f2344c2c"
            ],
            [
                "d9d57c381f5c7f93"
            ],
            [
                "a0074b27e0de48ab"
            ]
        ]
    },
    {
        "id": "d9d57c381f5c7f93",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_Main_AC_Power_1_Month_Analysis\"],\"hide\":[\"Agilian_Main_AC_Power_1_Week_Analysis\",\"Agilian_Main_AC_Power_1_Day_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1420,
        "y": 400,
        "wires": [
            [
                "24ba51c3bef5ef6a"
            ]
        ]
    },
    {
        "id": "3713f12575c6831e",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_Main_AC_Power_1_Day_Analysis\"],\"hide\":[\"Agilian_Main_AC_Power_1_Week_Analysis\",\"Agilian_Main_AC_Power_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1420,
        "y": 320,
        "wires": [
            [
                "24ba51c3bef5ef6a"
            ]
        ]
    },
    {
        "id": "a0074b27e0de48ab",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"hide\":[\"Agilian_Main_AC_Power_1_Day_Analysis\",\"Agilian_Main_AC_Power_1_Week_Analysis\",\"Agilian_Main_AC_Power_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1420,
        "y": 440,
        "wires": [
            [
                "24ba51c3bef5ef6a"
            ]
        ]
    },
    {
        "id": "6b62e6076ba9b98a",
        "type": "file in",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "filename": "D:\\Agilian Copy JD\\Artronics\\MQTT\\1stFlrPower.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1710,
        "y": 580,
        "wires": [
            [
                "867d188368c285d9"
            ]
        ]
    },
    {
        "id": "ce7e0bbadd56e0ac",
        "type": "debug",
        "z": "c0c5ee6ca985e392",
        "name": "ReadPowerDFR",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1860,
        "y": 520,
        "wires": []
    },
    {
        "id": "e87c4e08901afe62",
        "type": "inject",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1590,
        "y": 520,
        "wires": [
            [
                "6b62e6076ba9b98a"
            ]
        ]
    },
    {
        "id": "867d188368c285d9",
        "type": "csv",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "sep": ",",
        "hdrin": false,
        "hdrout": "",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1610,
        "y": 640,
        "wires": [
            [
                "e2c6a01a13e25c0c",
                "ce7e0bbadd56e0ac",
                "b336335143c8b475",
                "44a480973581c7e3"
            ]
        ]
    },
    {
        "id": "e2c6a01a13e25c0c",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Daily Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew;\n\nif (timec > (t - 86400000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n\"series\": [\"Power\"],\n\"data\":data_out,\n\"labels\": [\"Power\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2030,
        "y": 560,
        "wires": [
            [
                "c78aaee7dc21549d",
                "149a29279ef35ca4"
            ]
        ]
    },
    {
        "id": "c78aaee7dc21549d",
        "type": "debug",
        "z": "c0c5ee6ca985e392",
        "name": "ReadGraphhDFR",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2270,
        "y": 520,
        "wires": []
    },
    {
        "id": "b336335143c8b475",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Weekly Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew;\n\nif (timec > (t - 604800000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n\"series\": [\"Power\"],\n\"data\":data_out,\n\"labels\": [\"Power\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2040,
        "y": 600,
        "wires": [
            [
                "615cf2628c5c432a"
            ]
        ]
    },
    {
        "id": "44a480973581c7e3",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Monthly Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew; //Adjust time to GMT+8\n\nif (timec > (t - 2629743000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n\"series\": [\"Power\"],\n\"data\":data_out,\n\"labels\": [\"Power\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2040,
        "y": 640,
        "wires": [
            [
                "0c24179b79b34525"
            ]
        ]
    },
    {
        "id": "615cf2628c5c432a",
        "type": "ui_chart",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "group": "30e4fa1942cc6921",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2230,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "0c24179b79b34525",
        "type": "ui_chart",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "group": "fde19be8a9b43e68",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "4",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2230,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "149a29279ef35ca4",
        "type": "ui_chart",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "group": "1da32c670f99d70f",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "3",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2230,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "731b30c0931fa75e",
        "type": "ui_dropdown",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "label": "",
        "tooltip": "Choose which data you want to view: Past 1 Day, Week or Month",
        "place": "See Data",
        "group": "80c39a7a7e650d5b",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Day",
                "value": "day",
                "type": "str"
            },
            {
                "label": "Week",
                "value": "week",
                "type": "str"
            },
            {
                "label": "Month",
                "value": "month",
                "type": "str"
            },
            {
                "label": "Hide",
                "value": "hide",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1040,
        "y": 820,
        "wires": [
            [
                "0c41360a9f07c1a7"
            ]
        ]
    },
    {
        "id": "2712add21e735232",
        "type": "ui_ui_control",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "events": "all",
        "x": 1620,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "5272631cb2b665a0",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_1st_Floor_Power_1_Week_Analysis\"],\"hide\":[\"Agilian_1st_Floor_Power_1_Day_Analysis\",\"Agilian_1st_Floor_Power_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1400,
        "y": 820,
        "wires": [
            [
                "2712add21e735232"
            ]
        ]
    },
    {
        "id": "0c41360a9f07c1a7",
        "type": "switch",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "week",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "month",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "hide",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 1210,
        "y": 820,
        "wires": [
            [
                "4c0eb725a7e94a0e"
            ],
            [
                "5272631cb2b665a0"
            ],
            [
                "f65dba1130909f99"
            ],
            [
                "360665f1095b5501"
            ]
        ]
    },
    {
        "id": "f65dba1130909f99",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_1st_Floor_Power_1_Month_Analysis\"],\"hide\":[\"Agilian_1st_Floor_Power_1_Week_Analysis\",\"Agilian_1st_Floor_Power_1_Day_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1400,
        "y": 860,
        "wires": [
            [
                "2712add21e735232"
            ]
        ]
    },
    {
        "id": "4c0eb725a7e94a0e",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_1st_Floor_Power_1_Day_Analysis\"],\"hide\":[\"Agilian_1st_Floor_Power_1_Week_Analysis\",\"Agilian_1st_Floor_Power_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1400,
        "y": 780,
        "wires": [
            [
                "2712add21e735232"
            ]
        ]
    },
    {
        "id": "360665f1095b5501",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"hide\":[\"Agilian_1st_Floor_Power_1_Day_Analysis\",\"Agilian_1st_Floor_Power_1_Week_Analysis\",\"Agilian_1st_Floor_Power_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1400,
        "y": 900,
        "wires": [
            [
                "2712add21e735232"
            ]
        ]
    },
    {
        "id": "3088e9e6b6c0aebb",
        "type": "csv",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "sep": ",",
        "hdrin": false,
        "hdrout": "",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 3110,
        "y": 460,
        "wires": [
            [
                "89013e05b92f1506",
                "ddbf8b7548988fb5",
                "746c13df2a3bbc96"
            ]
        ]
    },
    {
        "id": "dc126fc9f439306f",
        "type": "file in",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "filename": "D:\\Agilian Copy JD\\Artronics\\MQTT\\DFRTemp.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3210,
        "y": 400,
        "wires": [
            [
                "3088e9e6b6c0aebb"
            ]
        ]
    },
    {
        "id": "89013e05b92f1506",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Daily Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew;\n\nif (timec > (t - 86400000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n\"series\": [\"Temperature\"],\n\"data\":data_out,\n\"labels\": [\"Temperature\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3530,
        "y": 380,
        "wires": [
            [
                "9a72d5687540b947"
            ]
        ]
    },
    {
        "id": "ddbf8b7548988fb5",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Weekly Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew;\n\nif (timec > (t - 604800000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n\"series\": [\"Temperature\"],\n\"data\":data_out,\n    \"labels\": [\"Temperature\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3540,
        "y": 420,
        "wires": [
            [
                "ccd76b71be8e0908"
            ]
        ]
    },
    {
        "id": "746c13df2a3bbc96",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Monthly Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew; //Adjust time to GMT+8\n\nif (timec > (t - 2629743000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n    \"series\": [\"Temperature\"],\n\"data\":data_out,\n    \"labels\": [\"Temperature\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3540,
        "y": 460,
        "wires": [
            [
                "4f4490b1b75bb683"
            ]
        ]
    },
    {
        "id": "28f8b1ac6e9ec09e",
        "type": "inject",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3090,
        "y": 340,
        "wires": [
            [
                "dc126fc9f439306f"
            ]
        ]
    },
    {
        "id": "9a72d5687540b947",
        "type": "ui_chart",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "group": "2760b11ddeaa97df",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "3",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3730,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "ccd76b71be8e0908",
        "type": "ui_chart",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "group": "a07a4a8c7270215c",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3730,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "4f4490b1b75bb683",
        "type": "ui_chart",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "group": "a4d5177ff3905c30",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "4",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3730,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "5bb3286d502571e9",
        "type": "ui_dropdown",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "label": "",
        "tooltip": "Choose which data you want to view: Past 1 Day, Week or Month",
        "place": "See Data",
        "group": "7954e854954f39fc",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Day",
                "value": "day",
                "type": "str"
            },
            {
                "label": "Week",
                "value": "week",
                "type": "str"
            },
            {
                "label": "Month",
                "value": "month",
                "type": "str"
            },
            {
                "label": "Hide",
                "value": "hide",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 3920,
        "y": 380,
        "wires": [
            [
                "d74eb22909cfab22"
            ]
        ]
    },
    {
        "id": "ab546e4c8070969d",
        "type": "ui_ui_control",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "events": "all",
        "x": 4500,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "ce2e0fb58be45e9b",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_DFR_Temperature_1_Week_Analysis\"],\"hide\":[\"Agilian_DFR_Temperature_1_Day_Analysis\",\"Agilian_DFR_Temperature_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 380,
        "wires": [
            [
                "ab546e4c8070969d"
            ]
        ]
    },
    {
        "id": "d74eb22909cfab22",
        "type": "switch",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "week",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "month",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "hide",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 4090,
        "y": 380,
        "wires": [
            [
                "1a2ae14fbd602245"
            ],
            [
                "ce2e0fb58be45e9b"
            ],
            [
                "10b34abb7bea316e"
            ],
            [
                "a0715f35f8692a1a"
            ]
        ]
    },
    {
        "id": "10b34abb7bea316e",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_DFR_Temperature_1_Month_Analysis\"],\"hide\":[\"Agilian_DFR_Temperature_1_Week_Analysis\",\"Agilian_DFR_Temperature_1_Day_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 420,
        "wires": [
            [
                "ab546e4c8070969d"
            ]
        ]
    },
    {
        "id": "1a2ae14fbd602245",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_DFR_Temperature_1_Day_Analysis\"],\"hide\":[\"Agilian_DFR_Temperature_1_Week_Analysis\",\"Agilian_DFR_Temperature_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 340,
        "wires": [
            [
                "ab546e4c8070969d"
            ]
        ]
    },
    {
        "id": "a0715f35f8692a1a",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"hide\":[\"Agilian_DFR_Temperature_1_Day_Analysis\",\"Agilian_DFR_Temperature_1_Week_Analysis\",\"Agilian_DFR_Temperature_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 460,
        "wires": [
            [
                "ab546e4c8070969d"
            ]
        ]
    },
    {
        "id": "40d4a7086cf7c8d1",
        "type": "csv",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "sep": ",",
        "hdrin": false,
        "hdrout": "",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 3110,
        "y": 700,
        "wires": [
            [
                "2c0b93b7a41c6f50",
                "c2ee7bd0cd2b1b09",
                "0206abb5d99edf34"
            ]
        ]
    },
    {
        "id": "39a9282e3a353e40",
        "type": "file in",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "filename": "D:\\Agilian Copy JD\\Artronics\\MQTT\\DFRHumi.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3210,
        "y": 640,
        "wires": [
            [
                "40d4a7086cf7c8d1"
            ]
        ]
    },
    {
        "id": "2c0b93b7a41c6f50",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Daily Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew;\n\nif (timec > (t - 86400000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n\"series\": [\"Temperature\"],\n\"data\":data_out,\n\"labels\": [\"Temperature\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3530,
        "y": 620,
        "wires": [
            [
                "58338a302d37e3cb"
            ]
        ]
    },
    {
        "id": "c2ee7bd0cd2b1b09",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Weekly Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew;\n\nif (timec > (t - 604800000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n\"series\": [\"Temperature\"],\n\"data\":data_out,\n    \"labels\": [\"Temperature\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3540,
        "y": 660,
        "wires": [
            [
                "49d045d19b6bc5bc"
            ]
        ]
    },
    {
        "id": "0206abb5d99edf34",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Monthly Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew; //Adjust time to GMT+8\n\nif (timec > (t - 2629743000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n    \"series\": [\"Temperature\"],\n\"data\":data_out,\n    \"labels\": [\"Temperature\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3540,
        "y": 700,
        "wires": [
            [
                "adc688da0635e8da"
            ]
        ]
    },
    {
        "id": "5f187393826bcb83",
        "type": "inject",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3090,
        "y": 580,
        "wires": [
            [
                "39a9282e3a353e40"
            ]
        ]
    },
    {
        "id": "58338a302d37e3cb",
        "type": "ui_chart",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "group": "a5abd6722e30b021",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "3",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3730,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "49d045d19b6bc5bc",
        "type": "ui_chart",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "group": "a2d78cd214137d4d",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3730,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "adc688da0635e8da",
        "type": "ui_chart",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "group": "955add6de01d1a26",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "4",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3730,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "ef6b44c9eb0edbf1",
        "type": "ui_dropdown",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "label": "",
        "tooltip": "Choose which data you want to view: Past 1 Day, Week or Month",
        "place": "See Data",
        "group": "7954e854954f39fc",
        "order": 6,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Day",
                "value": "day",
                "type": "str"
            },
            {
                "label": "Week",
                "value": "week",
                "type": "str"
            },
            {
                "label": "Month",
                "value": "month",
                "type": "str"
            },
            {
                "label": "Hide",
                "value": "hide",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 3920,
        "y": 640,
        "wires": [
            [
                "f86692359d95b077"
            ]
        ]
    },
    {
        "id": "f86692359d95b077",
        "type": "switch",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "week",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "month",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "hide",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 4090,
        "y": 640,
        "wires": [
            [
                "35a2a496adc1144c"
            ],
            [
                "88b5f610bbd216b8"
            ],
            [
                "bc0dba1bb3611dad"
            ],
            [
                "1f940a373cd835ba"
            ]
        ]
    },
    {
        "id": "35a2a496adc1144c",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_DFR_Humidity_1_Day_Analysis\"],\"hide\":[\"Agilian_DFR_Humidity_1_Week_Analysis\",\"Agilian_DFR_Humidity_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 600,
        "wires": [
            [
                "62cfa7eea78f8d49"
            ]
        ]
    },
    {
        "id": "88b5f610bbd216b8",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_DFR_Humidity_1_Week_Analysis\"],\"hide\":[\"Agilian_DFR_Humidity_1_Day_Analysis\",\"Agilian_DFR_Humidity_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 640,
        "wires": [
            [
                "62cfa7eea78f8d49"
            ]
        ]
    },
    {
        "id": "bc0dba1bb3611dad",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_DFR_Humidity_1_Month_Analysis\"],\"hide\":[\"Agilian_DFR_Humidity_1_Week_Analysis\",\"Agilian_DFR_Humidity_1_Day_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 680,
        "wires": [
            [
                "62cfa7eea78f8d49"
            ]
        ]
    },
    {
        "id": "1f940a373cd835ba",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"hide\":[\"Agilian_DFR_Humidity_1_Day_Analysis\",\"Agilian_DFR_Humidity_1_Week_Analysis\",\"Agilian_DFR_Humidity_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 720,
        "wires": [
            [
                "62cfa7eea78f8d49"
            ]
        ]
    },
    {
        "id": "62cfa7eea78f8d49",
        "type": "ui_ui_control",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "events": "all",
        "x": 4500,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "f8450af10d6d720f",
        "type": "file in",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "filename": "D:\\Agilian Copy JD\\Artronics\\MQTT\\DFRPM1.0.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3190,
        "y": 880,
        "wires": [
            [
                "67b6c3c2d03fd6b7"
            ]
        ]
    },
    {
        "id": "743ad5fcabdc39f9",
        "type": "inject",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3070,
        "y": 820,
        "wires": [
            [
                "f8450af10d6d720f"
            ]
        ]
    },
    {
        "id": "67b6c3c2d03fd6b7",
        "type": "csv",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "sep": ",",
        "hdrin": false,
        "hdrout": "",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 3090,
        "y": 940,
        "wires": [
            [
                "943b153140fee53e",
                "2b21ba8e408528da",
                "5b4c22958449911a"
            ]
        ]
    },
    {
        "id": "943b153140fee53e",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Daily Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew;\n\nif (timec > (t - 86400000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n\"series\": [\"PM 1.0\"],\n\"data\":data_out,\n\"labels\": [\"PM 1.0\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3510,
        "y": 860,
        "wires": [
            [
                "126846c035701f6b"
            ]
        ]
    },
    {
        "id": "2b21ba8e408528da",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Weekly Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew;\n\nif (timec > (t - 604800000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n\"series\": [\"PM 1.0\"],\n\"data\":data_out,\n    \"labels\": [\"PM 1.0\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3520,
        "y": 900,
        "wires": [
            [
                "e653cd87d76cae03"
            ]
        ]
    },
    {
        "id": "5b4c22958449911a",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Monthly Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew; //Adjust time to GMT+8\n\nif (timec > (t - 2629743000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n    \"series\": [\"PM 1.0\"],\n\"data\":data_out,\n    \"labels\": [\"PM 1.0\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3520,
        "y": 940,
        "wires": [
            [
                "d1e1f62bcc0bb8a9"
            ]
        ]
    },
    {
        "id": "126846c035701f6b",
        "type": "ui_chart",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "group": "3aacea9310c3b031",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "3",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3710,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "e653cd87d76cae03",
        "type": "ui_chart",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "group": "b7b7dd92187d7144",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3710,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "d1e1f62bcc0bb8a9",
        "type": "ui_chart",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "group": "e26c3005d7854d9b",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "4",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3710,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "dbfb849c33a38884",
        "type": "ui_dropdown",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "label": "",
        "tooltip": "Choose which data you want to view: Past 1 Day, Week or Month",
        "place": "See Data",
        "group": "7954e854954f39fc",
        "order": 8,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Day",
                "value": "day",
                "type": "str"
            },
            {
                "label": "Week",
                "value": "week",
                "type": "str"
            },
            {
                "label": "Month",
                "value": "month",
                "type": "str"
            },
            {
                "label": "Hide",
                "value": "hide",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 3920,
        "y": 880,
        "wires": [
            [
                "36a1de4092224ece"
            ]
        ]
    },
    {
        "id": "36a1de4092224ece",
        "type": "switch",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "week",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "month",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "hide",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 4090,
        "y": 880,
        "wires": [
            [
                "4da1f23dd9cc1325"
            ],
            [
                "de11650ae8165a48"
            ],
            [
                "9bc471df51953585"
            ],
            [
                "5e767f81d00ac8a0"
            ]
        ]
    },
    {
        "id": "4da1f23dd9cc1325",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_DFR_PM_1.0_1_Day_Analysis\"],\"hide\":[\"Agilian_DFR_PM_1.0_1_Week_Analysis\",\"Agilian_DFR_PM_1.0_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 840,
        "wires": [
            [
                "6851107c9466d264"
            ]
        ]
    },
    {
        "id": "de11650ae8165a48",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_DFR_PM_1.0_1_Week_Analysis\"],\"hide\":[\"Agilian_DFR_PM_1.0_1_Day_Analysis\",\"Agilian_DFR_PM_1.0_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 880,
        "wires": [
            [
                "6851107c9466d264"
            ]
        ]
    },
    {
        "id": "9bc471df51953585",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_DFR_PM_1.0_1_Month_Analysis\"],\"hide\":[\"Agilian_DFR_PM_1.0_1_Week_Analysis\",\"Agilian_DFR_PM_1.0_1_Day_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 920,
        "wires": [
            [
                "6851107c9466d264"
            ]
        ]
    },
    {
        "id": "5e767f81d00ac8a0",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"hide\":[\"Agilian_DFR_PM_1.0_1_Day_Analysis\",\"Agilian_DFR_PM_1.0_1_Week_Analysis\",\"Agilian_DFR_PM_1.0_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 960,
        "wires": [
            [
                "6851107c9466d264"
            ]
        ]
    },
    {
        "id": "6851107c9466d264",
        "type": "ui_ui_control",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "events": "all",
        "x": 4500,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "5f0c3d7c287c71f6",
        "type": "inject",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3070,
        "y": 1000,
        "wires": [
            [
                "f76c6fd3139bcd23"
            ]
        ]
    },
    {
        "id": "f76c6fd3139bcd23",
        "type": "file in",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "filename": "D:\\Agilian Copy JD\\Artronics\\MQTT\\DFRPM2.5.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3190,
        "y": 1060,
        "wires": [
            [
                "eb570965a48afaa7"
            ]
        ]
    },
    {
        "id": "eb570965a48afaa7",
        "type": "csv",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "sep": ",",
        "hdrin": false,
        "hdrout": "",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 3090,
        "y": 1120,
        "wires": [
            [
                "74662788b74410c2",
                "41d0233f19ae1394",
                "e059e2ce099a0eff"
            ]
        ]
    },
    {
        "id": "74662788b74410c2",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Daily Graph",
        "func": "\nfunction toTimestamp(strDate) {\n    var datum = Date.parse(strDate);\n    return datum / 1000;\n}\nvar payload = msg.payload;\n\nvar d = new Date();\nvar t = d.getTime();\n\n\n\nvar data_out = [];\nvar a1 = [];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor (let i = 0; i < payload.length; i++) {\n\n    //var Data= payload[i].Data.split(\"-\");\n    //var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n    //var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\n    var timew = parseInt(payload[i][\"col1\"])\n    var timec = timew;\n\n    if (timec > (t - 86400000)) {\n        var temp1 = { \"x\": timec, \"y\": parseInt(payload[i][\"col2\"]) };\n        //var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n        //var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n        //var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n        //var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\n        a1.push(temp1);\n        //a2.push(temp2);\n        //a3.push(temp3);\n        //a4.push(temp4);\n    }\n\n    //\n\n\n}\n\ndata_out = [a1];\nmsg.payload = [{\n    \"series\": [\"PM 2.5\"],\n    \"data\": data_out,\n    \"labels\": [\"PM 2.5\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3510,
        "y": 1040,
        "wires": [
            [
                "767373d930ac24ba"
            ]
        ]
    },
    {
        "id": "41d0233f19ae1394",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Weekly Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew;\n\nif (timec > (t - 604800000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n    \"series\": [\"PM 2.5\"],\n\"data\":data_out,\n    \"labels\": [\"PM 2.5\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3520,
        "y": 1080,
        "wires": [
            [
                "120f52435fb4c8e3"
            ]
        ]
    },
    {
        "id": "e059e2ce099a0eff",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Monthly Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew; //Adjust time to GMT+8\n\nif (timec > (t - 2629743000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n    \"series\": [\"PM 2.5\"],\n\"data\":data_out,\n    \"labels\": [\"PM 2.5\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3520,
        "y": 1120,
        "wires": [
            [
                "7ef56d33ad50c876"
            ]
        ]
    },
    {
        "id": "767373d930ac24ba",
        "type": "ui_chart",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "group": "56cf429150fcb2dd",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "3",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3710,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "120f52435fb4c8e3",
        "type": "ui_chart",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "group": "e3c67dd63b291ef5",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3710,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "7ef56d33ad50c876",
        "type": "ui_chart",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "group": "6965b8a2fb51fa4c",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "4",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3710,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "446150905082a816",
        "type": "ui_dropdown",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "label": "",
        "tooltip": "Choose which data you want to view: Past 1 Day, Week or Month",
        "place": "See Data",
        "group": "7954e854954f39fc",
        "order": 10,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Day",
                "value": "day",
                "type": "str"
            },
            {
                "label": "Week",
                "value": "week",
                "type": "str"
            },
            {
                "label": "Month",
                "value": "month",
                "type": "str"
            },
            {
                "label": "Hide",
                "value": "hide",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 3920,
        "y": 1060,
        "wires": [
            [
                "ac39dd4ba5c11202"
            ]
        ]
    },
    {
        "id": "ac39dd4ba5c11202",
        "type": "switch",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "week",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "month",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "hide",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 4090,
        "y": 1060,
        "wires": [
            [
                "15ef4d8cfed29480"
            ],
            [
                "1de0a067ed1b6f76"
            ],
            [
                "9be289bc71a9330b"
            ],
            [
                "93bb7fbeb2d4c9a5"
            ]
        ]
    },
    {
        "id": "15ef4d8cfed29480",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_DFR_PM_2.5_1_Day_Analysis\"],\"hide\":[\"Agilian_DFR_PM_2.5_1_Week_Analysis\",\"Agilian_DFR_PM_2.5_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 1020,
        "wires": [
            [
                "d850ecd4d40d5717"
            ]
        ]
    },
    {
        "id": "1de0a067ed1b6f76",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_DFR_PM_2.5_1_Week_Analysis\"],\"hide\":[\"Agilian_DFR_PM_2.5_1_Day_Analysis\",\"Agilian_DFR_PM_2.5_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 1060,
        "wires": [
            [
                "d850ecd4d40d5717"
            ]
        ]
    },
    {
        "id": "9be289bc71a9330b",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_DFR_PM_2.5_1_Month_Analysis\"],\"hide\":[\"Agilian_DFR_PM_2.5_1_Week_Analysis\",\"Agilian_DFR_PM_2.5_1_Day_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 1100,
        "wires": [
            [
                "d850ecd4d40d5717"
            ]
        ]
    },
    {
        "id": "93bb7fbeb2d4c9a5",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"hide\":[\"Agilian_DFR_PM_2.5_1_Day_Analysis\",\"Agilian_DFR_PM_2.5_1_Week_Analysis\",\"Agilian_DFR_PM_2.5_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 1140,
        "wires": [
            [
                "d850ecd4d40d5717"
            ]
        ]
    },
    {
        "id": "d850ecd4d40d5717",
        "type": "ui_ui_control",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "events": "all",
        "x": 4500,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "46ead1205bf8d1bf",
        "type": "inject",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3070,
        "y": 1180,
        "wires": [
            [
                "7f7d3a1c9f80a13a"
            ]
        ]
    },
    {
        "id": "7f7d3a1c9f80a13a",
        "type": "file in",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "filename": "D:\\Agilian Copy JD\\Artronics\\MQTT\\DFRPM10.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3190,
        "y": 1240,
        "wires": [
            [
                "45d24be78e410fb1"
            ]
        ]
    },
    {
        "id": "45d24be78e410fb1",
        "type": "csv",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "sep": ",",
        "hdrin": false,
        "hdrout": "",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 3090,
        "y": 1300,
        "wires": [
            [
                "181d4e41f326dcc7",
                "71198359d2d03fee",
                "6ff7b2df57e2bd1e"
            ]
        ]
    },
    {
        "id": "181d4e41f326dcc7",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Daily Graph",
        "func": "\nfunction toTimestamp(strDate) {\n    var datum = Date.parse(strDate);\n    return datum / 1000;\n}\nvar payload = msg.payload;\n\nvar d = new Date();\nvar t = d.getTime();\n\n\n\nvar data_out = [];\nvar a1 = [];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor (let i = 0; i < payload.length; i++) {\n\n    //var Data= payload[i].Data.split(\"-\");\n    //var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n    //var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\n    var timew = parseInt(payload[i][\"col1\"])\n    var timec = timew;\n\n    if (timec > (t - 86400000)) {\n        var temp1 = { \"x\": timec, \"y\": parseInt(payload[i][\"col2\"]) };\n        //var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n        //var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n        //var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n        //var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\n        a1.push(temp1);\n        //a2.push(temp2);\n        //a3.push(temp3);\n        //a4.push(temp4);\n    }\n\n    //\n\n\n}\n\ndata_out = [a1];\nmsg.payload = [{\n    \"series\": [\"PM 10\"],\n    \"data\": data_out,\n    \"labels\": [\"PM 10\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3510,
        "y": 1220,
        "wires": [
            [
                "a43ea7c27cbd5612"
            ]
        ]
    },
    {
        "id": "71198359d2d03fee",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Weekly Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew;\n\nif (timec > (t - 604800000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n    \"series\": [\"PM 10\"],\n\"data\":data_out,\n    \"labels\": [\"PM 10\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3520,
        "y": 1260,
        "wires": [
            [
                "b93ea18ed24603b0"
            ]
        ]
    },
    {
        "id": "6ff7b2df57e2bd1e",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Monthly Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew; //Adjust time to GMT+8\n\nif (timec > (t - 2629743000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n    \"series\": [\"PM 10\"],\n\"data\":data_out,\n    \"labels\": [\"PM 10\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3520,
        "y": 1300,
        "wires": [
            [
                "13e55698b4da9e12"
            ]
        ]
    },
    {
        "id": "a43ea7c27cbd5612",
        "type": "ui_chart",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "group": "0296b03b9dcdc2ae",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "3",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3710,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "b93ea18ed24603b0",
        "type": "ui_chart",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "group": "a4f5b74bf89735ce",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3710,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "13e55698b4da9e12",
        "type": "ui_chart",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "group": "394b6eeab2cbcd3b",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "4",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3710,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "591ae9783747452a",
        "type": "ui_dropdown",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "label": "",
        "tooltip": "Choose which data you want to view: Past 1 Day, Week or Month",
        "place": "See Data",
        "group": "7954e854954f39fc",
        "order": 12,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Day",
                "value": "day",
                "type": "str"
            },
            {
                "label": "Week",
                "value": "week",
                "type": "str"
            },
            {
                "label": "Month",
                "value": "month",
                "type": "str"
            },
            {
                "label": "Hide",
                "value": "hide",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 3920,
        "y": 1240,
        "wires": [
            [
                "944c540c7f8cf287"
            ]
        ]
    },
    {
        "id": "944c540c7f8cf287",
        "type": "switch",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "week",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "month",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "hide",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 4090,
        "y": 1240,
        "wires": [
            [
                "5c373c98239e8f7a"
            ],
            [
                "491467941d68ac79"
            ],
            [
                "ec48643118434580"
            ],
            [
                "482094c5075c2f7d"
            ]
        ]
    },
    {
        "id": "5c373c98239e8f7a",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_DFR_PM_10_1_Day_Analysis\"],\"hide\":[\"Agilian_DFR_PM_10_1_Week_Analysis\",\"Agilian_DFR_PM_10_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 1200,
        "wires": [
            [
                "f141dc47eb8e3502"
            ]
        ]
    },
    {
        "id": "491467941d68ac79",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_DFR_PM_10_1_Week_Analysis\"],\"hide\":[\"Agilian_DFR_PM_10_1_Day_Analysis\",\"Agilian_DFR_PM_10_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 1240,
        "wires": [
            [
                "f141dc47eb8e3502"
            ]
        ]
    },
    {
        "id": "ec48643118434580",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_DFR_PM_10_1_Month_Analysis\"],\"hide\":[\"Agilian_DFR_PM_10_1_Week_Analysis\",\"Agilian_DFR_PM_10_1_Day_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 1280,
        "wires": [
            [
                "f141dc47eb8e3502"
            ]
        ]
    },
    {
        "id": "482094c5075c2f7d",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"hide\":[\"Agilian_DFR_PM_10_1_Day_Analysis\",\"Agilian_DFR_PM_10_1_Week_Analysis\",\"Agilian_DFR_PM_10_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 1320,
        "wires": [
            [
                "f141dc47eb8e3502"
            ]
        ]
    },
    {
        "id": "f141dc47eb8e3502",
        "type": "ui_ui_control",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "events": "all",
        "x": 4500,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "0f365be54cb0e97a",
        "type": "inject",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3070,
        "y": 1340,
        "wires": [
            [
                "4a34f98fbfb68e65"
            ]
        ]
    },
    {
        "id": "4a34f98fbfb68e65",
        "type": "file in",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "filename": "D:\\Agilian Copy JD\\Artronics\\MQTT\\DFRCO2.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3190,
        "y": 1380,
        "wires": [
            [
                "981b756be5769f30"
            ]
        ]
    },
    {
        "id": "981b756be5769f30",
        "type": "csv",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "sep": ",",
        "hdrin": false,
        "hdrout": "",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 3090,
        "y": 1440,
        "wires": [
            [
                "6a0580ebed52b9df",
                "8485c0299ec487e4",
                "4848172da338113f"
            ]
        ]
    },
    {
        "id": "6a0580ebed52b9df",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Daily Graph",
        "func": "\nfunction toTimestamp(strDate) {\n    var datum = Date.parse(strDate);\n    return datum / 1000;\n}\nvar payload = msg.payload;\n\nvar d = new Date();\nvar t = d.getTime();\n\n\n\nvar data_out = [];\nvar a1 = [];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor (let i = 0; i < payload.length; i++) {\n\n    //var Data= payload[i].Data.split(\"-\");\n    //var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n    //var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\n    var timew = parseInt(payload[i][\"col1\"])\n    var timec = timew;\n\n    if (timec > (t - 86400000)) {\n        var temp1 = { \"x\": timec, \"y\": parseInt(payload[i][\"col2\"]) };\n        //var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n        //var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n        //var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n        //var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\n        a1.push(temp1);\n        //a2.push(temp2);\n        //a3.push(temp3);\n        //a4.push(temp4);\n    }\n\n    //\n\n\n}\n\ndata_out = [a1];\nmsg.payload = [{\n    \"series\": [\"CO2\"],\n    \"data\": data_out,\n    \"labels\": [\"CO2\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3510,
        "y": 1360,
        "wires": [
            [
                "1775216489302ff9"
            ]
        ]
    },
    {
        "id": "8485c0299ec487e4",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Weekly Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew;\n\nif (timec > (t - 604800000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n    \"series\": [\"CO2\"],\n    \"data\": data_out,\n    \"labels\": [\"CO2\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3520,
        "y": 1400,
        "wires": [
            [
                "394b89b47c04f7cd"
            ]
        ]
    },
    {
        "id": "4848172da338113f",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Monthly Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew; //Adjust time to GMT+8\n\nif (timec > (t - 2629743000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n    \"series\": [\"CO2\"],\n    \"data\": data_out,\n    \"labels\": [\"CO2\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3520,
        "y": 1440,
        "wires": [
            [
                "0f915ff254b8c3e8"
            ]
        ]
    },
    {
        "id": "1775216489302ff9",
        "type": "ui_chart",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "group": "aaabd96e75fecfce",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "3",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3710,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "394b89b47c04f7cd",
        "type": "ui_chart",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "group": "ba2aaaccaac15c20",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3710,
        "y": 1400,
        "wires": [
            []
        ]
    },
    {
        "id": "0f915ff254b8c3e8",
        "type": "ui_chart",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "group": "a06a95c6b90964af",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "4",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3710,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "743b0ff3b354b992",
        "type": "ui_dropdown",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "label": "",
        "tooltip": "Choose which data you want to view: Past 1 Day, Week or Month",
        "place": "See Data",
        "group": "7954e854954f39fc",
        "order": 14,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Day",
                "value": "day",
                "type": "str"
            },
            {
                "label": "Week",
                "value": "week",
                "type": "str"
            },
            {
                "label": "Month",
                "value": "month",
                "type": "str"
            },
            {
                "label": "Hide",
                "value": "hide",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 3920,
        "y": 1420,
        "wires": [
            [
                "8efaf7c7244e734c"
            ]
        ]
    },
    {
        "id": "8efaf7c7244e734c",
        "type": "switch",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "week",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "month",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "hide",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 4090,
        "y": 1420,
        "wires": [
            [
                "01b6be6f70a539d6"
            ],
            [
                "717233ff55cfee0b"
            ],
            [
                "77f6636c4881c711"
            ],
            [
                "5bd5f0ad8c4d49b6"
            ]
        ]
    },
    {
        "id": "01b6be6f70a539d6",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_DFR_CO2_1_Day_Analysis\"],\"hide\":[\"Agilian_DFR_CO2_1_Week_Analysis\",\"Agilian_DFR_CO2_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 1380,
        "wires": [
            [
                "0509f5a620c1a34c"
            ]
        ]
    },
    {
        "id": "717233ff55cfee0b",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_DFR_CO2_1_Week_Analysis\"],\"hide\":[\"Agilian_DFR_CO2_1_Day_Analysis\",\"Agilian_DFR_CO2_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 1420,
        "wires": [
            [
                "0509f5a620c1a34c"
            ]
        ]
    },
    {
        "id": "77f6636c4881c711",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_DFR_CO2_1_Month_Analysis\"],\"hide\":[\"Agilian_DFR_CO2_1_Week_Analysis\",\"Agilian_DFR_CO2_1_Day_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 1460,
        "wires": [
            [
                "0509f5a620c1a34c"
            ]
        ]
    },
    {
        "id": "5bd5f0ad8c4d49b6",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"hide\":[\"Agilian_DFR_CO2_1_Day_Analysis\",\"Agilian_DFR_CO2_1_Week_Analysis\",\"Agilian_DFR_CO2_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 1500,
        "wires": [
            [
                "0509f5a620c1a34c"
            ]
        ]
    },
    {
        "id": "0509f5a620c1a34c",
        "type": "ui_ui_control",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "events": "all",
        "x": 4500,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "f7953c90c32f2e91",
        "type": "inject",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3070,
        "y": 1520,
        "wires": [
            [
                "27cb6c98da20d1c1"
            ]
        ]
    },
    {
        "id": "27cb6c98da20d1c1",
        "type": "file in",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "filename": "D:\\Agilian Copy JD\\Artronics\\MQTT\\DFRHuman.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3190,
        "y": 1560,
        "wires": [
            [
                "3945b288df1745fa"
            ]
        ]
    },
    {
        "id": "3945b288df1745fa",
        "type": "csv",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "sep": ",",
        "hdrin": false,
        "hdrout": "",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 3090,
        "y": 1620,
        "wires": [
            [
                "1f486a409209e0d6",
                "aaea40140f758226",
                "628c50c6ae205f3c"
            ]
        ]
    },
    {
        "id": "1f486a409209e0d6",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Daily Graph",
        "func": "\nfunction toTimestamp(strDate) {\n    var datum = Date.parse(strDate);\n    return datum / 1000;\n}\nvar payload = msg.payload;\n\nvar d = new Date();\nvar t = d.getTime();\n\n\n\nvar data_out = [];\nvar a1 = [];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor (let i = 0; i < payload.length; i++) {\n\n    //var Data= payload[i].Data.split(\"-\");\n    //var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n    //var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\n    var timew = parseInt(payload[i][\"col1\"])\n    var timec = timew;\n\n    if (timec > (t - 86400000)) {\n        var temp1 = { \"x\": timec, \"y\": parseInt(payload[i][\"col2\"]) };\n        //var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n        //var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n        //var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n        //var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\n        a1.push(temp1);\n        //a2.push(temp2);\n        //a3.push(temp3);\n        //a4.push(temp4);\n    }\n\n    //\n\n\n}\n\ndata_out = [a1];\nmsg.payload = [{\n    \"series\": [\"Human\"],\n    \"data\": data_out,\n    \"labels\": [\"Human\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3510,
        "y": 1540,
        "wires": [
            [
                "55d41bb526eb84de"
            ]
        ]
    },
    {
        "id": "aaea40140f758226",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Weekly Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew;\n\nif (timec > (t - 604800000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n    \"series\": [\"Human\"],\n    \"data\": data_out,\n    \"labels\": [\"Human\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3520,
        "y": 1580,
        "wires": [
            [
                "d83382764e147330"
            ]
        ]
    },
    {
        "id": "628c50c6ae205f3c",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Monthly Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew; //Adjust time to GMT+8\n\nif (timec > (t - 2629743000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n    \"series\": [\"Human\"],\n    \"data\": data_out,\n    \"labels\": [\"Human\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3520,
        "y": 1620,
        "wires": [
            [
                "6d2a8b76e99faed9"
            ]
        ]
    },
    {
        "id": "55d41bb526eb84de",
        "type": "ui_chart",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "group": "9848b7b9a8edd74c",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "3",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3710,
        "y": 1540,
        "wires": [
            []
        ]
    },
    {
        "id": "d83382764e147330",
        "type": "ui_chart",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "group": "60f42a1320c31738",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3710,
        "y": 1580,
        "wires": [
            []
        ]
    },
    {
        "id": "6d2a8b76e99faed9",
        "type": "ui_chart",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "group": "a14a8c260d157f13",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "4",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3710,
        "y": 1620,
        "wires": [
            []
        ]
    },
    {
        "id": "53ebdeb7db4068b8",
        "type": "ui_dropdown",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "label": "",
        "tooltip": "Choose which data you want to view: Past 1 Day, Week or Month",
        "place": "See Data",
        "group": "7954e854954f39fc",
        "order": 16,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Day",
                "value": "day",
                "type": "str"
            },
            {
                "label": "Week",
                "value": "week",
                "type": "str"
            },
            {
                "label": "Month",
                "value": "month",
                "type": "str"
            },
            {
                "label": "Hide",
                "value": "hide",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 3920,
        "y": 1580,
        "wires": [
            [
                "f884bc5588a300f5"
            ]
        ]
    },
    {
        "id": "f884bc5588a300f5",
        "type": "switch",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "week",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "month",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "hide",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 4090,
        "y": 1580,
        "wires": [
            [
                "3d7bfb4f6fd21b09"
            ],
            [
                "1e6506e3d38163c3"
            ],
            [
                "29831071ab308df2"
            ],
            [
                "8d3ef864ca2e30ef"
            ]
        ]
    },
    {
        "id": "3d7bfb4f6fd21b09",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_DFR_Human_1_Day_Analysis\"],\"hide\":[\"Agilian_DFR_Human_1_Week_Analysis\",\"Agilian_DFR_Human_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 1540,
        "wires": [
            [
                "63eadfd34d98ac9b"
            ]
        ]
    },
    {
        "id": "1e6506e3d38163c3",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_DFR_Human_1_Week_Analysis\"],\"hide\":[\"Agilian_DFR_Human_1_Day_Analysis\",\"Agilian_DFR_Human_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 1580,
        "wires": [
            [
                "63eadfd34d98ac9b"
            ]
        ]
    },
    {
        "id": "29831071ab308df2",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_DFR_Human_1_Month_Analysis\"],\"hide\":[\"Agilian_DFR_Human_1_Week_Analysis\",\"Agilian_DFR_Human_1_Day_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 1620,
        "wires": [
            [
                "63eadfd34d98ac9b"
            ]
        ]
    },
    {
        "id": "8d3ef864ca2e30ef",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"hide\":[\"Agilian_DFR_Human_1_Day_Analysis\",\"Agilian_DFR_Human_1_Week_Analysis\",\"Agilian_DFR_Human_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 1660,
        "wires": [
            [
                "63eadfd34d98ac9b"
            ]
        ]
    },
    {
        "id": "63eadfd34d98ac9b",
        "type": "ui_ui_control",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "events": "all",
        "x": 4500,
        "y": 1580,
        "wires": [
            []
        ]
    },
    {
        "id": "c5465943a69d42bb",
        "type": "inject",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1450,
        "y": 1000,
        "wires": [
            [
                "d6a3f06abe1032e7"
            ]
        ]
    },
    {
        "id": "d6a3f06abe1032e7",
        "type": "file in",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "filename": "D:\\Agilian Copy JD\\Artronics\\MQTT\\CNCRmPower.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1580,
        "y": 1040,
        "wires": [
            [
                "cc933c49c2294f4d"
            ]
        ]
    },
    {
        "id": "cc933c49c2294f4d",
        "type": "csv",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "sep": ",",
        "hdrin": false,
        "hdrout": "",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1470,
        "y": 1100,
        "wires": [
            [
                "dcb013ae4d097df7",
                "d2d1f8705f5ccf89",
                "7d76e1c6d51aaf56"
            ]
        ]
    },
    {
        "id": "dcb013ae4d097df7",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Daily Graph",
        "func": "\nfunction toTimestamp(strDate) {\n    var datum = Date.parse(strDate);\n    return datum / 1000;\n}\nvar payload = msg.payload;\n\nvar d = new Date();\nvar t = d.getTime();\n\n\n\nvar data_out = [];\nvar a1 = [];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor (let i = 0; i < payload.length; i++) {\n\n    //var Data= payload[i].Data.split(\"-\");\n    //var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n    //var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\n    var timew = parseInt(payload[i][\"col1\"])\n    var timec = timew;\n\n    if (timec > (t - 86400000)) {\n        var temp1 = { \"x\": timec, \"y\": parseInt(payload[i][\"col2\"]) };\n        //var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n        //var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n        //var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n        //var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\n        a1.push(temp1);\n        //a2.push(temp2);\n        //a3.push(temp3);\n        //a4.push(temp4);\n    }\n\n    //\n\n\n}\n\ndata_out = [a1];\nmsg.payload = [{\n    \"series\": [\"Power\"],\n    \"data\": data_out,\n    \"labels\": [\"Power\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1890,
        "y": 1020,
        "wires": [
            [
                "2401a2b6539ad49e"
            ]
        ]
    },
    {
        "id": "d2d1f8705f5ccf89",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Weekly Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew;\n\nif (timec > (t - 604800000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n    \"series\": [\"Power\"],\n    \"data\": data_out,\n    \"labels\": [\"Power\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1900,
        "y": 1060,
        "wires": [
            [
                "56c758ddb75b256b"
            ]
        ]
    },
    {
        "id": "7d76e1c6d51aaf56",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Monthly Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew; //Adjust time to GMT+8\n\nif (timec > (t - 2629743000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n    \"series\": [\"Power\"],\n    \"data\": data_out,\n    \"labels\": [\"Power\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1900,
        "y": 1100,
        "wires": [
            [
                "40a451e28d24ffe1"
            ]
        ]
    },
    {
        "id": "2401a2b6539ad49e",
        "type": "ui_chart",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "group": "bb06ddebe53994bd",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "3",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2090,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "56c758ddb75b256b",
        "type": "ui_chart",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "group": "afd8148c56277c0d",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2090,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "40a451e28d24ffe1",
        "type": "ui_chart",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "group": "49f5ea3d8049c82a",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "4",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2090,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "4d615fee97736647",
        "type": "ui_dropdown",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "label": "",
        "tooltip": "Choose which data you want to view: Past 1 Day, Week or Month",
        "place": "See Data",
        "group": "3c1b0362a1990a3d",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Day",
                "value": "day",
                "type": "str"
            },
            {
                "label": "Week",
                "value": "week",
                "type": "str"
            },
            {
                "label": "Month",
                "value": "month",
                "type": "str"
            },
            {
                "label": "Hide",
                "value": "hide",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 900,
        "y": 1280,
        "wires": [
            [
                "c074ce6276751b22"
            ]
        ]
    },
    {
        "id": "c074ce6276751b22",
        "type": "switch",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "week",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "month",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "hide",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 1070,
        "y": 1280,
        "wires": [
            [
                "cc8e671a3a43294a"
            ],
            [
                "93a10521728fa26f"
            ],
            [
                "4176acb6b5c32fda"
            ],
            [
                "9dfb8c75170d28cc"
            ]
        ]
    },
    {
        "id": "cc8e671a3a43294a",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_CNC_Room_Power_1_Day_Analysis\"],\"hide\":[\"Agilian_CNC_Room_Power_1_Week_Analysis\",\"Agilian_CNC_Room_Power_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1260,
        "y": 1240,
        "wires": [
            [
                "944d0cc75de90805"
            ]
        ]
    },
    {
        "id": "93a10521728fa26f",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_CNC_Room_Power_1_Week_Analysis\"],\"hide\":[\"Agilian_CNC_Room_Power_1_Day_Analysis\",\"Agilian_CNC_Room_Power_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1260,
        "y": 1280,
        "wires": [
            [
                "944d0cc75de90805"
            ]
        ]
    },
    {
        "id": "4176acb6b5c32fda",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_CNC_Room_Power_1_Month_Analysis\"],\"hide\":[\"Agilian_CNC_Room_Power_1_Week_Analysis\",\"Agilian_CNC_Room_Power_1_Day_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1260,
        "y": 1320,
        "wires": [
            [
                "944d0cc75de90805"
            ]
        ]
    },
    {
        "id": "9dfb8c75170d28cc",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"hide\":[\"Agilian_CNC_Room_Power_1_Day_Analysis\",\"Agilian_CNC_Room_Power_1_Week_Analysis\",\"Agilian_CNC_Room_Power_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1260,
        "y": 1360,
        "wires": [
            [
                "944d0cc75de90805"
            ]
        ]
    },
    {
        "id": "944d0cc75de90805",
        "type": "ui_ui_control",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "events": "all",
        "x": 1480,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "72840d1ed0a83fb1",
        "type": "inject",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1470,
        "y": 1420,
        "wires": [
            [
                "f12bfa9f98a079f5"
            ]
        ]
    },
    {
        "id": "f12bfa9f98a079f5",
        "type": "file in",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "filename": "D:\\Agilian Copy JD\\Artronics\\MQTT\\IRPower.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1580,
        "y": 1460,
        "wires": [
            [
                "2efe71dc304f73c2"
            ]
        ]
    },
    {
        "id": "2efe71dc304f73c2",
        "type": "csv",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "sep": ",",
        "hdrin": false,
        "hdrout": "",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1490,
        "y": 1520,
        "wires": [
            [
                "cfade465e59a0c16",
                "32cd2092f3d0c856",
                "0e8d37fac2780ae7"
            ]
        ]
    },
    {
        "id": "cfade465e59a0c16",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Daily Graph",
        "func": "\nfunction toTimestamp(strDate) {\n    var datum = Date.parse(strDate);\n    return datum / 1000;\n}\nvar payload = msg.payload;\n\nvar d = new Date();\nvar t = d.getTime();\n\n\n\nvar data_out = [];\nvar a1 = [];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor (let i = 0; i < payload.length; i++) {\n\n    //var Data= payload[i].Data.split(\"-\");\n    //var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n    //var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\n    var timew = parseInt(payload[i][\"col1\"])\n    var timec = timew;\n\n    if (timec > (t - 86400000)) {\n        var temp1 = { \"x\": timec, \"y\": parseInt(payload[i][\"col2\"]) };\n        //var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n        //var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n        //var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n        //var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\n        a1.push(temp1);\n        //a2.push(temp2);\n        //a3.push(temp3);\n        //a4.push(temp4);\n    }\n\n    //\n\n\n}\n\ndata_out = [a1];\nmsg.payload = [{\n    \"series\": [\"Power\"],\n    \"data\": data_out,\n    \"labels\": [\"Power\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1910,
        "y": 1440,
        "wires": [
            [
                "672205551a99196e"
            ]
        ]
    },
    {
        "id": "32cd2092f3d0c856",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Weekly Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew;\n\nif (timec > (t - 604800000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n    \"series\": [\"Power\"],\n    \"data\": data_out,\n    \"labels\": [\"Power\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1920,
        "y": 1480,
        "wires": [
            [
                "986082e439b8351d"
            ]
        ]
    },
    {
        "id": "0e8d37fac2780ae7",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Monthly Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew; //Adjust time to GMT+8\n\nif (timec > (t - 2629743000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n    \"series\": [\"Power\"],\n    \"data\": data_out,\n    \"labels\": [\"Power\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1920,
        "y": 1520,
        "wires": [
            [
                "19ec6faab70b9905"
            ]
        ]
    },
    {
        "id": "672205551a99196e",
        "type": "ui_chart",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "group": "b8e444f02d9707b0",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "3",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2110,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "986082e439b8351d",
        "type": "ui_chart",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "group": "026814397ea417e9",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2110,
        "y": 1480,
        "wires": [
            []
        ]
    },
    {
        "id": "19ec6faab70b9905",
        "type": "ui_chart",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "group": "22ef37e90d0bdcaa",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "4",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2110,
        "y": 1520,
        "wires": [
            []
        ]
    },
    {
        "id": "6ffce82f8dcef7dd",
        "type": "ui_dropdown",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "label": "",
        "tooltip": "Choose which data you want to view: Past 1 Day, Week or Month",
        "place": "See Data",
        "group": "3fe3c502aec2c01d",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Day",
                "value": "day",
                "type": "str"
            },
            {
                "label": "Week",
                "value": "week",
                "type": "str"
            },
            {
                "label": "Month",
                "value": "month",
                "type": "str"
            },
            {
                "label": "Hide",
                "value": "hide",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 960,
        "y": 1760,
        "wires": [
            [
                "5193c2d3d7cb5b9f"
            ]
        ]
    },
    {
        "id": "5193c2d3d7cb5b9f",
        "type": "switch",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "week",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "month",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "hide",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 1130,
        "y": 1760,
        "wires": [
            [
                "1995b22deb8995be"
            ],
            [
                "16559057b8c5990e"
            ],
            [
                "0d1d8fe3c75dcc0f"
            ],
            [
                "8d1d56ec9ae9c7cd"
            ]
        ]
    },
    {
        "id": "1995b22deb8995be",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_Injection_Room_Power_1_Day_Analysis\"],\"hide\":[\"Agilian_Injection_Room_Power_1_Week_Analysis\",\"Agilian_Injection_Room_Power_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 1720,
        "wires": [
            [
                "88d4fa3d97f349c1"
            ]
        ]
    },
    {
        "id": "16559057b8c5990e",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_Injection_Room_Power_1_Week_Analysis\"],\"hide\":[\"Agilian_Injection_Room_Power_1_Day_Analysis\",\"Agilian_Injection_Room_Power_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 1760,
        "wires": [
            [
                "88d4fa3d97f349c1"
            ]
        ]
    },
    {
        "id": "0d1d8fe3c75dcc0f",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_Injection_Room_Power_1_Month_Analysis\"],\"hide\":[\"Agilian_Injection_Room_Power_1_Week_Analysis\",\"Agilian_Injection_Room_Power_1_Day_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 1800,
        "wires": [
            [
                "88d4fa3d97f349c1"
            ]
        ]
    },
    {
        "id": "8d1d56ec9ae9c7cd",
        "type": "change",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"hide\":[\"Agilian_Injection_Room_Power_1_Day_Analysis\",\"Agilian_Injection_Room_Power_1_Week_Analysis\",\"Agilian_Injection_Room_Power_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 1840,
        "wires": [
            [
                "88d4fa3d97f349c1"
            ]
        ]
    },
    {
        "id": "88d4fa3d97f349c1",
        "type": "ui_ui_control",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "events": "all",
        "x": 1540,
        "y": 1760,
        "wires": [
            []
        ]
    },
    {
        "id": "6e2d1456f2c3e90a",
        "type": "function",
        "z": "c0c5ee6ca985e392",
        "name": "Format Time",
        "func": "var d = new Date(msg.payload)\nmsg.payload = d.toLocaleString('zh-CN', { timeZone: 'PRC' })\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 60,
        "wires": [
            [
                "1ec9617411ab69b5"
            ]
        ]
    },
    {
        "id": "1c14859e9fec545e",
        "type": "ui_ui_control",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "events": "all",
        "x": 4100,
        "y": 480,
        "wires": [
            [
                "a0715f35f8692a1a"
            ]
        ]
    },
    {
        "id": "9216e08654045ac9",
        "type": "ui_ui_control",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "events": "all",
        "x": 4080,
        "y": 720,
        "wires": [
            [
                "1f940a373cd835ba"
            ]
        ]
    },
    {
        "id": "fcee8ef223f08153",
        "type": "ui_ui_control",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "events": "all",
        "x": 4060,
        "y": 1320,
        "wires": [
            [
                "482094c5075c2f7d"
            ]
        ]
    },
    {
        "id": "bf49dcb25dda42b4",
        "type": "ui_ui_control",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "events": "all",
        "x": 4080,
        "y": 1660,
        "wires": [
            [
                "8d3ef864ca2e30ef"
            ]
        ]
    },
    {
        "id": "cc15e3f2cc7ff0b0",
        "type": "ui_ui_control",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "events": "all",
        "x": 4100,
        "y": 60,
        "wires": [
            [
                "f4aeb1c092ddcf7a"
            ]
        ]
    },
    {
        "id": "60cc0a44f226befa",
        "type": "ui_ui_control",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "events": "all",
        "x": 4080,
        "y": 820,
        "wires": [
            [
                "4da1f23dd9cc1325"
            ]
        ]
    },
    {
        "id": "915a97297586feea",
        "type": "ui_ui_control",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "events": "all",
        "x": 4080,
        "y": 1000,
        "wires": [
            [
                "15ef4d8cfed29480"
            ]
        ]
    },
    {
        "id": "ae2e40a94a368488",
        "type": "ui_ui_control",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "events": "all",
        "x": 4080,
        "y": 1360,
        "wires": [
            [
                "01b6be6f70a539d6"
            ]
        ]
    },
    {
        "id": "c7cc2a63f41c4ad7",
        "type": "ui_ui_control",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "events": "all",
        "x": 1249,
        "y": 294,
        "wires": [
            [
                "3713f12575c6831e"
            ]
        ]
    },
    {
        "id": "b984b780ada85c11",
        "type": "ui_ui_control",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "events": "all",
        "x": 1220,
        "y": 760,
        "wires": [
            [
                "4c0eb725a7e94a0e"
            ]
        ]
    },
    {
        "id": "c6dd91170ca0495a",
        "type": "ui_ui_control",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "events": "all",
        "x": 1180,
        "y": 1180,
        "wires": [
            [
                "cc8e671a3a43294a"
            ]
        ]
    },
    {
        "id": "a3532c06c89758f6",
        "type": "ui_ui_control",
        "z": "c0c5ee6ca985e392",
        "name": "",
        "events": "all",
        "x": 1157,
        "y": 1696,
        "wires": [
            [
                "1995b22deb8995be"
            ]
        ]
    },
    {
        "id": "d17221b73e1f3c29",
        "type": "ui_spacer",
        "z": "c0c5ee6ca985e392",
        "name": "spacer",
        "group": "382598d1a0b04297",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "00523e7f818c40f0",
        "type": "ui_spacer",
        "z": "c0c5ee6ca985e392",
        "name": "spacer",
        "group": "382598d1a0b04297",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "e77f7e6b3b256f36",
        "type": "ui_spacer",
        "z": "c0c5ee6ca985e392",
        "name": "spacer",
        "group": "382598d1a0b04297",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "3f13db7b7be21761",
        "type": "ui_spacer",
        "z": "c0c5ee6ca985e392",
        "name": "spacer",
        "group": "382598d1a0b04297",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "39eff7e8a04d3666",
        "type": "ui_spacer",
        "z": "c0c5ee6ca985e392",
        "name": "spacer",
        "group": "7954e854954f39fc",
        "order": 17,
        "width": "12",
        "height": "1"
    },
    {
        "id": "52d3d41428d85443",
        "type": "ui_spacer",
        "z": "c0c5ee6ca985e392",
        "name": "spacer",
        "group": "80c39a7a7e650d5b",
        "order": 3,
        "width": "6",
        "height": "1"
    },
    {
        "id": "8d882bada7ac5849",
        "type": "ui_spacer",
        "z": "c0c5ee6ca985e392",
        "name": "spacer",
        "group": "13944f72978d5540",
        "order": 4,
        "width": "6",
        "height": "1"
    },
    {
        "id": "6774d8793f2ebf40",
        "type": "ui_spacer",
        "z": "c0c5ee6ca985e392",
        "name": "spacer",
        "group": "3c1b0362a1990a3d",
        "order": 5,
        "width": "6",
        "height": "1"
    },
    {
        "id": "89d2441b9bebf6a1",
        "type": "ui_spacer",
        "z": "c0c5ee6ca985e392",
        "name": "spacer",
        "group": "3fe3c502aec2c01d",
        "order": 6,
        "width": "6",
        "height": "1"
    },
    {
        "id": "e42cdc18ac58f86d",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mqtt://mqtt.button.plus",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "5",
        "keepalive": "20",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "80c39a7a7e650d5b",
        "type": "ui_group",
        "name": "1st Floor",
        "tab": "eac9bf1de9b14e90",
        "order": 3,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "7954e854954f39fc",
        "type": "ui_group",
        "name": "Dust Free Room",
        "tab": "eac9bf1de9b14e90",
        "order": 2,
        "disp": true,
        "width": 12,
        "collapse": false,
        "className": ""
    },
    {
        "id": "13944f72978d5540",
        "type": "ui_group",
        "name": "Main AC",
        "tab": "eac9bf1de9b14e90",
        "order": 4,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "382598d1a0b04297",
        "type": "ui_group",
        "name": "General",
        "tab": "eac9bf1de9b14e90",
        "order": 1,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3c1b0362a1990a3d",
        "type": "ui_group",
        "name": "CNC Room",
        "tab": "eac9bf1de9b14e90",
        "order": 5,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "3fe3c502aec2c01d",
        "type": "ui_group",
        "name": "Injection Room",
        "tab": "eac9bf1de9b14e90",
        "order": 6,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "813d2b24e7b11477",
        "type": "mqtt-broker",
        "name": "",
        "broker": "39.105.38.254",
        "port": "10051",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "2ece0c9f3a7aa2b0",
        "type": "ui_group",
        "name": "DFR Power 1 Week Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 9,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "d38e067ab6d9ba8b",
        "type": "ui_group",
        "name": "DFR Power 1 Month Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 10,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "a3b39a61336c03ac",
        "type": "ui_group",
        "name": "DFR Power 1 Day Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 8,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "6c54205071e70adf",
        "type": "ui_group",
        "name": "Main AC Power 1 Week Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 36,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "82c7a0e629872576",
        "type": "ui_group",
        "name": "Main AC Power 1 Month Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 37,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "ab647176e5dc8734",
        "type": "ui_group",
        "name": "Main AC Power 1 Day Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 35,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "30e4fa1942cc6921",
        "type": "ui_group",
        "name": "1st Floor Power 1 Week Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 33,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "fde19be8a9b43e68",
        "type": "ui_group",
        "name": "1st Floor Power 1 Month Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 34,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "1da32c670f99d70f",
        "type": "ui_group",
        "name": "1st Floor Power 1 Day Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 32,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "2760b11ddeaa97df",
        "type": "ui_group",
        "name": "DFR Temperature 1 Day Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 11,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "a07a4a8c7270215c",
        "type": "ui_group",
        "name": "DFR Temperature 1 Week Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 12,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "a4d5177ff3905c30",
        "type": "ui_group",
        "name": "DFR Temperature 1 Month Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 13,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "a5abd6722e30b021",
        "type": "ui_group",
        "name": "DFR Humidity 1 Day Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 14,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "a2d78cd214137d4d",
        "type": "ui_group",
        "name": "DFR Humidity 1 Week Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 15,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "955add6de01d1a26",
        "type": "ui_group",
        "name": "DFR Humidity 1 Month Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 16,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "3aacea9310c3b031",
        "type": "ui_group",
        "name": "DFR PM 1.0 1 Day Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 17,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "b7b7dd92187d7144",
        "type": "ui_group",
        "name": "DFR PM 1.0 1 Week Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 18,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "e26c3005d7854d9b",
        "type": "ui_group",
        "name": "DFR PM 1.0 1 Month Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 19,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "56cf429150fcb2dd",
        "type": "ui_group",
        "name": "DFR PM 2.5 1 Day Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 20,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "e3c67dd63b291ef5",
        "type": "ui_group",
        "name": "DFR PM 2.5 1 Week Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 21,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "6965b8a2fb51fa4c",
        "type": "ui_group",
        "name": "DFR PM 2.5 1 Month Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 22,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "0296b03b9dcdc2ae",
        "type": "ui_group",
        "name": "DFR PM 10 1 Day Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 23,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "a4f5b74bf89735ce",
        "type": "ui_group",
        "name": "DFR PM 10 1 Week Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 24,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "394b6eeab2cbcd3b",
        "type": "ui_group",
        "name": "DFR PM 10 1 Month Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 25,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "aaabd96e75fecfce",
        "type": "ui_group",
        "name": "DFR CO2 1 Day Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 26,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "ba2aaaccaac15c20",
        "type": "ui_group",
        "name": "DFR CO2 1 Week Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 27,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "a06a95c6b90964af",
        "type": "ui_group",
        "name": "DFR CO2 1 Month Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 28,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "9848b7b9a8edd74c",
        "type": "ui_group",
        "name": "DFR Human 1 Day Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 29,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "60f42a1320c31738",
        "type": "ui_group",
        "name": "DFR Human 1 Week Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 30,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "a14a8c260d157f13",
        "type": "ui_group",
        "name": "DFR Human 1 Month Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 31,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "bb06ddebe53994bd",
        "type": "ui_group",
        "name": "CNC Room Power 1 Day Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 38,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "afd8148c56277c0d",
        "type": "ui_group",
        "name": "CNC Room Power 1 Week Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 39,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "49f5ea3d8049c82a",
        "type": "ui_group",
        "name": "CNC Room Power 1 Month Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 40,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "b8e444f02d9707b0",
        "type": "ui_group",
        "name": "Injection Room Power 1 Day Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 41,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "026814397ea417e9",
        "type": "ui_group",
        "name": "Injection Room Power 1 Week Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 42,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "22ef37e90d0bdcaa",
        "type": "ui_group",
        "name": "Injection Room Power 1 Month Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 43,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "eac9bf1de9b14e90",
        "type": "ui_tab",
        "name": "Agilian",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    }
]
