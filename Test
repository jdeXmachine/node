[
    {
        "id": "0d892a33550c80ee",
        "type": "tab",
        "label": "Agilian ver 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "dca170a1e6773062",
        "type": "mqtt in",
        "z": "0d892a33550c80ee",
        "name": "",
        "topic": "device/B7E1C96A/realtime",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "e42cdc18ac58f86d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1090,
        "y": 60,
        "wires": [
            [
                "dee543c816651a82"
            ]
        ]
    },
    {
        "id": "ddc5bbdb56d21c3e",
        "type": "mqtt out",
        "z": "0d892a33550c80ee",
        "name": "",
        "topic": "Agilian/Main AC",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e42cdc18ac58f86d",
        "x": 1360,
        "y": 60,
        "wires": []
    },
    {
        "id": "dee543c816651a82",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "MAPower",
        "func": "var newMsg = { payload: msg.payload.Datas[0][2] };\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 120,
        "wires": [
            [
                "211c5d3aa9961140",
                "4a4bc0e77753f90c"
            ]
        ]
    },
    {
        "id": "075ae0209a248b07",
        "type": "mqtt in",
        "z": "0d892a33550c80ee",
        "name": "",
        "topic": "device/9BF72F39/realtime",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "e42cdc18ac58f86d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 2530,
        "y": 60,
        "wires": [
            [
                "75a6fd0749b1bd00"
            ]
        ]
    },
    {
        "id": "75a6fd0749b1bd00",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "Extract DFRPower",
        "func": "var newMsg = { payload: msg.payload.Datas[0][2] };\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2550,
        "y": 120,
        "wires": [
            [
                "2b8f116dfc1da211",
                "52b0ce4529dc678a"
            ]
        ]
    },
    {
        "id": "dd7deb0375486931",
        "type": "mqtt out",
        "z": "0d892a33550c80ee",
        "name": "",
        "topic": "Agilian/Dust Free Room",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e42cdc18ac58f86d",
        "x": 2830,
        "y": 60,
        "wires": []
    },
    {
        "id": "cd6f6a6c9ea93a0a",
        "type": "mqtt in",
        "z": "0d892a33550c80ee",
        "name": "",
        "topic": "device/0651C8D4/realtime",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "e42cdc18ac58f86d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1090,
        "y": 520,
        "wires": [
            [
                "6ec63a1676d595ec"
            ]
        ]
    },
    {
        "id": "6ec63a1676d595ec",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "1stFlr Power",
        "func": "var newMsg = { payload: msg.payload.Datas[0][2] };\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 580,
        "wires": [
            [
                "03a9e8528718c164",
                "714004b06c9e588c"
            ]
        ]
    },
    {
        "id": "cc3d4563f81c59ab",
        "type": "mqtt out",
        "z": "0d892a33550c80ee",
        "name": "",
        "topic": "Agilian/Other Local AC",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e42cdc18ac58f86d",
        "x": 1380,
        "y": 520,
        "wires": []
    },
    {
        "id": "cd0b7c0f5c1574cf",
        "type": "ui_text",
        "z": "0d892a33550c80ee",
        "group": "4d03169ad0058e9c",
        "order": 1,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Power",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1330,
        "y": 640,
        "wires": []
    },
    {
        "id": "39dc509731470d69",
        "type": "ui_text",
        "z": "0d892a33550c80ee",
        "group": "134a9efe43075fa7",
        "order": 1,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Power",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#ffffff",
        "x": 2770,
        "y": 120,
        "wires": []
    },
    {
        "id": "b0f66a409d24f00a",
        "type": "ui_text",
        "z": "0d892a33550c80ee",
        "group": "8a88ba4336383a98",
        "order": 1,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Power",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1330,
        "y": 160,
        "wires": []
    },
    {
        "id": "d05c8fdda6649527",
        "type": "mqtt in",
        "z": "0d892a33550c80ee",
        "name": "",
        "topic": "device/486C3E95/realtime",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "e42cdc18ac58f86d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 930,
        "y": 1000,
        "wires": [
            [
                "3b07e0bd700512fc"
            ]
        ]
    },
    {
        "id": "3b07e0bd700512fc",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "CNC Rm Power",
        "func": "var newMsg = { payload: msg.payload.Datas[0][2] };\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 1060,
        "wires": [
            [
                "6b4a1b2c87f19995",
                "4496c47f2f86f581"
            ]
        ]
    },
    {
        "id": "e29e4eb07e333d97",
        "type": "mqtt out",
        "z": "0d892a33550c80ee",
        "name": "",
        "topic": "Agilian/CNC Room",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e42cdc18ac58f86d",
        "x": 1210,
        "y": 1000,
        "wires": []
    },
    {
        "id": "706dc5a5d3a58e44",
        "type": "ui_text",
        "z": "0d892a33550c80ee",
        "group": "8560c9625c2f462e",
        "order": 1,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "CNC Room",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1190,
        "y": 1060,
        "wires": []
    },
    {
        "id": "36da862ac1b11d22",
        "type": "mqtt in",
        "z": "0d892a33550c80ee",
        "name": "",
        "topic": "device/E7835489/realtime",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "e42cdc18ac58f86d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 970,
        "y": 1420,
        "wires": [
            [
                "cd3db55101dddb91"
            ]
        ]
    },
    {
        "id": "cd3db55101dddb91",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "Extract IRPower",
        "func": "var newMsg = { payload: msg.payload.Datas[0][2] };\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 1500,
        "wires": [
            [
                "9615f857c8750c27",
                "fae63e926f0bed86"
            ]
        ]
    },
    {
        "id": "07b7ee06fc7bf3e2",
        "type": "mqtt out",
        "z": "0d892a33550c80ee",
        "name": "",
        "topic": "Agilian/Injection Room",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e42cdc18ac58f86d",
        "x": 1260,
        "y": 1420,
        "wires": []
    },
    {
        "id": "1d202b437c42db73",
        "type": "ui_text",
        "z": "0d892a33550c80ee",
        "group": "858c386bfc79804f",
        "order": 1,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Injection Room",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1240,
        "y": 1480,
        "wires": []
    },
    {
        "id": "211c5d3aa9961140",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload & ' W'",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 180,
        "wires": [
            [
                "ddc5bbdb56d21c3e",
                "b0f66a409d24f00a"
            ]
        ]
    },
    {
        "id": "2b8f116dfc1da211",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload & ' W'",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2540,
        "y": 180,
        "wires": [
            [
                "dd7deb0375486931",
                "39dc509731470d69"
            ]
        ]
    },
    {
        "id": "03a9e8528718c164",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload & ' W'",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 640,
        "wires": [
            [
                "cc3d4563f81c59ab",
                "cd0b7c0f5c1574cf"
            ]
        ]
    },
    {
        "id": "6b4a1b2c87f19995",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload & ' W'",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 940,
        "y": 1120,
        "wires": [
            [
                "e29e4eb07e333d97",
                "706dc5a5d3a58e44"
            ]
        ]
    },
    {
        "id": "9615f857c8750c27",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload & ' W'",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 980,
        "y": 1560,
        "wires": [
            [
                "07b7ee06fc7bf3e2",
                "1d202b437c42db73"
            ]
        ]
    },
    {
        "id": "f86cfacf7e743af5",
        "type": "mqtt in",
        "z": "0d892a33550c80ee",
        "name": "",
        "topic": "fs/lot/env_quality_v1/AgilianSensor/up",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "813d2b24e7b11477",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 2570,
        "y": 580,
        "wires": [
            [
                "9faca434070a87cd"
            ]
        ]
    },
    {
        "id": "9faca434070a87cd",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "Humidity",
        "func": "var newMsg = { payload: msg.payload.humidity };\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2500,
        "y": 640,
        "wires": [
            [
                "52dbc48c84a7f5f9",
                "23ea1270ab02a7e1"
            ]
        ]
    },
    {
        "id": "66cf84c8b3c1d9da",
        "type": "ui_text",
        "z": "0d892a33550c80ee",
        "group": "134a9efe43075fa7",
        "order": 5,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Humidity",
        "format": "<font color= {{msg.color}} > {{msg.payload}} </font>",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2860,
        "y": 640,
        "wires": []
    },
    {
        "id": "d7db3c1fba9b8239",
        "type": "mqtt in",
        "z": "0d892a33550c80ee",
        "name": "",
        "topic": "fs/lot/env_quality_v1/AgilianSensor/up",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "813d2b24e7b11477",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 2550,
        "y": 1340,
        "wires": [
            [
                "86550b60c9a8211e"
            ]
        ]
    },
    {
        "id": "86550b60c9a8211e",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "CO2",
        "func": "var newMsg = { payload: msg.payload.co2 };\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 1400,
        "wires": [
            [
                "28fb01c990a48a18",
                "1edc26ff18965ee6"
            ]
        ]
    },
    {
        "id": "d979e4f30adfda88",
        "type": "ui_text",
        "z": "0d892a33550c80ee",
        "group": "134a9efe43075fa7",
        "order": 13,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "CO2",
        "format": "<font color= {{msg.color}} > {{msg.payload}} </font>",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2850,
        "y": 1400,
        "wires": []
    },
    {
        "id": "dd52d1c0d3db92b1",
        "type": "mqtt in",
        "z": "0d892a33550c80ee",
        "name": "",
        "topic": "fs/lot/env_quality_v1/AgilianSensor/up",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "813d2b24e7b11477",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 2550,
        "y": 1520,
        "wires": [
            [
                "7d536bded5f8f594"
            ]
        ]
    },
    {
        "id": "7d536bded5f8f594",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "Human",
        "func": "var newMsg = { payload: msg.payload.human };\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2480,
        "y": 1580,
        "wires": [
            [
                "575403cc84afcd29",
                "16c924a1135a06af"
            ]
        ]
    },
    {
        "id": "575403cc84afcd29",
        "type": "ui_text",
        "z": "0d892a33550c80ee",
        "group": "134a9efe43075fa7",
        "order": 15,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Human",
        "format": "<font color= {{msg.color}} > {{msg.payload}} </font>",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2660,
        "y": 1580,
        "wires": []
    },
    {
        "id": "8385821708a93c97",
        "type": "mqtt in",
        "z": "0d892a33550c80ee",
        "name": "",
        "topic": "fs/lot/env_quality_v1/AgilianSensor/up",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "813d2b24e7b11477",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 2570,
        "y": 820,
        "wires": [
            [
                "168e6401258fca0a"
            ]
        ]
    },
    {
        "id": "168e6401258fca0a",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "PM1.0",
        "func": "var newMsg = { payload: msg.payload[\"pm1.0\"] };\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2490,
        "y": 880,
        "wires": [
            [
                "8da177fb9389417b",
                "0adaaa0f835f2234"
            ]
        ]
    },
    {
        "id": "fa049cf03bf5a406",
        "type": "ui_text",
        "z": "0d892a33550c80ee",
        "group": "134a9efe43075fa7",
        "order": 7,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "PM 1.0",
        "format": "<font color= {{msg.color}} > {{msg.payload}} </font>",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2860,
        "y": 880,
        "wires": []
    },
    {
        "id": "086a252a9c1bc62e",
        "type": "mqtt in",
        "z": "0d892a33550c80ee",
        "name": "",
        "topic": "fs/lot/env_quality_v1/AgilianSensor/up",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "813d2b24e7b11477",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 2570,
        "y": 360,
        "wires": [
            [
                "fb1f5038e2b62c71"
            ]
        ]
    },
    {
        "id": "fb1f5038e2b62c71",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "Temperature",
        "func": "var newMsg = { payload: msg.payload.temperature };\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2510,
        "y": 420,
        "wires": [
            [
                "2f23c4dae21a7b98",
                "8792bae8c9af9ab3"
            ]
        ]
    },
    {
        "id": "dea33d5944a9f6da",
        "type": "ui_text",
        "z": "0d892a33550c80ee",
        "group": "134a9efe43075fa7",
        "order": 3,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Temperature",
        "format": "<font color= {{msg.color}} > {{msg.payload}} </font>",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2850,
        "y": 420,
        "wires": []
    },
    {
        "id": "c142de57ea77395d",
        "type": "mqtt in",
        "z": "0d892a33550c80ee",
        "name": "",
        "topic": "fs/lot/env_quality_v1/AgilianSensor/up",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "813d2b24e7b11477",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 2550,
        "y": 1000,
        "wires": [
            [
                "ad9b5bb00bcc0533"
            ]
        ]
    },
    {
        "id": "ad9b5bb00bcc0533",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "PM2.5",
        "func": "var newMsg = { payload: msg.payload.pm25 };\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 1060,
        "wires": [
            [
                "d30dfc24ae0af24b",
                "4abe95d2c9953ec6"
            ]
        ]
    },
    {
        "id": "3ad0fdb96e017a6f",
        "type": "ui_text",
        "z": "0d892a33550c80ee",
        "group": "134a9efe43075fa7",
        "order": 9,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "PM 2.5",
        "format": "<font color= {{msg.color}} > {{msg.payload}} </font>",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2820,
        "y": 1060,
        "wires": []
    },
    {
        "id": "795ca298f93edb8d",
        "type": "mqtt in",
        "z": "0d892a33550c80ee",
        "name": "",
        "topic": "fs/lot/env_quality_v1/AgilianSensor/up",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "813d2b24e7b11477",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 2550,
        "y": 1180,
        "wires": [
            [
                "fa43c2898bb86ff6"
            ]
        ]
    },
    {
        "id": "fa43c2898bb86ff6",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "PM10",
        "func": "var newMsg = { payload: msg.payload.pm10 };\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2490,
        "y": 1240,
        "wires": [
            [
                "822071e2fd76affd",
                "70b1038bf710b3d0"
            ]
        ]
    },
    {
        "id": "c0c428e5848d0220",
        "type": "ui_text",
        "z": "0d892a33550c80ee",
        "group": "134a9efe43075fa7",
        "order": 11,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "PM 10",
        "format": "<font color= {{msg.color}} > {{msg.payload}} </font>",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2830,
        "y": 1240,
        "wires": []
    },
    {
        "id": "d30dfc24ae0af24b",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload & ' μg/m³'",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2640,
        "y": 1060,
        "wires": [
            [
                "3ad0fdb96e017a6f"
            ]
        ]
    },
    {
        "id": "7867ad8117a48ab3",
        "type": "ui_dropdown",
        "z": "0d892a33550c80ee",
        "name": "",
        "label": "",
        "tooltip": "Choose which data you want to view: Past 1 Day, Week or Month",
        "place": "See Data",
        "group": "134a9efe43075fa7",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Day",
                "value": "day",
                "type": "str"
            },
            {
                "label": "Week",
                "value": "week",
                "type": "str"
            },
            {
                "label": "Month",
                "value": "month",
                "type": "str"
            },
            {
                "label": "Hide",
                "value": "hide",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 3920,
        "y": 120,
        "wires": [
            [
                "47f683b0947895f6"
            ]
        ]
    },
    {
        "id": "693eacbd21fc9768",
        "type": "ui_ui_control",
        "z": "0d892a33550c80ee",
        "name": "",
        "events": "all",
        "x": 4500,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "7cb2747c1ccdef4a",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_DFR_Power_1_Week_Analysis\"],\"hide\":[\"Agilian_DFR_Power_1_Day_Analysis\",\"Agilian_DFR_Power_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 120,
        "wires": [
            [
                "693eacbd21fc9768"
            ]
        ]
    },
    {
        "id": "47f683b0947895f6",
        "type": "switch",
        "z": "0d892a33550c80ee",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "week",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "month",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "hide",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 4090,
        "y": 120,
        "wires": [
            [
                "d3277620df2473c5"
            ],
            [
                "7cb2747c1ccdef4a"
            ],
            [
                "778682a52b24c2b7"
            ],
            [
                "06d931ae42e2fbbb"
            ]
        ]
    },
    {
        "id": "778682a52b24c2b7",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_DFR_Power_1_Month_Analysis\"],\"hide\":[\"Agilian_DFR_Power_1_Week_Analysis\",\"Agilian_DFR_Power_1_Day_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 160,
        "wires": [
            [
                "693eacbd21fc9768"
            ]
        ]
    },
    {
        "id": "d3277620df2473c5",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_DFR_Power_1_Day_Analysis\"],\"hide\":[\"Agilian_DFR_Power_1_Week_Analysis\",\"Agilian_DFR_Power_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 80,
        "wires": [
            [
                "693eacbd21fc9768"
            ]
        ]
    },
    {
        "id": "06d931ae42e2fbbb",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"hide\":[\"Agilian_DFR_Power_1_Day_Analysis\",\"Agilian_DFR_Power_1_Week_Analysis\",\"Agilian_DFR_Power_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 200,
        "wires": [
            [
                "693eacbd21fc9768"
            ]
        ]
    },
    {
        "id": "52b0ce4529dc678a",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "function 3",
        "func": "var d = new Date();\nvar t =  d.getTime();\nvar power = msg.payload;\n/*\nif (!context.get(\"headerAdded\")) {\n  // Check if a header row already exists in the file\n  // (modify this logic as needed based on your file structure and naming)\n  var headerExists = false; // Replace with a function to check header existence\n\n  if (!headerExists) {\n    var header = \"time,power\";\n    // Write the header row to the file\n    context.global.set(\"headerAdded\", true); // Mark header as added\n    node.send({ payload: header });\n  }\n}\n*/\n//payload={t, power}\nvar csvString = t + \",\" + power;\n//msg.payload=payload;\nmsg.payload = csvString;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2520,
        "y": 220,
        "wires": [
            [
                "68597eb5a0902b77"
            ]
        ]
    },
    {
        "id": "68597eb5a0902b77",
        "type": "file",
        "z": "0d892a33550c80ee",
        "name": "Store Power",
        "filename": "/storage/emulated/0/MQTT Data/DFRPower.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 2530,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "2b6cd88a3ea40f9e",
        "type": "file in",
        "z": "0d892a33550c80ee",
        "name": "",
        "filename": "/storage/emulated/0/MQTT Data/DFRPower.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3200,
        "y": 120,
        "wires": [
            [
                "ae6636012a16b5b0"
            ]
        ]
    },
    {
        "id": "b4d52a553f786ead",
        "type": "inject",
        "z": "0d892a33550c80ee",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3090,
        "y": 60,
        "wires": [
            [
                "2b6cd88a3ea40f9e"
            ]
        ]
    },
    {
        "id": "ae6636012a16b5b0",
        "type": "csv",
        "z": "0d892a33550c80ee",
        "name": "",
        "sep": ",",
        "hdrin": false,
        "hdrout": "",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 3110,
        "y": 180,
        "wires": [
            [
                "72d5efae4c281495",
                "757cc3d9f5bb6ca2",
                "ff9fbe5153485c57"
            ]
        ]
    },
    {
        "id": "72d5efae4c281495",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "Daily Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew; //Add 28800000 to convert to GMT+8 if have error\n\nif (timec > (t - 86400000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n\"series\": [\"Power\"],\n\"data\":data_out,\n\"labels\": [\"Power\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3530,
        "y": 100,
        "wires": [
            [
                "c02e03d0ad26b0c7"
            ]
        ]
    },
    {
        "id": "4a4bc0e77753f90c",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "Store MAPower",
        "func": "var d = new Date();\nvar t =  d.getTime();\nvar power = msg.payload;\n/*\nif (!context.get(\"headerAdded\")) {\n  // Check if a header row already exists in the file\n  // (modify this logic as needed based on your file structure and naming)\n  var headerExists = false; // Replace with a function to check header existence\n\n  if (!headerExists) {\n    var header = \"time,power\";\n    // Write the header row to the file\n    context.global.set(\"headerAdded\", true); // Mark header as added\n    node.send({ payload: header });\n  }\n}\n*/\n//payload={t, power}\nvar csvString = t + \",\" + power;\n//msg.payload=payload;\nmsg.payload = csvString;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 220,
        "wires": [
            [
                "e46b23468a8096e1"
            ]
        ]
    },
    {
        "id": "e46b23468a8096e1",
        "type": "file",
        "z": "0d892a33550c80ee",
        "name": "Store MAPower",
        "filename": "/storage/emulated/0/MQTT Data/MAPower.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 1320,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "714004b06c9e588c",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "Store 1stFlrPower",
        "func": "var d = new Date();\nvar t =  d.getTime();\nvar power = msg.payload;\n/*\nif (!context.get(\"headerAdded\")) {\n  // Check if a header row already exists in the file\n  // (modify this logic as needed based on your file structure and naming)\n  var headerExists = false; // Replace with a function to check header existence\n\n  if (!headerExists) {\n    var header = \"time,power\";\n    // Write the header row to the file\n    context.global.set(\"headerAdded\", true); // Mark header as added\n    node.send({ payload: header });\n  }\n}\n*/\n//payload={t, power}\nvar csvString = t + \",\" + power;\n//msg.payload=payload;\nmsg.payload = csvString;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 680,
        "wires": [
            [
                "4f27b50b73f12f0a"
            ]
        ]
    },
    {
        "id": "4f27b50b73f12f0a",
        "type": "file",
        "z": "0d892a33550c80ee",
        "name": "Store 1stFlrPower",
        "filename": "/storage/emulated/0/MQTT Data/1stFlrPower.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 1110,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "4496c47f2f86f581",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "Store CNCRmPower",
        "func": "var d = new Date();\nvar t =  d.getTime();\nvar power = msg.payload;\n/*\nif (!context.get(\"headerAdded\")) {\n  // Check if a header row already exists in the file\n  // (modify this logic as needed based on your file structure and naming)\n  var headerExists = false; // Replace with a function to check header existence\n\n  if (!headerExists) {\n    var header = \"time,power\";\n    // Write the header row to the file\n    context.global.set(\"headerAdded\", true); // Mark header as added\n    node.send({ payload: header });\n  }\n}\n*/\n//payload={t, power}\nvar csvString = t + \",\" + power;\n//msg.payload=payload;\nmsg.payload = csvString;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 1160,
        "wires": [
            [
                "094e6a49ccba5100"
            ]
        ]
    },
    {
        "id": "094e6a49ccba5100",
        "type": "file",
        "z": "0d892a33550c80ee",
        "name": "Store CNCRm Power",
        "filename": "/storage/emulated/0/MQTT Data/CNCRmPower.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 960,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "6fb7a5a359856ef3",
        "type": "file",
        "z": "0d892a33550c80ee",
        "name": "Store IRPower",
        "filename": "/storage/emulated/0/MQTT Data/IRPower.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 980,
        "y": 1640,
        "wires": [
            []
        ]
    },
    {
        "id": "fae63e926f0bed86",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "Store CNCRmPower",
        "func": "var d = new Date();\nvar t =  d.getTime();\nvar power = msg.payload;\n/*\nif (!context.get(\"headerAdded\")) {\n  // Check if a header row already exists in the file\n  // (modify this logic as needed based on your file structure and naming)\n  var headerExists = false; // Replace with a function to check header existence\n\n  if (!headerExists) {\n    var header = \"time,power\";\n    // Write the header row to the file\n    context.global.set(\"headerAdded\", true); // Mark header as added\n    node.send({ payload: header });\n  }\n}\n*/\n//payload={t, power}\nvar csvString = t + \",\" + power;\n//msg.payload=payload;\nmsg.payload = csvString;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 1600,
        "wires": [
            [
                "6fb7a5a359856ef3"
            ]
        ]
    },
    {
        "id": "58a8cc3505a5c81e",
        "type": "file",
        "z": "0d892a33550c80ee",
        "name": "Store DFRPM2.5",
        "filename": "/storage/emulated/0/MQTT Data/DFRPM2.5.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 2730,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "4abe95d2c9953ec6",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "Store DFRPM2.5",
        "func": "var d = new Date();\nvar t =  d.getTime();\nvar power = msg.payload;\n/*\nif (!context.get(\"headerAdded\")) {\n  // Check if a header row already exists in the file\n  // (modify this logic as needed based on your file structure and naming)\n  var headerExists = false; // Replace with a function to check header existence\n\n  if (!headerExists) {\n    var header = \"time,power\";\n    // Write the header row to the file\n    context.global.set(\"headerAdded\", true); // Mark header as added\n    node.send({ payload: header });\n  }\n}\n*/\n//payload={t, power}\nvar csvString = t + \",\" + power;\n//msg.payload=payload;\nmsg.payload = csvString;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2510,
        "y": 1100,
        "wires": [
            [
                "58a8cc3505a5c81e"
            ]
        ]
    },
    {
        "id": "822071e2fd76affd",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload & ' μg/m³'",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2660,
        "y": 1240,
        "wires": [
            [
                "c0c428e5848d0220"
            ]
        ]
    },
    {
        "id": "9f26ad384e6fe461",
        "type": "file",
        "z": "0d892a33550c80ee",
        "name": "Store DFRPM10",
        "filename": "/storage/emulated/0/MQTT Data/DFRPM10.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 2740,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "70b1038bf710b3d0",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "Store DFRPM10",
        "func": "var d = new Date();\nvar t =  d.getTime();\nvar power = msg.payload;\n/*\nif (!context.get(\"headerAdded\")) {\n  // Check if a header row already exists in the file\n  // (modify this logic as needed based on your file structure and naming)\n  var headerExists = false; // Replace with a function to check header existence\n\n  if (!headerExists) {\n    var header = \"time,power\";\n    // Write the header row to the file\n    context.global.set(\"headerAdded\", true); // Mark header as added\n    node.send({ payload: header });\n  }\n}\n*/\n//payload={t, power}\nvar csvString = t + \",\" + power;\n//msg.payload=payload;\nmsg.payload = csvString;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2520,
        "y": 1280,
        "wires": [
            [
                "9f26ad384e6fe461"
            ]
        ]
    },
    {
        "id": "625b82ccae743793",
        "type": "file",
        "z": "0d892a33550c80ee",
        "name": "Store DFRPM1.0",
        "filename": "/storage/emulated/0/MQTT Data/DFRPM1.0.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 2750,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "8da177fb9389417b",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "Store DFRPM1.0",
        "func": "var d = new Date();\nvar t =  d.getTime();\nvar power = msg.payload;\n/*\nif (!context.get(\"headerAdded\")) {\n  // Check if a header row already exists in the file\n  // (modify this logic as needed based on your file structure and naming)\n  var headerExists = false; // Replace with a function to check header existence\n\n  if (!headerExists) {\n    var header = \"time,power\";\n    // Write the header row to the file\n    context.global.set(\"headerAdded\", true); // Mark header as added\n    node.send({ payload: header });\n  }\n}\n*/\n//payload={t, power}\nvar csvString = t + \",\" + power;\n//msg.payload=payload;\nmsg.payload = csvString;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2530,
        "y": 920,
        "wires": [
            [
                "625b82ccae743793"
            ]
        ]
    },
    {
        "id": "0adaaa0f835f2234",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload & ' μg/m³'",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2680,
        "y": 880,
        "wires": [
            [
                "fa049cf03bf5a406"
            ]
        ]
    },
    {
        "id": "2f23c4dae21a7b98",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload & ' μg/m³'",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2680,
        "y": 420,
        "wires": [
            [
                "dea33d5944a9f6da"
            ]
        ]
    },
    {
        "id": "3100d649f1057f40",
        "type": "file",
        "z": "0d892a33550c80ee",
        "name": "Store DFRTemp",
        "filename": "/storage/emulated/0/MQTT Data/DFRTemp.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 2740,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "8792bae8c9af9ab3",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "Store DFRTemp",
        "func": "var d = new Date();\nvar t =  d.getTime();\nvar power = msg.payload;\n/*\nif (!context.get(\"headerAdded\")) {\n  // Check if a header row already exists in the file\n  // (modify this logic as needed based on your file structure and naming)\n  var headerExists = false; // Replace with a function to check header existence\n\n  if (!headerExists) {\n    var header = \"time,power\";\n    // Write the header row to the file\n    context.global.set(\"headerAdded\", true); // Mark header as added\n    node.send({ payload: header });\n  }\n}\n*/\n//payload={t, power}\nvar csvString = t + \",\" + power;\n//msg.payload=payload;\nmsg.payload = csvString;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2520,
        "y": 460,
        "wires": [
            [
                "3100d649f1057f40"
            ]
        ]
    },
    {
        "id": "52dbc48c84a7f5f9",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload & ' μg/m³'",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2680,
        "y": 640,
        "wires": [
            [
                "66cf84c8b3c1d9da"
            ]
        ]
    },
    {
        "id": "28fb01c990a48a18",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload & ' μg/m³'",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2660,
        "y": 1400,
        "wires": [
            [
                "d979e4f30adfda88"
            ]
        ]
    },
    {
        "id": "8d2f9ce6c07e7e7b",
        "type": "file",
        "z": "0d892a33550c80ee",
        "name": "Store DFRHumi",
        "filename": "/storage/emulated/0/MQTT Data/DFRHumi.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 2740,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "23ea1270ab02a7e1",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "Store DFRHumi",
        "func": "var d = new Date();\nvar t =  d.getTime();\nvar power = msg.payload;\n/*\nif (!context.get(\"headerAdded\")) {\n  // Check if a header row already exists in the file\n  // (modify this logic as needed based on your file structure and naming)\n  var headerExists = false; // Replace with a function to check header existence\n\n  if (!headerExists) {\n    var header = \"time,power\";\n    // Write the header row to the file\n    context.global.set(\"headerAdded\", true); // Mark header as added\n    node.send({ payload: header });\n  }\n}\n*/\n//payload={t, power}\nvar csvString = t + \",\" + power;\n//msg.payload=payload;\nmsg.payload = csvString;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2520,
        "y": 680,
        "wires": [
            [
                "8d2f9ce6c07e7e7b"
            ]
        ]
    },
    {
        "id": "3106af518ad91512",
        "type": "file",
        "z": "0d892a33550c80ee",
        "name": "Store DFRCO2",
        "filename": "/storage/emulated/0/MQTT Data/DFRCO2.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 2720,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "1edc26ff18965ee6",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "Store DFRCO2",
        "func": "var d = new Date();\nvar t =  d.getTime();\nvar power = msg.payload;\n/*\nif (!context.get(\"headerAdded\")) {\n  // Check if a header row already exists in the file\n  // (modify this logic as needed based on your file structure and naming)\n  var headerExists = false; // Replace with a function to check header existence\n\n  if (!headerExists) {\n    var header = \"time,power\";\n    // Write the header row to the file\n    context.global.set(\"headerAdded\", true); // Mark header as added\n    node.send({ payload: header });\n  }\n}\n*/\n//payload={t, power}\nvar csvString = t + \",\" + power;\n//msg.payload=payload;\nmsg.payload = csvString;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2500,
        "y": 1440,
        "wires": [
            [
                "3106af518ad91512"
            ]
        ]
    },
    {
        "id": "16c924a1135a06af",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "Store DFRHuman",
        "func": "var d = new Date();\nvar t =  d.getTime();\nvar power = msg.payload;\n/*\nif (!context.get(\"headerAdded\")) {\n  // Check if a header row already exists in the file\n  // (modify this logic as needed based on your file structure and naming)\n  var headerExists = false; // Replace with a function to check header existence\n\n  if (!headerExists) {\n    var header = \"time,power\";\n    // Write the header row to the file\n    context.global.set(\"headerAdded\", true); // Mark header as added\n    node.send({ payload: header });\n  }\n}\n*/\n//payload={t, power}\nvar csvString = t + \",\" + power;\n//msg.payload=payload;\nmsg.payload = csvString;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2510,
        "y": 1620,
        "wires": [
            [
                "e831756864da2c47"
            ]
        ]
    },
    {
        "id": "e831756864da2c47",
        "type": "file",
        "z": "0d892a33550c80ee",
        "name": "Store DFRHuman",
        "filename": "/storage/emulated/0/MQTT Data/DFRHuman.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 2730,
        "y": 1620,
        "wires": [
            []
        ]
    },
    {
        "id": "757cc3d9f5bb6ca2",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "Weekly Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\n    var timec = timew; //Add 28800000 to convert to GMT+8 if have error\n\nif (timec > (t - 604800000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n\"series\": [\"Power\"],\n\"data\":data_out,\n\"labels\": [\"Power\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3540,
        "y": 140,
        "wires": [
            [
                "5d200e267f786301"
            ]
        ]
    },
    {
        "id": "ff9fbe5153485c57",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "Monthly Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\n    var timec = timew; //Add 28800000 to convert to GMT+8 if have error\n\nif (timec > (t - 2629743000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n\"series\": [\"Power\"],\n\"data\":data_out,\n\"labels\": [\"Power\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3540,
        "y": 180,
        "wires": [
            [
                "768c3b090cf0bad5"
            ]
        ]
    },
    {
        "id": "5d200e267f786301",
        "type": "ui_chart",
        "z": "0d892a33550c80ee",
        "name": "",
        "group": "f50e7b4a96aea525",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3730,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "768c3b090cf0bad5",
        "type": "ui_chart",
        "z": "0d892a33550c80ee",
        "name": "",
        "group": "d04bbe9ab86a0e58",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "4",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3730,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "c02e03d0ad26b0c7",
        "type": "ui_chart",
        "z": "0d892a33550c80ee",
        "name": "",
        "group": "f3e39ec1c6bfc6b0",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "3",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3730,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "0b02226b3bac5d22",
        "type": "file in",
        "z": "0d892a33550c80ee",
        "name": "",
        "filename": "/storage/emulated/0/MQTT Data/MAPower.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1680,
        "y": 120,
        "wires": [
            [
                "fad0b8c8e476b958"
            ]
        ]
    },
    {
        "id": "9d523410b7ae5fdb",
        "type": "debug",
        "z": "0d892a33550c80ee",
        "name": "ReadPowerDFR",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1840,
        "y": 60,
        "wires": []
    },
    {
        "id": "3c84e9b33509087a",
        "type": "inject",
        "z": "0d892a33550c80ee",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1570,
        "y": 60,
        "wires": [
            [
                "0b02226b3bac5d22"
            ]
        ]
    },
    {
        "id": "fad0b8c8e476b958",
        "type": "csv",
        "z": "0d892a33550c80ee",
        "name": "",
        "sep": ",",
        "hdrin": false,
        "hdrout": "",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1590,
        "y": 180,
        "wires": [
            [
                "1609bf10be5e8be0",
                "9d523410b7ae5fdb",
                "5647557691e217c3",
                "4ea07f06cf5c95bf"
            ]
        ]
    },
    {
        "id": "1609bf10be5e8be0",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "Daily Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew;\n\nif (timec > (t - 86400000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n\"series\": [\"Power\"],\n\"data\":data_out,\n\"labels\": [\"Power\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2010,
        "y": 100,
        "wires": [
            [
                "52f3d82c3717a284",
                "41abfea472ef8ac5"
            ]
        ]
    },
    {
        "id": "52f3d82c3717a284",
        "type": "debug",
        "z": "0d892a33550c80ee",
        "name": "ReadGraphhDFR",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2250,
        "y": 60,
        "wires": []
    },
    {
        "id": "5647557691e217c3",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "Weekly Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew;\n\nif (timec > (t - 604800000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n\"series\": [\"Power\"],\n\"data\":data_out,\n\"labels\": [\"Power\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2020,
        "y": 140,
        "wires": [
            [
                "97febeee0f27ac21"
            ]
        ]
    },
    {
        "id": "4ea07f06cf5c95bf",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "Monthly Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew; //Adjust time to GMT+8\n\nif (timec > (t - 2629743000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n\"series\": [\"Power\"],\n\"data\":data_out,\n\"labels\": [\"Power\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2020,
        "y": 180,
        "wires": [
            [
                "d42f7005beae62eb"
            ]
        ]
    },
    {
        "id": "97febeee0f27ac21",
        "type": "ui_chart",
        "z": "0d892a33550c80ee",
        "name": "",
        "group": "7c17fc93a9c0fa27",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2210,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "d42f7005beae62eb",
        "type": "ui_chart",
        "z": "0d892a33550c80ee",
        "name": "",
        "group": "959686b5345bb54c",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "4",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2210,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "41abfea472ef8ac5",
        "type": "ui_chart",
        "z": "0d892a33550c80ee",
        "name": "",
        "group": "71506c1ac5fc6889",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "3",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2210,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "83c923e562d9c409",
        "type": "ui_dropdown",
        "z": "0d892a33550c80ee",
        "name": "",
        "label": "",
        "tooltip": "Choose which data you want to view: Past 1 Day, Week or Month",
        "place": "See Data",
        "group": "8a88ba4336383a98",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Day",
                "value": "day",
                "type": "str"
            },
            {
                "label": "Week",
                "value": "week",
                "type": "str"
            },
            {
                "label": "Month",
                "value": "month",
                "type": "str"
            },
            {
                "label": "Hide",
                "value": "hide",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1060,
        "y": 360,
        "wires": [
            [
                "262dc93d1654765a"
            ]
        ]
    },
    {
        "id": "53e1304da6dc5150",
        "type": "ui_ui_control",
        "z": "0d892a33550c80ee",
        "name": "",
        "events": "all",
        "x": 1640,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "5db8719ff66e636e",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_Main_AC_Power_1_Week_Analysis\"],\"hide\":[\"Agilian_Main_AC_Power_1_Day_Analysis\",\"Agilian_Main_AC_Power_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1420,
        "y": 360,
        "wires": [
            [
                "53e1304da6dc5150"
            ]
        ]
    },
    {
        "id": "262dc93d1654765a",
        "type": "switch",
        "z": "0d892a33550c80ee",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "week",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "month",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "hide",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 1230,
        "y": 360,
        "wires": [
            [
                "6febad5ee47dcbd5"
            ],
            [
                "5db8719ff66e636e"
            ],
            [
                "0819726c3346a58b"
            ],
            [
                "c1e76b827c5a27d4"
            ]
        ]
    },
    {
        "id": "0819726c3346a58b",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_Main_AC_Power_1_Month_Analysis\"],\"hide\":[\"Agilian_Main_AC_Power_1_Week_Analysis\",\"Agilian_Main_AC_Power_1_Day_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1420,
        "y": 400,
        "wires": [
            [
                "53e1304da6dc5150"
            ]
        ]
    },
    {
        "id": "6febad5ee47dcbd5",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_Main_AC_Power_1_Day_Analysis\"],\"hide\":[\"Agilian_Main_AC_Power_1_Week_Analysis\",\"Agilian_Main_AC_Power_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1420,
        "y": 320,
        "wires": [
            [
                "53e1304da6dc5150"
            ]
        ]
    },
    {
        "id": "c1e76b827c5a27d4",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"hide\":[\"Agilian_Main_AC_Power_1_Day_Analysis\",\"Agilian_Main_AC_Power_1_Week_Analysis\",\"Agilian_Main_AC_Power_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1420,
        "y": 440,
        "wires": [
            [
                "53e1304da6dc5150"
            ]
        ]
    },
    {
        "id": "b0f47f4926ee5d10",
        "type": "file in",
        "z": "0d892a33550c80ee",
        "name": "",
        "filename": "/storage/emulated/0/MQTT Data/1stFlrPower.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1700,
        "y": 580,
        "wires": [
            [
                "b148aa922f9c5dca"
            ]
        ]
    },
    {
        "id": "d5fd0cfd3e98d946",
        "type": "debug",
        "z": "0d892a33550c80ee",
        "name": "ReadPowerDFR",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1860,
        "y": 520,
        "wires": []
    },
    {
        "id": "386ef90436d5ce39",
        "type": "inject",
        "z": "0d892a33550c80ee",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1590,
        "y": 520,
        "wires": [
            [
                "b0f47f4926ee5d10"
            ]
        ]
    },
    {
        "id": "b148aa922f9c5dca",
        "type": "csv",
        "z": "0d892a33550c80ee",
        "name": "",
        "sep": ",",
        "hdrin": false,
        "hdrout": "",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1610,
        "y": 640,
        "wires": [
            [
                "2c66711d2f409c8b",
                "d5fd0cfd3e98d946",
                "876da0aa8c2dc742",
                "79a102c9596dfcba"
            ]
        ]
    },
    {
        "id": "2c66711d2f409c8b",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "Daily Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew;\n\nif (timec > (t - 86400000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n\"series\": [\"Power\"],\n\"data\":data_out,\n\"labels\": [\"Power\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2030,
        "y": 560,
        "wires": [
            [
                "e70e513c85bb0b80",
                "132267799a3b19ec"
            ]
        ]
    },
    {
        "id": "e70e513c85bb0b80",
        "type": "debug",
        "z": "0d892a33550c80ee",
        "name": "ReadGraphhDFR",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2270,
        "y": 520,
        "wires": []
    },
    {
        "id": "876da0aa8c2dc742",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "Weekly Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew;\n\nif (timec > (t - 604800000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n\"series\": [\"Power\"],\n\"data\":data_out,\n\"labels\": [\"Power\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2040,
        "y": 600,
        "wires": [
            [
                "a223c5f145c6635c"
            ]
        ]
    },
    {
        "id": "79a102c9596dfcba",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "Monthly Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew; //Adjust time to GMT+8\n\nif (timec > (t - 2629743000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n\"series\": [\"Power\"],\n\"data\":data_out,\n\"labels\": [\"Power\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2040,
        "y": 640,
        "wires": [
            [
                "58566cd6cb08fa98"
            ]
        ]
    },
    {
        "id": "a223c5f145c6635c",
        "type": "ui_chart",
        "z": "0d892a33550c80ee",
        "name": "",
        "group": "2fd3274dd9061561",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2230,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "58566cd6cb08fa98",
        "type": "ui_chart",
        "z": "0d892a33550c80ee",
        "name": "",
        "group": "e1118f823ee96eb0",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "4",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2230,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "132267799a3b19ec",
        "type": "ui_chart",
        "z": "0d892a33550c80ee",
        "name": "",
        "group": "4493f90d67eed3b4",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "3",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2230,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "902fd502f069c3e7",
        "type": "ui_dropdown",
        "z": "0d892a33550c80ee",
        "name": "",
        "label": "",
        "tooltip": "Choose which data you want to view: Past 1 Day, Week or Month",
        "place": "See Data",
        "group": "4d03169ad0058e9c",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Day",
                "value": "day",
                "type": "str"
            },
            {
                "label": "Week",
                "value": "week",
                "type": "str"
            },
            {
                "label": "Month",
                "value": "month",
                "type": "str"
            },
            {
                "label": "Hide",
                "value": "hide",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1040,
        "y": 820,
        "wires": [
            [
                "59c917df0b356ddc"
            ]
        ]
    },
    {
        "id": "85e001209d6fabeb",
        "type": "ui_ui_control",
        "z": "0d892a33550c80ee",
        "name": "",
        "events": "all",
        "x": 1620,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "8cbfe097bf2c707f",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_1st_Floor_Power_1_Week_Analysis\"],\"hide\":[\"Agilian_1st_Floor_Power_1_Day_Analysis\",\"Agilian_1st_Floor_Power_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1400,
        "y": 820,
        "wires": [
            [
                "85e001209d6fabeb"
            ]
        ]
    },
    {
        "id": "59c917df0b356ddc",
        "type": "switch",
        "z": "0d892a33550c80ee",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "week",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "month",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "hide",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 1210,
        "y": 820,
        "wires": [
            [
                "36a2bb185860cce9"
            ],
            [
                "8cbfe097bf2c707f"
            ],
            [
                "0b16e68531fcfad1"
            ],
            [
                "d61749c6c18328c5"
            ]
        ]
    },
    {
        "id": "0b16e68531fcfad1",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_1st_Floor_Power_1_Month_Analysis\"],\"hide\":[\"Agilian_1st_Floor_Power_1_Week_Analysis\",\"Agilian_1st_Floor_Power_1_Day_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1400,
        "y": 860,
        "wires": [
            [
                "85e001209d6fabeb"
            ]
        ]
    },
    {
        "id": "36a2bb185860cce9",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_1st_Floor_Power_1_Day_Analysis\"],\"hide\":[\"Agilian_1st_Floor_Power_1_Week_Analysis\",\"Agilian_1st_Floor_Power_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1400,
        "y": 780,
        "wires": [
            [
                "85e001209d6fabeb"
            ]
        ]
    },
    {
        "id": "d61749c6c18328c5",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"hide\":[\"Agilian_1st_Floor_Power_1_Day_Analysis\",\"Agilian_1st_Floor_Power_1_Week_Analysis\",\"Agilian_1st_Floor_Power_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1400,
        "y": 900,
        "wires": [
            [
                "85e001209d6fabeb"
            ]
        ]
    },
    {
        "id": "ab3114966b9e1824",
        "type": "csv",
        "z": "0d892a33550c80ee",
        "name": "",
        "sep": ",",
        "hdrin": false,
        "hdrout": "",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 3110,
        "y": 460,
        "wires": [
            [
                "fc9a186513edc701",
                "10ed537685ba45b5",
                "7bc98efe0fa94639"
            ]
        ]
    },
    {
        "id": "1e58a69c96d42bd0",
        "type": "file in",
        "z": "0d892a33550c80ee",
        "name": "",
        "filename": "/storage/emulated/0/MQTT Data/DFRTemp.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3200,
        "y": 400,
        "wires": [
            [
                "ab3114966b9e1824"
            ]
        ]
    },
    {
        "id": "fc9a186513edc701",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "Daily Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew;\n\nif (timec > (t - 86400000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n\"series\": [\"Temperature\"],\n\"data\":data_out,\n\"labels\": [\"Temperature\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3530,
        "y": 380,
        "wires": [
            [
                "6b5d53db76559a68"
            ]
        ]
    },
    {
        "id": "10ed537685ba45b5",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "Weekly Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew;\n\nif (timec > (t - 604800000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n\"series\": [\"Temperature\"],\n\"data\":data_out,\n    \"labels\": [\"Temperature\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3540,
        "y": 420,
        "wires": [
            [
                "a6a38eaae708c476"
            ]
        ]
    },
    {
        "id": "7bc98efe0fa94639",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "Monthly Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew; //Adjust time to GMT+8\n\nif (timec > (t - 2629743000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n    \"series\": [\"Temperature\"],\n\"data\":data_out,\n    \"labels\": [\"Temperature\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3540,
        "y": 460,
        "wires": [
            [
                "149c494c51e3a9d7"
            ]
        ]
    },
    {
        "id": "159b2ea33ecff617",
        "type": "inject",
        "z": "0d892a33550c80ee",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3090,
        "y": 340,
        "wires": [
            [
                "1e58a69c96d42bd0"
            ]
        ]
    },
    {
        "id": "6b5d53db76559a68",
        "type": "ui_chart",
        "z": "0d892a33550c80ee",
        "name": "",
        "group": "3c876f7a4568a871",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "3",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3730,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "a6a38eaae708c476",
        "type": "ui_chart",
        "z": "0d892a33550c80ee",
        "name": "",
        "group": "8f9c5170d106b907",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3730,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "149c494c51e3a9d7",
        "type": "ui_chart",
        "z": "0d892a33550c80ee",
        "name": "",
        "group": "4f2d81879549813b",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "4",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3730,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "f80fb08dbe1ced4c",
        "type": "ui_dropdown",
        "z": "0d892a33550c80ee",
        "name": "",
        "label": "",
        "tooltip": "Choose which data you want to view: Past 1 Day, Week or Month",
        "place": "See Data",
        "group": "134a9efe43075fa7",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Day",
                "value": "day",
                "type": "str"
            },
            {
                "label": "Week",
                "value": "week",
                "type": "str"
            },
            {
                "label": "Month",
                "value": "month",
                "type": "str"
            },
            {
                "label": "Hide",
                "value": "hide",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 3920,
        "y": 380,
        "wires": [
            [
                "52f3f8652e2d7573"
            ]
        ]
    },
    {
        "id": "279934807384358a",
        "type": "ui_ui_control",
        "z": "0d892a33550c80ee",
        "name": "",
        "events": "all",
        "x": 4500,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "e68e081d3103076f",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_DFR_Temperature_1_Week_Analysis\"],\"hide\":[\"Agilian_DFR_Temperature_1_Day_Analysis\",\"Agilian_DFR_Temperature_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 380,
        "wires": [
            [
                "279934807384358a"
            ]
        ]
    },
    {
        "id": "52f3f8652e2d7573",
        "type": "switch",
        "z": "0d892a33550c80ee",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "week",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "month",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "hide",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 4090,
        "y": 380,
        "wires": [
            [
                "3c0d7bd4d41c3ab9"
            ],
            [
                "e68e081d3103076f"
            ],
            [
                "4d3245b2a9d59ea9"
            ],
            [
                "0512ee168197799a"
            ]
        ]
    },
    {
        "id": "4d3245b2a9d59ea9",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_DFR_Temperature_1_Month_Analysis\"],\"hide\":[\"Agilian_DFR_Temperature_1_Week_Analysis\",\"Agilian_DFR_Temperature_1_Day_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 420,
        "wires": [
            [
                "279934807384358a"
            ]
        ]
    },
    {
        "id": "3c0d7bd4d41c3ab9",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_DFR_Temperature_1_Day_Analysis\"],\"hide\":[\"Agilian_DFR_Temperature_1_Week_Analysis\",\"Agilian_DFR_Temperature_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 340,
        "wires": [
            [
                "279934807384358a"
            ]
        ]
    },
    {
        "id": "0512ee168197799a",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"hide\":[\"Agilian_DFR_Temperature_1_Day_Analysis\",\"Agilian_DFR_Temperature_1_Week_Analysis\",\"Agilian_DFR_Temperature_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 460,
        "wires": [
            [
                "279934807384358a"
            ]
        ]
    },
    {
        "id": "49b24dfedd53a88d",
        "type": "csv",
        "z": "0d892a33550c80ee",
        "name": "",
        "sep": ",",
        "hdrin": false,
        "hdrout": "",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 3110,
        "y": 700,
        "wires": [
            [
                "8e16e528312c728c",
                "856d33d207f1716c",
                "8dad1c1e594e9091"
            ]
        ]
    },
    {
        "id": "4cd546a8698330cd",
        "type": "file in",
        "z": "0d892a33550c80ee",
        "name": "",
        "filename": "/storage/emulated/0/MQTT Data/DFRHumi.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3200,
        "y": 640,
        "wires": [
            [
                "49b24dfedd53a88d"
            ]
        ]
    },
    {
        "id": "8e16e528312c728c",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "Daily Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew;\n\nif (timec > (t - 86400000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n\"series\": [\"Temperature\"],\n\"data\":data_out,\n\"labels\": [\"Temperature\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3530,
        "y": 620,
        "wires": [
            [
                "2652e029144c0a3d"
            ]
        ]
    },
    {
        "id": "856d33d207f1716c",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "Weekly Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew;\n\nif (timec > (t - 604800000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n\"series\": [\"Temperature\"],\n\"data\":data_out,\n    \"labels\": [\"Temperature\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3540,
        "y": 660,
        "wires": [
            [
                "ba5c8c973b656c6e"
            ]
        ]
    },
    {
        "id": "8dad1c1e594e9091",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "Monthly Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew; //Adjust time to GMT+8\n\nif (timec > (t - 2629743000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n    \"series\": [\"Temperature\"],\n\"data\":data_out,\n    \"labels\": [\"Temperature\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3540,
        "y": 700,
        "wires": [
            [
                "cefb606bd47aeeb5"
            ]
        ]
    },
    {
        "id": "0b218c5dc09df273",
        "type": "inject",
        "z": "0d892a33550c80ee",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3090,
        "y": 580,
        "wires": [
            [
                "4cd546a8698330cd"
            ]
        ]
    },
    {
        "id": "2652e029144c0a3d",
        "type": "ui_chart",
        "z": "0d892a33550c80ee",
        "name": "",
        "group": "1fb20e85cb193c8a",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "3",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3730,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "ba5c8c973b656c6e",
        "type": "ui_chart",
        "z": "0d892a33550c80ee",
        "name": "",
        "group": "6fe9f72b118339a8",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3730,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "cefb606bd47aeeb5",
        "type": "ui_chart",
        "z": "0d892a33550c80ee",
        "name": "",
        "group": "6071c299f4ef976a",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "4",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3730,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "a876d3a6437426c1",
        "type": "ui_dropdown",
        "z": "0d892a33550c80ee",
        "name": "",
        "label": "",
        "tooltip": "Choose which data you want to view: Past 1 Day, Week or Month",
        "place": "See Data",
        "group": "134a9efe43075fa7",
        "order": 6,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Day",
                "value": "day",
                "type": "str"
            },
            {
                "label": "Week",
                "value": "week",
                "type": "str"
            },
            {
                "label": "Month",
                "value": "month",
                "type": "str"
            },
            {
                "label": "Hide",
                "value": "hide",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 3920,
        "y": 640,
        "wires": [
            [
                "cbef52b525c9d943"
            ]
        ]
    },
    {
        "id": "cbef52b525c9d943",
        "type": "switch",
        "z": "0d892a33550c80ee",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "week",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "month",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "hide",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 4090,
        "y": 640,
        "wires": [
            [
                "30510dbc21299adc"
            ],
            [
                "f27c1cc5e2db7cba"
            ],
            [
                "a1f1e6df346a5285"
            ],
            [
                "8125f43dc1634bb5"
            ]
        ]
    },
    {
        "id": "30510dbc21299adc",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_DFR_Humidity_1_Day_Analysis\"],\"hide\":[\"Agilian_DFR_Humidity_1_Week_Analysis\",\"Agilian_DFR_Humidity_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 600,
        "wires": [
            [
                "60f6f598114426f0"
            ]
        ]
    },
    {
        "id": "f27c1cc5e2db7cba",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_DFR_Humidity_1_Week_Analysis\"],\"hide\":[\"Agilian_DFR_Humidity_1_Day_Analysis\",\"Agilian_DFR_Humidity_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 640,
        "wires": [
            [
                "60f6f598114426f0"
            ]
        ]
    },
    {
        "id": "a1f1e6df346a5285",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_DFR_Humidity_1_Month_Analysis\"],\"hide\":[\"Agilian_DFR_Humidity_1_Week_Analysis\",\"Agilian_DFR_Humidity_1_Day_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 680,
        "wires": [
            [
                "60f6f598114426f0"
            ]
        ]
    },
    {
        "id": "8125f43dc1634bb5",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"hide\":[\"Agilian_DFR_Humidity_1_Day_Analysis\",\"Agilian_DFR_Humidity_1_Week_Analysis\",\"Agilian_DFR_Humidity_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 720,
        "wires": [
            [
                "60f6f598114426f0"
            ]
        ]
    },
    {
        "id": "60f6f598114426f0",
        "type": "ui_ui_control",
        "z": "0d892a33550c80ee",
        "name": "",
        "events": "all",
        "x": 4500,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "89558f7e6f6429b0",
        "type": "file in",
        "z": "0d892a33550c80ee",
        "name": "",
        "filename": "/storage/emulated/0/MQTT Data/DFRPM1.0.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3180,
        "y": 880,
        "wires": [
            [
                "66f9cb550c4d228c"
            ]
        ]
    },
    {
        "id": "87e9d55f1fef3040",
        "type": "inject",
        "z": "0d892a33550c80ee",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3070,
        "y": 820,
        "wires": [
            [
                "89558f7e6f6429b0"
            ]
        ]
    },
    {
        "id": "66f9cb550c4d228c",
        "type": "csv",
        "z": "0d892a33550c80ee",
        "name": "",
        "sep": ",",
        "hdrin": false,
        "hdrout": "",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 3090,
        "y": 940,
        "wires": [
            [
                "e81a9b1cbb6cd93a",
                "69f681c8a152c47f",
                "cadeb59c31fe0644"
            ]
        ]
    },
    {
        "id": "e81a9b1cbb6cd93a",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "Daily Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew;\n\nif (timec > (t - 86400000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n\"series\": [\"PM 1.0\"],\n\"data\":data_out,\n\"labels\": [\"PM 1.0\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3510,
        "y": 860,
        "wires": [
            [
                "75fe6c25bf922671"
            ]
        ]
    },
    {
        "id": "69f681c8a152c47f",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "Weekly Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew;\n\nif (timec > (t - 604800000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n\"series\": [\"PM 1.0\"],\n\"data\":data_out,\n    \"labels\": [\"PM 1.0\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3520,
        "y": 900,
        "wires": [
            [
                "e560ab2cd5d5ee1f"
            ]
        ]
    },
    {
        "id": "cadeb59c31fe0644",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "Monthly Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew; //Adjust time to GMT+8\n\nif (timec > (t - 2629743000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n    \"series\": [\"PM 1.0\"],\n\"data\":data_out,\n    \"labels\": [\"PM 1.0\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3520,
        "y": 940,
        "wires": [
            [
                "c8d659b34cc72645"
            ]
        ]
    },
    {
        "id": "75fe6c25bf922671",
        "type": "ui_chart",
        "z": "0d892a33550c80ee",
        "name": "",
        "group": "973afd5460fdb3f8",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "3",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3710,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "e560ab2cd5d5ee1f",
        "type": "ui_chart",
        "z": "0d892a33550c80ee",
        "name": "",
        "group": "f54f6c83536c707e",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3710,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "c8d659b34cc72645",
        "type": "ui_chart",
        "z": "0d892a33550c80ee",
        "name": "",
        "group": "6cf9bd26f9a140a5",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "4",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3710,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "f8398d7f49d832b6",
        "type": "ui_dropdown",
        "z": "0d892a33550c80ee",
        "name": "",
        "label": "",
        "tooltip": "Choose which data you want to view: Past 1 Day, Week or Month",
        "place": "See Data",
        "group": "134a9efe43075fa7",
        "order": 8,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Day",
                "value": "day",
                "type": "str"
            },
            {
                "label": "Week",
                "value": "week",
                "type": "str"
            },
            {
                "label": "Month",
                "value": "month",
                "type": "str"
            },
            {
                "label": "Hide",
                "value": "hide",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 3920,
        "y": 880,
        "wires": [
            [
                "68d9bfcbd8376c7e"
            ]
        ]
    },
    {
        "id": "68d9bfcbd8376c7e",
        "type": "switch",
        "z": "0d892a33550c80ee",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "week",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "month",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "hide",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 4090,
        "y": 880,
        "wires": [
            [
                "3fda648351ef4ef3"
            ],
            [
                "b5ec889dbecae338"
            ],
            [
                "c69fa6323dfbe0ce"
            ],
            [
                "95d0f77de47343f1"
            ]
        ]
    },
    {
        "id": "3fda648351ef4ef3",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_DFR_PM_1.0_1_Day_Analysis\"],\"hide\":[\"Agilian_DFR_PM_1.0_1_Week_Analysis\",\"Agilian_DFR_PM_1.0_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 840,
        "wires": [
            [
                "410e46c20faba075"
            ]
        ]
    },
    {
        "id": "b5ec889dbecae338",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_DFR_PM_1.0_1_Week_Analysis\"],\"hide\":[\"Agilian_DFR_PM_1.0_1_Day_Analysis\",\"Agilian_DFR_PM_1.0_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 880,
        "wires": [
            [
                "410e46c20faba075"
            ]
        ]
    },
    {
        "id": "c69fa6323dfbe0ce",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_DFR_PM_1.0_1_Month_Analysis\"],\"hide\":[\"Agilian_DFR_PM_1.0_1_Week_Analysis\",\"Agilian_DFR_PM_1.0_1_Day_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 920,
        "wires": [
            [
                "410e46c20faba075"
            ]
        ]
    },
    {
        "id": "95d0f77de47343f1",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"hide\":[\"Agilian_DFR_PM_1.0_1_Day_Analysis\",\"Agilian_DFR_PM_1.0_1_Week_Analysis\",\"Agilian_DFR_PM_1.0_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 960,
        "wires": [
            [
                "410e46c20faba075"
            ]
        ]
    },
    {
        "id": "410e46c20faba075",
        "type": "ui_ui_control",
        "z": "0d892a33550c80ee",
        "name": "",
        "events": "all",
        "x": 4500,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "b33181b60e57044f",
        "type": "inject",
        "z": "0d892a33550c80ee",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3070,
        "y": 1000,
        "wires": [
            [
                "6beca8ad27f6592d"
            ]
        ]
    },
    {
        "id": "6beca8ad27f6592d",
        "type": "file in",
        "z": "0d892a33550c80ee",
        "name": "",
        "filename": "/storage/emulated/0/MQTT Data/DFRPM2.5.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3180,
        "y": 1060,
        "wires": [
            [
                "fd67e9c6d63e160e"
            ]
        ]
    },
    {
        "id": "fd67e9c6d63e160e",
        "type": "csv",
        "z": "0d892a33550c80ee",
        "name": "",
        "sep": ",",
        "hdrin": false,
        "hdrout": "",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 3090,
        "y": 1120,
        "wires": [
            [
                "f65e9c663ac050f8",
                "28ba4e61d4a29ae8",
                "10aa223866fe000e"
            ]
        ]
    },
    {
        "id": "f65e9c663ac050f8",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "Daily Graph",
        "func": "\nfunction toTimestamp(strDate) {\n    var datum = Date.parse(strDate);\n    return datum / 1000;\n}\nvar payload = msg.payload;\n\nvar d = new Date();\nvar t = d.getTime();\n\n\n\nvar data_out = [];\nvar a1 = [];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor (let i = 0; i < payload.length; i++) {\n\n    //var Data= payload[i].Data.split(\"-\");\n    //var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n    //var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\n    var timew = parseInt(payload[i][\"col1\"])\n    var timec = timew;\n\n    if (timec > (t - 86400000)) {\n        var temp1 = { \"x\": timec, \"y\": parseInt(payload[i][\"col2\"]) };\n        //var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n        //var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n        //var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n        //var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\n        a1.push(temp1);\n        //a2.push(temp2);\n        //a3.push(temp3);\n        //a4.push(temp4);\n    }\n\n    //\n\n\n}\n\ndata_out = [a1];\nmsg.payload = [{\n    \"series\": [\"PM 2.5\"],\n    \"data\": data_out,\n    \"labels\": [\"PM 2.5\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3510,
        "y": 1040,
        "wires": [
            [
                "6d4888b3e601f0bc"
            ]
        ]
    },
    {
        "id": "28ba4e61d4a29ae8",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "Weekly Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew;\n\nif (timec > (t - 604800000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n    \"series\": [\"PM 2.5\"],\n\"data\":data_out,\n    \"labels\": [\"PM 2.5\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3520,
        "y": 1080,
        "wires": [
            [
                "87a94b7c06d94ad9"
            ]
        ]
    },
    {
        "id": "10aa223866fe000e",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "Monthly Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew; //Adjust time to GMT+8\n\nif (timec > (t - 2629743000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n    \"series\": [\"PM 2.5\"],\n\"data\":data_out,\n    \"labels\": [\"PM 2.5\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3520,
        "y": 1120,
        "wires": [
            [
                "2f897bf98c127b0d"
            ]
        ]
    },
    {
        "id": "6d4888b3e601f0bc",
        "type": "ui_chart",
        "z": "0d892a33550c80ee",
        "name": "",
        "group": "61e1da5a42ee14de",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "3",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3710,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "87a94b7c06d94ad9",
        "type": "ui_chart",
        "z": "0d892a33550c80ee",
        "name": "",
        "group": "08067b21ccdf7f3b",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3710,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "2f897bf98c127b0d",
        "type": "ui_chart",
        "z": "0d892a33550c80ee",
        "name": "",
        "group": "6cd9acf42fedaa46",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "4",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3710,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "bac3ef139538fdfb",
        "type": "ui_dropdown",
        "z": "0d892a33550c80ee",
        "name": "",
        "label": "",
        "tooltip": "Choose which data you want to view: Past 1 Day, Week or Month",
        "place": "See Data",
        "group": "134a9efe43075fa7",
        "order": 10,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Day",
                "value": "day",
                "type": "str"
            },
            {
                "label": "Week",
                "value": "week",
                "type": "str"
            },
            {
                "label": "Month",
                "value": "month",
                "type": "str"
            },
            {
                "label": "Hide",
                "value": "hide",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 3920,
        "y": 1060,
        "wires": [
            [
                "767dcfab55f2af82"
            ]
        ]
    },
    {
        "id": "767dcfab55f2af82",
        "type": "switch",
        "z": "0d892a33550c80ee",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "week",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "month",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "hide",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 4090,
        "y": 1060,
        "wires": [
            [
                "3fd6f8da91057630"
            ],
            [
                "3afa97e7b462e0ba"
            ],
            [
                "ad0ae58b55b5536e"
            ],
            [
                "2607a47493e28fb9"
            ]
        ]
    },
    {
        "id": "3fd6f8da91057630",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_DFR_PM_2.5_1_Day_Analysis\"],\"hide\":[\"Agilian_DFR_PM_2.5_1_Week_Analysis\",\"Agilian_DFR_PM_2.5_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 1020,
        "wires": [
            [
                "681945a4f1f42838"
            ]
        ]
    },
    {
        "id": "3afa97e7b462e0ba",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_DFR_PM_2.5_1_Week_Analysis\"],\"hide\":[\"Agilian_DFR_PM_2.5_1_Day_Analysis\",\"Agilian_DFR_PM_2.5_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 1060,
        "wires": [
            [
                "681945a4f1f42838"
            ]
        ]
    },
    {
        "id": "ad0ae58b55b5536e",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_DFR_PM_2.5_1_Month_Analysis\"],\"hide\":[\"Agilian_DFR_PM_2.5_1_Week_Analysis\",\"Agilian_DFR_PM_2.5_1_Day_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 1100,
        "wires": [
            [
                "681945a4f1f42838"
            ]
        ]
    },
    {
        "id": "2607a47493e28fb9",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"hide\":[\"Agilian_DFR_PM_2.5_1_Day_Analysis\",\"Agilian_DFR_PM_2.5_1_Week_Analysis\",\"Agilian_DFR_PM_2.5_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 1140,
        "wires": [
            [
                "681945a4f1f42838"
            ]
        ]
    },
    {
        "id": "681945a4f1f42838",
        "type": "ui_ui_control",
        "z": "0d892a33550c80ee",
        "name": "",
        "events": "all",
        "x": 4500,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "5323e3d887c8088e",
        "type": "inject",
        "z": "0d892a33550c80ee",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3070,
        "y": 1180,
        "wires": [
            [
                "66084ec3f4e22eae"
            ]
        ]
    },
    {
        "id": "66084ec3f4e22eae",
        "type": "file in",
        "z": "0d892a33550c80ee",
        "name": "",
        "filename": "/storage/emulated/0/MQTT Data/DFRPM10.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3180,
        "y": 1240,
        "wires": [
            [
                "0e90c3c060002e12"
            ]
        ]
    },
    {
        "id": "0e90c3c060002e12",
        "type": "csv",
        "z": "0d892a33550c80ee",
        "name": "",
        "sep": ",",
        "hdrin": false,
        "hdrout": "",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 3090,
        "y": 1300,
        "wires": [
            [
                "c40c90a20e371a9b",
                "cde228232d8b0e84",
                "c65b05c5cc40578a"
            ]
        ]
    },
    {
        "id": "c40c90a20e371a9b",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "Daily Graph",
        "func": "\nfunction toTimestamp(strDate) {\n    var datum = Date.parse(strDate);\n    return datum / 1000;\n}\nvar payload = msg.payload;\n\nvar d = new Date();\nvar t = d.getTime();\n\n\n\nvar data_out = [];\nvar a1 = [];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor (let i = 0; i < payload.length; i++) {\n\n    //var Data= payload[i].Data.split(\"-\");\n    //var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n    //var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\n    var timew = parseInt(payload[i][\"col1\"])\n    var timec = timew;\n\n    if (timec > (t - 86400000)) {\n        var temp1 = { \"x\": timec, \"y\": parseInt(payload[i][\"col2\"]) };\n        //var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n        //var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n        //var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n        //var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\n        a1.push(temp1);\n        //a2.push(temp2);\n        //a3.push(temp3);\n        //a4.push(temp4);\n    }\n\n    //\n\n\n}\n\ndata_out = [a1];\nmsg.payload = [{\n    \"series\": [\"PM 10\"],\n    \"data\": data_out,\n    \"labels\": [\"PM 10\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3510,
        "y": 1220,
        "wires": [
            [
                "9a4d892da6e3f167"
            ]
        ]
    },
    {
        "id": "cde228232d8b0e84",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "Weekly Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew;\n\nif (timec > (t - 604800000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n    \"series\": [\"PM 10\"],\n\"data\":data_out,\n    \"labels\": [\"PM 10\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3520,
        "y": 1260,
        "wires": [
            [
                "2e054ff0c1d114e3"
            ]
        ]
    },
    {
        "id": "c65b05c5cc40578a",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "Monthly Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew; //Adjust time to GMT+8\n\nif (timec > (t - 2629743000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n    \"series\": [\"PM 10\"],\n\"data\":data_out,\n    \"labels\": [\"PM 10\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3520,
        "y": 1300,
        "wires": [
            [
                "177728470b437845"
            ]
        ]
    },
    {
        "id": "9a4d892da6e3f167",
        "type": "ui_chart",
        "z": "0d892a33550c80ee",
        "name": "",
        "group": "89669cd2cddbe28c",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "3",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3710,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "2e054ff0c1d114e3",
        "type": "ui_chart",
        "z": "0d892a33550c80ee",
        "name": "",
        "group": "cc45368ec1a8b10d",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3710,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "177728470b437845",
        "type": "ui_chart",
        "z": "0d892a33550c80ee",
        "name": "",
        "group": "ec242660b544e94f",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "4",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3710,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "970d1b0fb74076f9",
        "type": "ui_dropdown",
        "z": "0d892a33550c80ee",
        "name": "",
        "label": "",
        "tooltip": "Choose which data you want to view: Past 1 Day, Week or Month",
        "place": "See Data",
        "group": "134a9efe43075fa7",
        "order": 12,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Day",
                "value": "day",
                "type": "str"
            },
            {
                "label": "Week",
                "value": "week",
                "type": "str"
            },
            {
                "label": "Month",
                "value": "month",
                "type": "str"
            },
            {
                "label": "Hide",
                "value": "hide",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 3920,
        "y": 1240,
        "wires": [
            [
                "9c2bcecf4c078ae8"
            ]
        ]
    },
    {
        "id": "9c2bcecf4c078ae8",
        "type": "switch",
        "z": "0d892a33550c80ee",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "week",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "month",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "hide",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 4090,
        "y": 1240,
        "wires": [
            [
                "b0d3e5a059234d29"
            ],
            [
                "a18dceec53d8dbc3"
            ],
            [
                "a1bd3bdaa7ae6308"
            ],
            [
                "8aad0f204726f8e9"
            ]
        ]
    },
    {
        "id": "b0d3e5a059234d29",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_DFR_PM_10_1_Day_Analysis\"],\"hide\":[\"Agilian_DFR_PM_10_1_Week_Analysis\",\"Agilian_DFR_PM_10_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 1200,
        "wires": [
            [
                "a0633c1ec2780cf5"
            ]
        ]
    },
    {
        "id": "a18dceec53d8dbc3",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_DFR_PM_10_1_Week_Analysis\"],\"hide\":[\"Agilian_DFR_PM_10_1_Day_Analysis\",\"Agilian_DFR_PM_10_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 1240,
        "wires": [
            [
                "a0633c1ec2780cf5"
            ]
        ]
    },
    {
        "id": "a1bd3bdaa7ae6308",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_DFR_PM_10_1_Month_Analysis\"],\"hide\":[\"Agilian_DFR_PM_10_1_Week_Analysis\",\"Agilian_DFR_PM_10_1_Day_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 1280,
        "wires": [
            [
                "a0633c1ec2780cf5"
            ]
        ]
    },
    {
        "id": "8aad0f204726f8e9",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"hide\":[\"Agilian_DFR_PM_10_1_Day_Analysis\",\"Agilian_DFR_PM_10_1_Week_Analysis\",\"Agilian_DFR_PM_10_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 1320,
        "wires": [
            [
                "a0633c1ec2780cf5"
            ]
        ]
    },
    {
        "id": "a0633c1ec2780cf5",
        "type": "ui_ui_control",
        "z": "0d892a33550c80ee",
        "name": "",
        "events": "all",
        "x": 4500,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "fe2404816766c949",
        "type": "inject",
        "z": "0d892a33550c80ee",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3070,
        "y": 1340,
        "wires": [
            [
                "ace0c642e719c978"
            ]
        ]
    },
    {
        "id": "ace0c642e719c978",
        "type": "file in",
        "z": "0d892a33550c80ee",
        "name": "",
        "filename": "/storage/emulated/0/MQTT Data/DFRCO2.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3180,
        "y": 1380,
        "wires": [
            [
                "0f110a6996a9fa25"
            ]
        ]
    },
    {
        "id": "0f110a6996a9fa25",
        "type": "csv",
        "z": "0d892a33550c80ee",
        "name": "",
        "sep": ",",
        "hdrin": false,
        "hdrout": "",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 3090,
        "y": 1440,
        "wires": [
            [
                "1e7f35b5997cec0d",
                "91aca95123390099",
                "ba9f8e3e77efd79a"
            ]
        ]
    },
    {
        "id": "1e7f35b5997cec0d",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "Daily Graph",
        "func": "\nfunction toTimestamp(strDate) {\n    var datum = Date.parse(strDate);\n    return datum / 1000;\n}\nvar payload = msg.payload;\n\nvar d = new Date();\nvar t = d.getTime();\n\n\n\nvar data_out = [];\nvar a1 = [];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor (let i = 0; i < payload.length; i++) {\n\n    //var Data= payload[i].Data.split(\"-\");\n    //var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n    //var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\n    var timew = parseInt(payload[i][\"col1\"])\n    var timec = timew;\n\n    if (timec > (t - 86400000)) {\n        var temp1 = { \"x\": timec, \"y\": parseInt(payload[i][\"col2\"]) };\n        //var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n        //var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n        //var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n        //var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\n        a1.push(temp1);\n        //a2.push(temp2);\n        //a3.push(temp3);\n        //a4.push(temp4);\n    }\n\n    //\n\n\n}\n\ndata_out = [a1];\nmsg.payload = [{\n    \"series\": [\"CO2\"],\n    \"data\": data_out,\n    \"labels\": [\"CO2\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3510,
        "y": 1360,
        "wires": [
            [
                "d392d4935aa5e89e"
            ]
        ]
    },
    {
        "id": "91aca95123390099",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "Weekly Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew;\n\nif (timec > (t - 604800000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n    \"series\": [\"CO2\"],\n    \"data\": data_out,\n    \"labels\": [\"CO2\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3520,
        "y": 1400,
        "wires": [
            [
                "4b61734d9e36eea2"
            ]
        ]
    },
    {
        "id": "ba9f8e3e77efd79a",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "Monthly Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew; //Adjust time to GMT+8\n\nif (timec > (t - 2629743000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n    \"series\": [\"CO2\"],\n    \"data\": data_out,\n    \"labels\": [\"CO2\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3520,
        "y": 1440,
        "wires": [
            [
                "3748a3b6c18edf4e"
            ]
        ]
    },
    {
        "id": "d392d4935aa5e89e",
        "type": "ui_chart",
        "z": "0d892a33550c80ee",
        "name": "",
        "group": "a404680db06bc696",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "3",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3710,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "4b61734d9e36eea2",
        "type": "ui_chart",
        "z": "0d892a33550c80ee",
        "name": "",
        "group": "1ba0eb30f6bc4f06",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3710,
        "y": 1400,
        "wires": [
            []
        ]
    },
    {
        "id": "3748a3b6c18edf4e",
        "type": "ui_chart",
        "z": "0d892a33550c80ee",
        "name": "",
        "group": "5bb64af96b6e7f22",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "4",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3710,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "652106b1e8d3c9fb",
        "type": "ui_dropdown",
        "z": "0d892a33550c80ee",
        "name": "",
        "label": "",
        "tooltip": "Choose which data you want to view: Past 1 Day, Week or Month",
        "place": "See Data",
        "group": "134a9efe43075fa7",
        "order": 14,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Day",
                "value": "day",
                "type": "str"
            },
            {
                "label": "Week",
                "value": "week",
                "type": "str"
            },
            {
                "label": "Month",
                "value": "month",
                "type": "str"
            },
            {
                "label": "Hide",
                "value": "hide",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 3920,
        "y": 1420,
        "wires": [
            [
                "76db7380f28fe9e9"
            ]
        ]
    },
    {
        "id": "76db7380f28fe9e9",
        "type": "switch",
        "z": "0d892a33550c80ee",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "week",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "month",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "hide",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 4090,
        "y": 1420,
        "wires": [
            [
                "e61405cc9bcd9b7d"
            ],
            [
                "5c8583f368b521d3"
            ],
            [
                "14b34e4fd92af88a"
            ],
            [
                "cc074bf6222b86e1"
            ]
        ]
    },
    {
        "id": "e61405cc9bcd9b7d",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_DFR_CO2_1_Day_Analysis\"],\"hide\":[\"Agilian_DFR_CO2_1_Week_Analysis\",\"Agilian_DFR_CO2_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 1380,
        "wires": [
            [
                "3b024de61e96aad1"
            ]
        ]
    },
    {
        "id": "5c8583f368b521d3",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_DFR_CO2_1_Week_Analysis\"],\"hide\":[\"Agilian_DFR_CO2_1_Day_Analysis\",\"Agilian_DFR_CO2_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 1420,
        "wires": [
            [
                "3b024de61e96aad1"
            ]
        ]
    },
    {
        "id": "14b34e4fd92af88a",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_DFR_CO2_1_Month_Analysis\"],\"hide\":[\"Agilian_DFR_CO2_1_Week_Analysis\",\"Agilian_DFR_CO2_1_Day_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 1460,
        "wires": [
            [
                "3b024de61e96aad1"
            ]
        ]
    },
    {
        "id": "cc074bf6222b86e1",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"hide\":[\"Agilian_DFR_CO2_1_Day_Analysis\",\"Agilian_DFR_CO2_1_Week_Analysis\",\"Agilian_DFR_CO2_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 1500,
        "wires": [
            [
                "3b024de61e96aad1"
            ]
        ]
    },
    {
        "id": "3b024de61e96aad1",
        "type": "ui_ui_control",
        "z": "0d892a33550c80ee",
        "name": "",
        "events": "all",
        "x": 4500,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "a9bc1c8e12b5f041",
        "type": "inject",
        "z": "0d892a33550c80ee",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3070,
        "y": 1520,
        "wires": [
            [
                "9037c6c80d0157c2"
            ]
        ]
    },
    {
        "id": "9037c6c80d0157c2",
        "type": "file in",
        "z": "0d892a33550c80ee",
        "name": "",
        "filename": "/storage/emulated/0/MQTT Data/DFRHuman.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3180,
        "y": 1560,
        "wires": [
            [
                "b4193ca4a07d28a4"
            ]
        ]
    },
    {
        "id": "b4193ca4a07d28a4",
        "type": "csv",
        "z": "0d892a33550c80ee",
        "name": "",
        "sep": ",",
        "hdrin": false,
        "hdrout": "",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 3090,
        "y": 1620,
        "wires": [
            [
                "779483d31f84fba2",
                "eb1cc4833428f40b",
                "22793e8909bf33e5"
            ]
        ]
    },
    {
        "id": "779483d31f84fba2",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "Daily Graph",
        "func": "\nfunction toTimestamp(strDate) {\n    var datum = Date.parse(strDate);\n    return datum / 1000;\n}\nvar payload = msg.payload;\n\nvar d = new Date();\nvar t = d.getTime();\n\n\n\nvar data_out = [];\nvar a1 = [];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor (let i = 0; i < payload.length; i++) {\n\n    //var Data= payload[i].Data.split(\"-\");\n    //var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n    //var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\n    var timew = parseInt(payload[i][\"col1\"])\n    var timec = timew;\n\n    if (timec > (t - 86400000)) {\n        var temp1 = { \"x\": timec, \"y\": parseInt(payload[i][\"col2\"]) };\n        //var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n        //var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n        //var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n        //var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\n        a1.push(temp1);\n        //a2.push(temp2);\n        //a3.push(temp3);\n        //a4.push(temp4);\n    }\n\n    //\n\n\n}\n\ndata_out = [a1];\nmsg.payload = [{\n    \"series\": [\"Human\"],\n    \"data\": data_out,\n    \"labels\": [\"Human\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3510,
        "y": 1540,
        "wires": [
            [
                "445659bb44c1dc9a"
            ]
        ]
    },
    {
        "id": "eb1cc4833428f40b",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "Weekly Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew;\n\nif (timec > (t - 604800000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n    \"series\": [\"Human\"],\n    \"data\": data_out,\n    \"labels\": [\"Human\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3520,
        "y": 1580,
        "wires": [
            [
                "23b839982d370cb1"
            ]
        ]
    },
    {
        "id": "22793e8909bf33e5",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "Monthly Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew; //Adjust time to GMT+8\n\nif (timec > (t - 2629743000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n    \"series\": [\"Human\"],\n    \"data\": data_out,\n    \"labels\": [\"Human\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3520,
        "y": 1620,
        "wires": [
            [
                "9689cf0264ee3c4d"
            ]
        ]
    },
    {
        "id": "445659bb44c1dc9a",
        "type": "ui_chart",
        "z": "0d892a33550c80ee",
        "name": "",
        "group": "bdeaddaaa099c1bd",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "3",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3710,
        "y": 1540,
        "wires": [
            []
        ]
    },
    {
        "id": "23b839982d370cb1",
        "type": "ui_chart",
        "z": "0d892a33550c80ee",
        "name": "",
        "group": "8618298f401fb52f",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3710,
        "y": 1580,
        "wires": [
            []
        ]
    },
    {
        "id": "9689cf0264ee3c4d",
        "type": "ui_chart",
        "z": "0d892a33550c80ee",
        "name": "",
        "group": "5a10f4f686bb3d52",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "4",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3710,
        "y": 1620,
        "wires": [
            []
        ]
    },
    {
        "id": "5d877e1de21bf056",
        "type": "ui_dropdown",
        "z": "0d892a33550c80ee",
        "name": "",
        "label": "",
        "tooltip": "Choose which data you want to view: Past 1 Day, Week or Month",
        "place": "See Data",
        "group": "134a9efe43075fa7",
        "order": 16,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Day",
                "value": "day",
                "type": "str"
            },
            {
                "label": "Week",
                "value": "week",
                "type": "str"
            },
            {
                "label": "Month",
                "value": "month",
                "type": "str"
            },
            {
                "label": "Hide",
                "value": "hide",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 3920,
        "y": 1580,
        "wires": [
            [
                "ffec8254eb7db8e8"
            ]
        ]
    },
    {
        "id": "ffec8254eb7db8e8",
        "type": "switch",
        "z": "0d892a33550c80ee",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "week",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "month",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "hide",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 4090,
        "y": 1580,
        "wires": [
            [
                "a00d91b128194a53"
            ],
            [
                "4eba5487fd865560"
            ],
            [
                "7bf8275a0f249f10"
            ],
            [
                "d2355f275ceb7591"
            ]
        ]
    },
    {
        "id": "a00d91b128194a53",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_DFR_Human_1_Day_Analysis\"],\"hide\":[\"Agilian_DFR_Human_1_Week_Analysis\",\"Agilian_DFR_Human_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 1540,
        "wires": [
            [
                "dd5ff9e0c8017983"
            ]
        ]
    },
    {
        "id": "4eba5487fd865560",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_DFR_Human_1_Week_Analysis\"],\"hide\":[\"Agilian_DFR_Human_1_Day_Analysis\",\"Agilian_DFR_Human_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 1580,
        "wires": [
            [
                "dd5ff9e0c8017983"
            ]
        ]
    },
    {
        "id": "7bf8275a0f249f10",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_DFR_Human_1_Month_Analysis\"],\"hide\":[\"Agilian_DFR_Human_1_Week_Analysis\",\"Agilian_DFR_Human_1_Day_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 1620,
        "wires": [
            [
                "dd5ff9e0c8017983"
            ]
        ]
    },
    {
        "id": "d2355f275ceb7591",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"hide\":[\"Agilian_DFR_Human_1_Day_Analysis\",\"Agilian_DFR_Human_1_Week_Analysis\",\"Agilian_DFR_Human_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 1660,
        "wires": [
            [
                "dd5ff9e0c8017983"
            ]
        ]
    },
    {
        "id": "dd5ff9e0c8017983",
        "type": "ui_ui_control",
        "z": "0d892a33550c80ee",
        "name": "",
        "events": "all",
        "x": 4500,
        "y": 1580,
        "wires": [
            []
        ]
    },
    {
        "id": "c14dc761dded11e6",
        "type": "inject",
        "z": "0d892a33550c80ee",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1450,
        "y": 1000,
        "wires": [
            [
                "a5985b948275371a"
            ]
        ]
    },
    {
        "id": "a5985b948275371a",
        "type": "file in",
        "z": "0d892a33550c80ee",
        "name": "",
        "filename": "/storage/emulated/0/MQTT Data/CNCRmPower.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1570,
        "y": 1040,
        "wires": [
            [
                "70924eac50771af6"
            ]
        ]
    },
    {
        "id": "70924eac50771af6",
        "type": "csv",
        "z": "0d892a33550c80ee",
        "name": "",
        "sep": ",",
        "hdrin": false,
        "hdrout": "",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1470,
        "y": 1100,
        "wires": [
            [
                "4c766ae186347d2c",
                "f0ef7ead218b0c3e",
                "7ed51e0d0138677a"
            ]
        ]
    },
    {
        "id": "4c766ae186347d2c",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "Daily Graph",
        "func": "\nfunction toTimestamp(strDate) {\n    var datum = Date.parse(strDate);\n    return datum / 1000;\n}\nvar payload = msg.payload;\n\nvar d = new Date();\nvar t = d.getTime();\n\n\n\nvar data_out = [];\nvar a1 = [];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor (let i = 0; i < payload.length; i++) {\n\n    //var Data= payload[i].Data.split(\"-\");\n    //var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n    //var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\n    var timew = parseInt(payload[i][\"col1\"])\n    var timec = timew;\n\n    if (timec > (t - 86400000)) {\n        var temp1 = { \"x\": timec, \"y\": parseInt(payload[i][\"col2\"]) };\n        //var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n        //var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n        //var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n        //var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\n        a1.push(temp1);\n        //a2.push(temp2);\n        //a3.push(temp3);\n        //a4.push(temp4);\n    }\n\n    //\n\n\n}\n\ndata_out = [a1];\nmsg.payload = [{\n    \"series\": [\"Power\"],\n    \"data\": data_out,\n    \"labels\": [\"Power\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1890,
        "y": 1020,
        "wires": [
            [
                "f87cd632a2c0d674"
            ]
        ]
    },
    {
        "id": "f0ef7ead218b0c3e",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "Weekly Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew;\n\nif (timec > (t - 604800000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n    \"series\": [\"Power\"],\n    \"data\": data_out,\n    \"labels\": [\"Power\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1900,
        "y": 1060,
        "wires": [
            [
                "4e1b92d20754476c"
            ]
        ]
    },
    {
        "id": "7ed51e0d0138677a",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "Monthly Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew; //Adjust time to GMT+8\n\nif (timec > (t - 2629743000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n    \"series\": [\"Power\"],\n    \"data\": data_out,\n    \"labels\": [\"Power\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1900,
        "y": 1100,
        "wires": [
            [
                "9d341d3fdc5e9c02"
            ]
        ]
    },
    {
        "id": "f87cd632a2c0d674",
        "type": "ui_chart",
        "z": "0d892a33550c80ee",
        "name": "",
        "group": "bd767f90600dc992",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "3",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2090,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "4e1b92d20754476c",
        "type": "ui_chart",
        "z": "0d892a33550c80ee",
        "name": "",
        "group": "4d717acd255a1442",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2090,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "9d341d3fdc5e9c02",
        "type": "ui_chart",
        "z": "0d892a33550c80ee",
        "name": "",
        "group": "62b7e7e0240be3ee",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "4",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2090,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "cc71392da011c35e",
        "type": "ui_dropdown",
        "z": "0d892a33550c80ee",
        "name": "",
        "label": "",
        "tooltip": "Choose which data you want to view: Past 1 Day, Week or Month",
        "place": "See Data",
        "group": "8560c9625c2f462e",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Day",
                "value": "day",
                "type": "str"
            },
            {
                "label": "Week",
                "value": "week",
                "type": "str"
            },
            {
                "label": "Month",
                "value": "month",
                "type": "str"
            },
            {
                "label": "Hide",
                "value": "hide",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 900,
        "y": 1280,
        "wires": [
            [
                "e6b3c8589934108f"
            ]
        ]
    },
    {
        "id": "e6b3c8589934108f",
        "type": "switch",
        "z": "0d892a33550c80ee",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "week",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "month",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "hide",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 1070,
        "y": 1280,
        "wires": [
            [
                "38dafc2503453328"
            ],
            [
                "25da96d76be8c5bc"
            ],
            [
                "67d53595cba1b471"
            ],
            [
                "766d1022c5faf786"
            ]
        ]
    },
    {
        "id": "38dafc2503453328",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_CNC_Room_Power_1_Day_Analysis\"],\"hide\":[\"Agilian_CNC_Room_Power_1_Week_Analysis\",\"Agilian_CNC_Room_Power_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1260,
        "y": 1240,
        "wires": [
            [
                "bff0c947e2b5b374"
            ]
        ]
    },
    {
        "id": "25da96d76be8c5bc",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_CNC_Room_Power_1_Week_Analysis\"],\"hide\":[\"Agilian_CNC_Room_Power_1_Day_Analysis\",\"Agilian_CNC_Room_Power_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1260,
        "y": 1280,
        "wires": [
            [
                "bff0c947e2b5b374"
            ]
        ]
    },
    {
        "id": "67d53595cba1b471",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_CNC_Room_Power_1_Month_Analysis\"],\"hide\":[\"Agilian_CNC_Room_Power_1_Week_Analysis\",\"Agilian_CNC_Room_Power_1_Day_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1260,
        "y": 1320,
        "wires": [
            [
                "bff0c947e2b5b374"
            ]
        ]
    },
    {
        "id": "766d1022c5faf786",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"hide\":[\"Agilian_CNC_Room_Power_1_Day_Analysis\",\"Agilian_CNC_Room_Power_1_Week_Analysis\",\"Agilian_CNC_Room_Power_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1260,
        "y": 1360,
        "wires": [
            [
                "bff0c947e2b5b374"
            ]
        ]
    },
    {
        "id": "bff0c947e2b5b374",
        "type": "ui_ui_control",
        "z": "0d892a33550c80ee",
        "name": "",
        "events": "all",
        "x": 1480,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "55ce80e8c2ae09d2",
        "type": "inject",
        "z": "0d892a33550c80ee",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1470,
        "y": 1420,
        "wires": [
            [
                "bdb68904f5e67212"
            ]
        ]
    },
    {
        "id": "bdb68904f5e67212",
        "type": "file in",
        "z": "0d892a33550c80ee",
        "name": "",
        "filename": "/storage/emulated/0/MQTT Data/IRPower.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1570,
        "y": 1460,
        "wires": [
            [
                "9c35fb4dc5801c76"
            ]
        ]
    },
    {
        "id": "9c35fb4dc5801c76",
        "type": "csv",
        "z": "0d892a33550c80ee",
        "name": "",
        "sep": ",",
        "hdrin": false,
        "hdrout": "",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1490,
        "y": 1520,
        "wires": [
            [
                "744776891c197123",
                "fdfa51a7646f474c",
                "2a553dce1ae0a6bf"
            ]
        ]
    },
    {
        "id": "744776891c197123",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "Daily Graph",
        "func": "\nfunction toTimestamp(strDate) {\n    var datum = Date.parse(strDate);\n    return datum / 1000;\n}\nvar payload = msg.payload;\n\nvar d = new Date();\nvar t = d.getTime();\n\n\n\nvar data_out = [];\nvar a1 = [];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor (let i = 0; i < payload.length; i++) {\n\n    //var Data= payload[i].Data.split(\"-\");\n    //var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n    //var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\n    var timew = parseInt(payload[i][\"col1\"])\n    var timec = timew;\n\n    if (timec > (t - 86400000)) {\n        var temp1 = { \"x\": timec, \"y\": parseInt(payload[i][\"col2\"]) };\n        //var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n        //var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n        //var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n        //var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\n        a1.push(temp1);\n        //a2.push(temp2);\n        //a3.push(temp3);\n        //a4.push(temp4);\n    }\n\n    //\n\n\n}\n\ndata_out = [a1];\nmsg.payload = [{\n    \"series\": [\"Power\"],\n    \"data\": data_out,\n    \"labels\": [\"Power\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1910,
        "y": 1440,
        "wires": [
            [
                "11bfcb74327c7418"
            ]
        ]
    },
    {
        "id": "fdfa51a7646f474c",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "Weekly Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew;\n\nif (timec > (t - 604800000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n    \"series\": [\"Power\"],\n    \"data\": data_out,\n    \"labels\": [\"Power\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1920,
        "y": 1480,
        "wires": [
            [
                "9cda3f045ca22e91"
            ]
        ]
    },
    {
        "id": "2a553dce1ae0a6bf",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "Monthly Graph",
        "func": "\nfunction toTimestamp(strDate){\n     var datum = Date.parse(strDate);\n     return datum/1000;\n    }\nvar payload=msg.payload;\n\nvar d = new Date();\nvar t =  d.getTime();\n\n\n\nvar data_out=[];\nvar a1=[];\n//var a2=[];\n//var a3=[];\n//var a4=[];\nfor(let i=0;i<payload.length;i++)\n{\n\n//var Data= payload[i].Data.split(\"-\");\n//var t=Data[2]+\"/\"+Data[1]+\"/\"+Data[0];\n//var timestamp=toTimestamp(t+\" \"+payload[i][\"Godzina\"]);\n\n\nvar timew = parseInt(payload[i][\"col1\"])\nvar timec = timew; //Adjust time to GMT+8\n\nif (timec > (t - 2629743000)){\nvar temp1={ \"x\": timec, \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp1={ \"x\": parseInt(payload[i][\"col1\"]), \"y\":parseInt( payload[i][\"col2\"]) };\n//var temp2={ \"x\": timestamp, \"y\":parseInt( payload[i][\"Wilg_RS-485\"]) };\n//var temp3={ \"x\": timestamp, \"y\": parseInt(payload[i][\"Temperatura I\"])};\n//var temp4={\"x\": timestamp, \"y\": parseInt(payload[i][\"Wilgotność I\"])};\n\n\na1.push(temp1);\n//a2.push(temp2);\n//a3.push(temp3);\n//a4.push(temp4);\n}\n \n //\n \n \n}\n\ndata_out=[a1];\nmsg.payload=[{\n    \"series\": [\"Power\"],\n    \"data\": data_out,\n    \"labels\": [\"Power\"]\n}];\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1920,
        "y": 1520,
        "wires": [
            [
                "44da213d49e922d3"
            ]
        ]
    },
    {
        "id": "11bfcb74327c7418",
        "type": "ui_chart",
        "z": "0d892a33550c80ee",
        "name": "",
        "group": "9c9ac69b2ed7ccb8",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "3",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2110,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "9cda3f045ca22e91",
        "type": "ui_chart",
        "z": "0d892a33550c80ee",
        "name": "",
        "group": "4d82b3069abb01d9",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2110,
        "y": 1480,
        "wires": [
            []
        ]
    },
    {
        "id": "44da213d49e922d3",
        "type": "ui_chart",
        "z": "0d892a33550c80ee",
        "name": "",
        "group": "dfe535f3c5f40006",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "4",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2110,
        "y": 1520,
        "wires": [
            []
        ]
    },
    {
        "id": "3bb3fbf601a5249c",
        "type": "ui_dropdown",
        "z": "0d892a33550c80ee",
        "name": "",
        "label": "",
        "tooltip": "Choose which data you want to view: Past 1 Day, Week or Month",
        "place": "See Data",
        "group": "858c386bfc79804f",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Day",
                "value": "day",
                "type": "str"
            },
            {
                "label": "Week",
                "value": "week",
                "type": "str"
            },
            {
                "label": "Month",
                "value": "month",
                "type": "str"
            },
            {
                "label": "Hide",
                "value": "hide",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 960,
        "y": 1760,
        "wires": [
            [
                "92f767561d8f7236"
            ]
        ]
    },
    {
        "id": "92f767561d8f7236",
        "type": "switch",
        "z": "0d892a33550c80ee",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "day",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "week",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "month",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "hide",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 1130,
        "y": 1760,
        "wires": [
            [
                "74b5b78d546d7610"
            ],
            [
                "541e40ee16a73746"
            ],
            [
                "f36cdbaf84d5bc4e"
            ],
            [
                "dab5ac6df505103f"
            ]
        ]
    },
    {
        "id": "74b5b78d546d7610",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_Injection_Room_Power_1_Day_Analysis\"],\"hide\":[\"Agilian_Injection_Room_Power_1_Week_Analysis\",\"Agilian_Injection_Room_Power_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 1720,
        "wires": [
            [
                "73b25e05a2affdc4"
            ]
        ]
    },
    {
        "id": "541e40ee16a73746",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_Injection_Room_Power_1_Week_Analysis\"],\"hide\":[\"Agilian_Injection_Room_Power_1_Day_Analysis\",\"Agilian_Injection_Room_Power_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 1760,
        "wires": [
            [
                "73b25e05a2affdc4"
            ]
        ]
    },
    {
        "id": "f36cdbaf84d5bc4e",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Agilian_Injection_Room_Power_1_Month_Analysis\"],\"hide\":[\"Agilian_Injection_Room_Power_1_Week_Analysis\",\"Agilian_Injection_Room_Power_1_Day_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 1800,
        "wires": [
            [
                "73b25e05a2affdc4"
            ]
        ]
    },
    {
        "id": "dab5ac6df505103f",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"hide\":[\"Agilian_Injection_Room_Power_1_Day_Analysis\",\"Agilian_Injection_Room_Power_1_Week_Analysis\",\"Agilian_Injection_Room_Power_1_Month_Analysis\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 1840,
        "wires": [
            [
                "73b25e05a2affdc4"
            ]
        ]
    },
    {
        "id": "73b25e05a2affdc4",
        "type": "ui_ui_control",
        "z": "0d892a33550c80ee",
        "name": "",
        "events": "all",
        "x": 1540,
        "y": 1760,
        "wires": [
            []
        ]
    },
    {
        "id": "aed3f22c8f9a2093",
        "type": "ui_ui_control",
        "z": "0d892a33550c80ee",
        "name": "",
        "events": "all",
        "x": 4080,
        "y": 200,
        "wires": [
            [
                "06d931ae42e2fbbb"
            ]
        ]
    },
    {
        "id": "95b22f7e1f907af7",
        "type": "ui_ui_control",
        "z": "0d892a33550c80ee",
        "name": "",
        "events": "all",
        "x": 4100,
        "y": 480,
        "wires": [
            [
                "0512ee168197799a"
            ]
        ]
    },
    {
        "id": "00ab9e377babb522",
        "type": "ui_ui_control",
        "z": "0d892a33550c80ee",
        "name": "",
        "events": "all",
        "x": 4080,
        "y": 720,
        "wires": [
            [
                "8125f43dc1634bb5"
            ]
        ]
    },
    {
        "id": "991cefd5b6235f58",
        "type": "ui_ui_control",
        "z": "0d892a33550c80ee",
        "name": "",
        "events": "all",
        "x": 4080,
        "y": 960,
        "wires": [
            [
                "95d0f77de47343f1"
            ]
        ]
    },
    {
        "id": "b518baa8761a8224",
        "type": "ui_ui_control",
        "z": "0d892a33550c80ee",
        "name": "",
        "events": "all",
        "x": 4080,
        "y": 1140,
        "wires": [
            [
                "2607a47493e28fb9"
            ]
        ]
    },
    {
        "id": "80bab1bae1198a4b",
        "type": "ui_ui_control",
        "z": "0d892a33550c80ee",
        "name": "",
        "events": "all",
        "x": 4060,
        "y": 1320,
        "wires": [
            [
                "8aad0f204726f8e9"
            ]
        ]
    },
    {
        "id": "7f939a87f33036c2",
        "type": "ui_ui_control",
        "z": "0d892a33550c80ee",
        "name": "",
        "events": "all",
        "x": 4080,
        "y": 1500,
        "wires": [
            [
                "cc074bf6222b86e1"
            ]
        ]
    },
    {
        "id": "da51a62ced792360",
        "type": "ui_ui_control",
        "z": "0d892a33550c80ee",
        "name": "",
        "events": "all",
        "x": 4080,
        "y": 1660,
        "wires": [
            [
                "d2355f275ceb7591"
            ]
        ]
    },
    {
        "id": "8c681a40e499c39b",
        "type": "ui_ui_control",
        "z": "0d892a33550c80ee",
        "name": "",
        "events": "all",
        "x": 1220,
        "y": 440,
        "wires": [
            [
                "c1e76b827c5a27d4"
            ]
        ]
    },
    {
        "id": "a3d139274b5df7ed",
        "type": "ui_ui_control",
        "z": "0d892a33550c80ee",
        "name": "",
        "events": "all",
        "x": 1220,
        "y": 900,
        "wires": [
            [
                "d61749c6c18328c5"
            ]
        ]
    },
    {
        "id": "3bcdf2bbf19e3103",
        "type": "ui_ui_control",
        "z": "0d892a33550c80ee",
        "name": "",
        "events": "all",
        "x": 1060,
        "y": 1360,
        "wires": [
            [
                "766d1022c5faf786"
            ]
        ]
    },
    {
        "id": "841a6f21500170be",
        "type": "ui_ui_control",
        "z": "0d892a33550c80ee",
        "name": "",
        "events": "all",
        "x": 1120,
        "y": 1840,
        "wires": [
            [
                "dab5ac6df505103f"
            ]
        ]
    },
    {
        "id": "eb62de1be62c9b42",
        "type": "ui_text",
        "z": "0d892a33550c80ee",
        "group": "382598d1a0b04297",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Date/Time",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 770,
        "y": 60,
        "wires": []
    },
    {
        "id": "6315c575b210f78b",
        "type": "openweathermap",
        "z": "0d892a33550c80ee",
        "name": "Dongguan",
        "wtype": "current",
        "lon": "",
        "lat": "",
        "city": "Dongguan",
        "country": "CN",
        "language": "en",
        "x": 370,
        "y": 120,
        "wires": [
            [
                "a14d1f93d7397222",
                "b4e459b00a71d477",
                "e74c9dc6b541c0d7",
                "4640b22b4a6037a3"
            ]
        ]
    },
    {
        "id": "a14d1f93d7397222",
        "type": "function",
        "z": "0d892a33550c80ee",
        "d": true,
        "name": "Temp",
        "func": "var newMsg = { payload: msg.payload.tempc};\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 120,
        "wires": [
            [
                "2f9dbaa32fe49996"
            ]
        ],
        "info": "msg.payload.tempc"
    },
    {
        "id": "38b59de679abb21a",
        "type": "ui_text",
        "z": "0d892a33550c80ee",
        "group": "382598d1a0b04297",
        "order": 14,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Outdoor Temperature",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 800,
        "y": 120,
        "wires": []
    },
    {
        "id": "b4e459b00a71d477",
        "type": "function",
        "z": "0d892a33550c80ee",
        "d": true,
        "name": "Location",
        "func": "var newMsg = { payload: msg.payload.location};\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 240,
        "wires": [
            [
                "05b2211559324403"
            ]
        ],
        "info": "msg.payload.tempc"
    },
    {
        "id": "05b2211559324403",
        "type": "ui_text",
        "z": "0d892a33550c80ee",
        "group": "382598d1a0b04297",
        "order": 9,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Location",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 760,
        "y": 240,
        "wires": []
    },
    {
        "id": "e74c9dc6b541c0d7",
        "type": "function",
        "z": "0d892a33550c80ee",
        "d": true,
        "name": "Weather",
        "func": "var newMsg = { payload: msg.payload.weather};\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 320,
        "wires": [
            [
                "cbcc304092cdb561"
            ]
        ],
        "info": "msg.payload.tempc"
    },
    {
        "id": "cbcc304092cdb561",
        "type": "ui_text",
        "z": "0d892a33550c80ee",
        "group": "382598d1a0b04297",
        "order": 12,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Weather",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 760,
        "y": 320,
        "wires": []
    },
    {
        "id": "8a55ee53a2db55cb",
        "type": "inject",
        "z": "0d892a33550c80ee",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 60,
        "wires": [
            [
                "a1fe76112c904038"
            ]
        ]
    },
    {
        "id": "a1fe76112c904038",
        "type": "change",
        "z": "0d892a33550c80ee",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$now()",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 60,
        "wires": [
            [
                "79fafa5e297b9743"
            ]
        ]
    },
    {
        "id": "2f9dbaa32fe49996",
        "type": "change",
        "z": "0d892a33550c80ee",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload & ' °C'",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 160,
        "wires": [
            [
                "38b59de679abb21a"
            ]
        ]
    },
    {
        "id": "21a27c8c7d168047",
        "type": "ui_media",
        "z": "0d892a33550c80ee",
        "group": "382598d1a0b04297",
        "name": "",
        "width": 6,
        "height": 2,
        "order": 3,
        "category": "",
        "file": "agilian-white.png",
        "layout": "adjust",
        "showcontrols": true,
        "loop": true,
        "onstart": false,
        "muted": false,
        "scope": "local",
        "tooltip": "",
        "x": 750,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "79fafa5e297b9743",
        "type": "function",
        "z": "0d892a33550c80ee",
        "name": "Format time",
        "func": "var d = new Date(msg.payload)\nmsg.payload = d.toLocaleString('zh-CN', {timeZone: 'PRC'})\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 60,
        "wires": [
            [
                "eb62de1be62c9b42"
            ]
        ]
    },
    {
        "id": "4640b22b4a6037a3",
        "type": "debug",
        "z": "0d892a33550c80ee",
        "name": "OpenWeather",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 440,
        "wires": []
    },
    {
        "id": "eba8ade191d6a7a7",
        "type": "mqtt in",
        "z": "0d892a33550c80ee",
        "name": "",
        "topic": "Agilian/Temperature",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "e42cdc18ac58f86d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 590,
        "y": 200,
        "wires": [
            [
                "38b59de679abb21a"
            ]
        ]
    },
    {
        "id": "62c16a87e2c904ca",
        "type": "mqtt in",
        "z": "0d892a33550c80ee",
        "name": "",
        "topic": "Agilian/Location",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "e42cdc18ac58f86d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 580,
        "y": 280,
        "wires": [
            [
                "05b2211559324403"
            ]
        ]
    },
    {
        "id": "d28ec61af80ccf07",
        "type": "mqtt in",
        "z": "0d892a33550c80ee",
        "name": "",
        "topic": "Agilian/Weather",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "e42cdc18ac58f86d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 580,
        "y": 360,
        "wires": [
            [
                "cbcc304092cdb561"
            ]
        ]
    },
    {
        "id": "51156fcecf87485f",
        "type": "inject",
        "z": "0d892a33550c80ee",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "405b94ef84977da099dee711d2195033",
        "payloadType": "msg",
        "x": 170,
        "y": 120,
        "wires": [
            [
                "6315c575b210f78b"
            ]
        ]
    },
    {
        "id": "d22e80b231d0d76a",
        "type": "ui_spacer",
        "z": "0d892a33550c80ee",
        "name": "spacer",
        "group": "382598d1a0b04297",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "d33d7aeec2911f58",
        "type": "ui_spacer",
        "z": "0d892a33550c80ee",
        "name": "spacer",
        "group": "382598d1a0b04297",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "1b17c643f30125ed",
        "type": "ui_spacer",
        "z": "0d892a33550c80ee",
        "name": "spacer",
        "group": "134a9efe43075fa7",
        "order": 17,
        "width": "12",
        "height": "1"
    },
    {
        "id": "71ad55c1f924b7f6",
        "type": "ui_spacer",
        "z": "0d892a33550c80ee",
        "name": "spacer",
        "group": "4d03169ad0058e9c",
        "order": 3,
        "width": "6",
        "height": "1"
    },
    {
        "id": "dd869b8d2ca95037",
        "type": "ui_spacer",
        "z": "0d892a33550c80ee",
        "name": "spacer",
        "group": "8a88ba4336383a98",
        "order": 4,
        "width": "6",
        "height": "1"
    },
    {
        "id": "a8bb4d2c67a6b6ca",
        "type": "ui_spacer",
        "z": "0d892a33550c80ee",
        "name": "spacer",
        "group": "8560c9625c2f462e",
        "order": 5,
        "width": "6",
        "height": "1"
    },
    {
        "id": "16eb7d0c60de9d8a",
        "type": "ui_spacer",
        "z": "0d892a33550c80ee",
        "name": "spacer",
        "group": "858c386bfc79804f",
        "order": 6,
        "width": "6",
        "height": "1"
    },
    {
        "id": "e42cdc18ac58f86d",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mqtt://mqtt.button.plus",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "5",
        "keepalive": "20",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "4d03169ad0058e9c",
        "type": "ui_group",
        "name": "1st Floor",
        "tab": "eac9bf1de9b14e90",
        "order": 3,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "134a9efe43075fa7",
        "type": "ui_group",
        "name": "Dust Free Room",
        "tab": "eac9bf1de9b14e90",
        "order": 2,
        "disp": true,
        "width": 12,
        "collapse": false,
        "className": ""
    },
    {
        "id": "8a88ba4336383a98",
        "type": "ui_group",
        "name": "Main AC",
        "tab": "eac9bf1de9b14e90",
        "order": 4,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "8560c9625c2f462e",
        "type": "ui_group",
        "name": "CNC Room",
        "tab": "eac9bf1de9b14e90",
        "order": 5,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "858c386bfc79804f",
        "type": "ui_group",
        "name": "Injection Room",
        "tab": "eac9bf1de9b14e90",
        "order": 6,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "813d2b24e7b11477",
        "type": "mqtt-broker",
        "name": "",
        "broker": "39.105.38.254",
        "port": "10051",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "f50e7b4a96aea525",
        "type": "ui_group",
        "name": "DFR Power 1 Week Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 9,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "d04bbe9ab86a0e58",
        "type": "ui_group",
        "name": "DFR Power 1 Month Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 10,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "f3e39ec1c6bfc6b0",
        "type": "ui_group",
        "name": "DFR Power 1 Day Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 8,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "7c17fc93a9c0fa27",
        "type": "ui_group",
        "name": "Main AC Power 1 Week Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 36,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "959686b5345bb54c",
        "type": "ui_group",
        "name": "Main AC Power 1 Month Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 37,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "71506c1ac5fc6889",
        "type": "ui_group",
        "name": "Main AC Power 1 Day Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 35,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "2fd3274dd9061561",
        "type": "ui_group",
        "name": "1st Floor Power 1 Week Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 33,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "e1118f823ee96eb0",
        "type": "ui_group",
        "name": "1st Floor Power 1 Month Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 34,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "4493f90d67eed3b4",
        "type": "ui_group",
        "name": "1st Floor Power 1 Day Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 32,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "3c876f7a4568a871",
        "type": "ui_group",
        "name": "DFR Temperature 1 Day Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 11,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "8f9c5170d106b907",
        "type": "ui_group",
        "name": "DFR Temperature 1 Week Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 12,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "4f2d81879549813b",
        "type": "ui_group",
        "name": "DFR Temperature 1 Month Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 13,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "1fb20e85cb193c8a",
        "type": "ui_group",
        "name": "DFR Humidity 1 Day Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 14,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "6fe9f72b118339a8",
        "type": "ui_group",
        "name": "DFR Humidity 1 Week Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 15,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "6071c299f4ef976a",
        "type": "ui_group",
        "name": "DFR Humidity 1 Month Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 16,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "973afd5460fdb3f8",
        "type": "ui_group",
        "name": "DFR PM 1.0 1 Day Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 17,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "f54f6c83536c707e",
        "type": "ui_group",
        "name": "DFR PM 1.0 1 Week Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 18,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "6cf9bd26f9a140a5",
        "type": "ui_group",
        "name": "DFR PM 1.0 1 Month Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 19,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "61e1da5a42ee14de",
        "type": "ui_group",
        "name": "DFR PM 2.5 1 Day Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 20,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "08067b21ccdf7f3b",
        "type": "ui_group",
        "name": "DFR PM 2.5 1 Week Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 21,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "6cd9acf42fedaa46",
        "type": "ui_group",
        "name": "DFR PM 2.5 1 Month Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 22,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "89669cd2cddbe28c",
        "type": "ui_group",
        "name": "DFR PM 10 1 Day Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 23,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "cc45368ec1a8b10d",
        "type": "ui_group",
        "name": "DFR PM 10 1 Week Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 24,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "ec242660b544e94f",
        "type": "ui_group",
        "name": "DFR PM 10 1 Month Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 25,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "a404680db06bc696",
        "type": "ui_group",
        "name": "DFR CO2 1 Day Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 26,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "1ba0eb30f6bc4f06",
        "type": "ui_group",
        "name": "DFR CO2 1 Week Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 27,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "5bb64af96b6e7f22",
        "type": "ui_group",
        "name": "DFR CO2 1 Month Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 28,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "bdeaddaaa099c1bd",
        "type": "ui_group",
        "name": "DFR Human 1 Day Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 29,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "8618298f401fb52f",
        "type": "ui_group",
        "name": "DFR Human 1 Week Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 30,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "5a10f4f686bb3d52",
        "type": "ui_group",
        "name": "DFR Human 1 Month Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 31,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "bd767f90600dc992",
        "type": "ui_group",
        "name": "CNC Room Power 1 Day Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 38,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "4d717acd255a1442",
        "type": "ui_group",
        "name": "CNC Room Power 1 Week Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 39,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "62b7e7e0240be3ee",
        "type": "ui_group",
        "name": "CNC Room Power 1 Month Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 40,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "9c9ac69b2ed7ccb8",
        "type": "ui_group",
        "name": "Injection Room Power 1 Day Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 41,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "4d82b3069abb01d9",
        "type": "ui_group",
        "name": "Injection Room Power 1 Week Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 42,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "dfe535f3c5f40006",
        "type": "ui_group",
        "name": "Injection Room Power 1 Month Analysis",
        "tab": "eac9bf1de9b14e90",
        "order": 43,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "382598d1a0b04297",
        "type": "ui_group",
        "name": "General",
        "tab": "eac9bf1de9b14e90",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "eac9bf1de9b14e90",
        "type": "ui_tab",
        "name": "Agilian",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]
